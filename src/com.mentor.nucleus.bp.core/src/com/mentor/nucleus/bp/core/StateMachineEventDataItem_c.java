      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.StateMachineEventDataItem_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_STATE_MACHINE_EVENT_DATA_ITEM extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class StateMachineEventDataItem_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public StateMachineEventDataItem_c(ModelRoot modelRoot,
       java.util.UUID         p_m_smedi_id,
       java.util.UUID         p_m_sm_id,
       String       p_m_name,
       String       p_m_descrip,
       java.util.UUID         p_m_dt_id,
       String       p_m_dimensions,
       java.util.UUID         p_m_smevt_id,
       java.util.UUID         p_m_previous_smedi_id)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_smedi_id = IdAssigner.preprocessUUID(p_m_smedi_id);
       //extract 28 bit value only            
       m_smedi_idLongBased = 0xfffffff & p_m_smedi_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_sm_id = IdAssigner.preprocessUUID(p_m_sm_id);
       m_name = p_m_name;
       m_descrip = p_m_descrip;
       m_dimensions = p_m_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_smevt_id = IdAssigner.preprocessUUID(p_m_smevt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_previous_smedi_id = IdAssigner.preprocessUUID(p_m_previous_smedi_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
        
    setUniqueId(m_smedi_id);
    Object [] key = {m_sm_id,m_smedi_id};
    addInstanceToMap(key);
  }
  static public StateMachineEventDataItem_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_smedi_id,
       java.util.UUID         p_m_sm_id,
       String       p_m_name,
       String       p_m_descrip,
       java.util.UUID         p_m_dt_id,
       String       p_m_dimensions,
       java.util.UUID         p_m_smevt_id,
       java.util.UUID         p_m_previous_smedi_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(StateMachineEventDataItem_c.class);
      StateMachineEventDataItem_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_sm_id,p_m_smedi_id};
          new_inst = (StateMachineEventDataItem_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_smedi_id = IdAssigner.preprocessUUID(p_m_smedi_id);
       //extract 28 bit value only            
       new_inst.m_smedi_idLongBased = 0xfffffff & p_m_smedi_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_sm_id = IdAssigner.preprocessUUID(p_m_sm_id);
       new_inst.m_name = p_m_name;
       new_inst.m_descrip = p_m_descrip;
       new_inst.m_dimensions = p_m_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_smevt_id = IdAssigner.preprocessUUID(p_m_smevt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_previous_smedi_id = IdAssigner.preprocessUUID(p_m_previous_smedi_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new StateMachineEventDataItem_c(modelRoot,
p_m_smedi_id,
p_m_sm_id,
p_m_name,
p_m_descrip,
p_m_dt_id,
p_m_dimensions,
p_m_smevt_id,
p_m_previous_smedi_id
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public StateMachineEventDataItem_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_smedi_id,
       java.util.UUID         p_m_sm_id,
       String       p_m_name,
       String       p_m_descrip,
       java.util.UUID         p_m_dt_id,
       String       p_m_dimensions,
       java.util.UUID         p_m_smevt_id,
       java.util.UUID         p_m_previous_smedi_id){
    InstanceList instances = modelRoot.getInstanceList(StateMachineEventDataItem_c.class);
    StateMachineEventDataItem_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_sm_id
        ,
        p_m_smedi_id
            };
        source = (StateMachineEventDataItem_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_smedi_id = IdAssigner.preprocessUUID(p_m_smedi_id);
       //extract 28 bit value only            
       source.m_smedi_idLongBased = 0xfffffff & p_m_smedi_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_sm_id = IdAssigner.preprocessUUID(p_m_sm_id);
       source.m_name = p_m_name;
       source.m_descrip = p_m_descrip;
       source.m_dimensions = p_m_dimensions;
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_smevt_id = IdAssigner.preprocessUUID(p_m_smevt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_previous_smedi_id = IdAssigner.preprocessUUID(p_m_previous_smedi_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_dt_id = IdAssigner.preprocessUUID(p_m_dt_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    StateMachineEventDataItem_c new_inst = new StateMachineEventDataItem_c(modelRoot,
p_m_smedi_id,
p_m_sm_id,
p_m_name,
p_m_descrip,
p_m_dt_id,
p_m_dimensions,
p_m_smevt_id,
p_m_previous_smedi_id
);
    return new_inst;
  }
  public StateMachineEventDataItem_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_smedi_id = idAssigner.createUUID();
     m_sm_id = IdAssigner.NULL_UUID;   
     m_name = "";   
     m_descrip = "";   
     m_dimensions = "";   
     m_smevt_id = IdAssigner.NULL_UUID;   
     m_previous_smedi_id = IdAssigner.NULL_UUID;   
     m_dt_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_smedi_id);
    Object [] key = {m_sm_id,m_smedi_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_sm_id,m_smedi_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p4
			// round p5
	if (m_sm_id !=  p_newKey ){
	
		m_sm_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof StateMachineEventDataItem_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof StateMachineEventDataItem_c)) {
           return false;
       }
       
       StateMachineEventDataItem_c me = (StateMachineEventDataItem_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if ((IdAssigner.NULL_UUID.equals(getSm_id()) || IdAssigner.NULL_UUID.equals(((StateMachineEventDataItem_c)elem).getSm_id())) && this != elem) {
      	return false;
      }
      if (!getSm_id().equals(((StateMachineEventDataItem_c)elem).getSm_id())) return false;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if ((IdAssigner.NULL_UUID.equals(getSmedi_id()) || IdAssigner.NULL_UUID.equals(((StateMachineEventDataItem_c)elem).getSmedi_id())) && this != elem) {
      	return false;
      }
      if (!getSmedi_id().equals(((StateMachineEventDataItem_c)elem).getSmedi_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof StateMachineEventDataItem_c)) {
           return false;
       }
       
       StateMachineEventDataItem_c me = (StateMachineEventDataItem_c)elem;
      if (!getSm_idCachedValue().equals(((StateMachineEventDataItem_c)elem).getSm_idCachedValue())) return false;
      if (!getSmedi_id().equals(((StateMachineEventDataItem_c)elem).getSmedi_id())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_smedi_id ;
  private long m_smedi_idLongBased ;
  private java.util.UUID         m_sm_id ;
  private String       m_name ;
  private String       m_descrip ;
  private String       m_dimensions ;
  private java.util.UUID         m_smevt_id ;
  private java.util.UUID         m_previous_smedi_id ;
  private java.util.UUID         m_dt_id ;
      
// declare association references from this class
  
  
    
// referring navigation

StateMachine_c IsCarriedOnEventsIntoStateMachine ;
public void relateAcrossR516To(StateMachine_c target)
{
	relateAcrossR516To(target, true);
}
public void relateAcrossR516To(StateMachine_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsCarriedOnEventsIntoStateMachine) return;  // already related

    if ( IsCarriedOnEventsIntoStateMachine != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsCarriedOnEventsIntoStateMachine != null) {
    
        IsCarriedOnEventsIntoStateMachine.clearBackPointerR516To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"StateMachineEventDataItem_c.relateAcrossR516To(StateMachine_c target)", 
			"Relate performed across R516 from State Machine Event Data Item to State Machine without unrelate of prior instance.");  
		}
    }
                
    	IsCarriedOnEventsIntoStateMachine = target ;
        m_sm_id = target.getSm_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR516To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "516", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR516From(StateMachine_c target)
{
	unrelateAcrossR516From(target, true);
}
public void unrelateAcrossR516From(StateMachine_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsCarriedOnEventsIntoStateMachine == null) return;  // already unrelated
	
	if (target != IsCarriedOnEventsIntoStateMachine) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R516", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR516To(this);
    }
    

      if(IsCarriedOnEventsIntoStateMachine != null) {
      
        m_sm_id = IsCarriedOnEventsIntoStateMachine.getSm_id();
        IsCarriedOnEventsIntoStateMachine = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "516", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static StateMachineEventDataItem_c getOneSM_EVTDIOnR516(StateMachine_c [] targets)
{
    return getOneSM_EVTDIOnR516(targets, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR516(StateMachine_c [] targets, ClassQueryInterface_c test)
{
    StateMachineEventDataItem_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSM_EVTDIOnR516(targets[i], test);
        }
    }

    return ret_val;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR516(StateMachine_c target)
{
  return getOneSM_EVTDIOnR516(target, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR516(StateMachine_c target, boolean loadComponent)
{
    return getOneSM_EVTDIOnR516(target.getModelRoot(), target, null, loadComponent);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR516(StateMachine_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSM_EVTDIOnR516(target.getModelRoot(), target, test);
  }
  return null;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR516(ModelRoot modelRoot, StateMachine_c target, ClassQueryInterface_c test)
{
	return getOneSM_EVTDIOnR516(modelRoot, target, test, true);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR516(ModelRoot modelRoot, StateMachine_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneSM_EVTDIOnR516(modelRoot,target,test);
}
private static StateMachineEventDataItem_c find_getOneSM_EVTDIOnR516(ModelRoot modelRoot, StateMachine_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_CanAsynchronouslyCommunicateViaStateMachineEventDataItemCanAsynchronouslyCommunicateVia_R516) {
	    for ( int i = 0; i < target.backPointer_CanAsynchronouslyCommunicateViaStateMachineEventDataItemCanAsynchronouslyCommunicateVia_R516.size(); ++i ) {
	      StateMachineEventDataItem_c source = (StateMachineEventDataItem_c)target.backPointer_CanAsynchronouslyCommunicateViaStateMachineEventDataItemCanAsynchronouslyCommunicateVia_R516.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR516(StateMachine_c [] targets)
{
  return getManySM_EVTDIsOnR516(targets, null);
}
public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR516(StateMachine_c [] targets, boolean loadComponent)
{
  return getManySM_EVTDIsOnR516(targets, null, loadComponent);
}
public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR516(StateMachine_c [] targets, ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR516(targets, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR516(StateMachine_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new StateMachineEventDataItem_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(StateMachineEventDataItem_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_CanAsynchronouslyCommunicateViaStateMachineEventDataItemCanAsynchronouslyCommunicateVia_R516) {
	    for (int j = 0; j < targets[i].backPointer_CanAsynchronouslyCommunicateViaStateMachineEventDataItemCanAsynchronouslyCommunicateVia_R516.size(); ++j) {
	      StateMachineEventDataItem_c source = (StateMachineEventDataItem_c)targets[i].backPointer_CanAsynchronouslyCommunicateViaStateMachineEventDataItemCanAsynchronouslyCommunicateVia_R516.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	StateMachineEventDataItem_c[] ret_set = new StateMachineEventDataItem_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new StateMachineEventDataItem_c[0];
  }
  }

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR516(StateMachine_c target)
{
  return getManySM_EVTDIsOnR516(target, null);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR516(StateMachine_c target, boolean loadComponent)
{
  return getManySM_EVTDIsOnR516(target, null, loadComponent);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR516(StateMachine_c target, ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR516(target, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR516(StateMachine_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new StateMachineEventDataItem_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_CanAsynchronouslyCommunicateViaStateMachineEventDataItemCanAsynchronouslyCommunicateVia_R516) {
    for (int i = 0; i < target.backPointer_CanAsynchronouslyCommunicateViaStateMachineEventDataItemCanAsynchronouslyCommunicateVia_R516.size(); ++i) {
      StateMachineEventDataItem_c source = (StateMachineEventDataItem_c)target.backPointer_CanAsynchronouslyCommunicateViaStateMachineEventDataItemCanAsynchronouslyCommunicateVia_R516.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		StateMachineEventDataItem_c[] ret_set = new StateMachineEventDataItem_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new StateMachineEventDataItem_c[0];
	}
  }


  
    
// referring navigation

DataType_c IsDefinedByDataType ;
public void relateAcrossR524To(DataType_c target)
{
	relateAcrossR524To(target, true);
}
public void relateAcrossR524To(DataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsDefinedByDataType) return;  // already related

    if ( IsDefinedByDataType != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsDefinedByDataType != null) {
        UmlProblem.removeXtUMLProblem(this, IsDefinedByDataType);
    
        IsDefinedByDataType.clearBackPointerR524To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"StateMachineEventDataItem_c.relateAcrossR524To(DataType_c target)", 
			"Relate performed across R524 from State Machine Event Data Item to Data Type without unrelate of prior instance.");  
		}
    }
                
    	IsDefinedByDataType = target ;
        if(IdAssigner.NULL_UUID.equals(target.getDt_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_dt_id = target.getDt_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR524To(this);
        target.addRef();
        UmlProblem.handleDanglingReference(this, target);
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "524", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR524From(DataType_c target)
{
	unrelateAcrossR524From(target, true);
}
public void unrelateAcrossR524From(DataType_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsDefinedByDataType == null) return;  // already unrelated
	
	if (target != IsDefinedByDataType) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R524", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR524To(this);
    }
    

      if(IsDefinedByDataType != null) {
      
        m_dt_id = IsDefinedByDataType.getDt_id();
        if(IdAssigner.NULL_UUID.equals(m_dt_id))
        {
          m_dt_id = IsDefinedByDataType.getDt_idCachedValue();
        }       
        IsDefinedByDataType = null ;
        target.removeRef();
        UmlProblem.removeXtUMLProblem(this, target);
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "524", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static StateMachineEventDataItem_c getOneSM_EVTDIOnR524(DataType_c [] targets)
{
    return getOneSM_EVTDIOnR524(targets, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR524(DataType_c [] targets, ClassQueryInterface_c test)
{
    StateMachineEventDataItem_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSM_EVTDIOnR524(targets[i], test);
        }
    }

    return ret_val;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR524(DataType_c target)
{
  return getOneSM_EVTDIOnR524(target, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR524(DataType_c target, boolean loadComponent)
{
    return getOneSM_EVTDIOnR524(target.getModelRoot(), target, null, loadComponent);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR524(DataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSM_EVTDIOnR524(target.getModelRoot(), target, test);
  }
  return null;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR524(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test)
{
	return getOneSM_EVTDIOnR524(modelRoot, target, test, true);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR524(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  StateMachineEventDataItem_c result = null;
  
  result=find_getOneSM_EVTDIOnR524(modelRoot,target,test);
  if (result==null && (loadComponent)) {
     // not a Containment Relation
     List comps =  PersistenceManager.findAllComponents(modelRoot,StateMachineEventDataItem_c.class);
    for (int i = 0; i < comps.size(); i++) {
      PersistableModelComponent component = (PersistableModelComponent) comps.get(i);
      if (!component.isLoaded()) {
        try {
          component.load(new NullProgressMonitor());
          result=find_getOneSM_EVTDIOnR524(modelRoot,target,test);
          if(result!=null) return result;
        } catch (Exception e) {
          CorePlugin.logError("Error Loading component", e);
        }
      }
    }
  }
  
  return result;
}
private static StateMachineEventDataItem_c find_getOneSM_EVTDIOnR524(ModelRoot modelRoot, DataType_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_DefinesTheTypeOfStateMachineEventDataItemDefinesTheTypeOf_R524) {
	    for ( int i = 0; i < target.backPointer_DefinesTheTypeOfStateMachineEventDataItemDefinesTheTypeOf_R524.size(); ++i ) {
	      StateMachineEventDataItem_c source = (StateMachineEventDataItem_c)target.backPointer_DefinesTheTypeOfStateMachineEventDataItemDefinesTheTypeOf_R524.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR524(DataType_c [] targets)
{
  return getManySM_EVTDIsOnR524(targets, null);
}
public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR524(DataType_c [] targets, boolean loadComponent)
{
  return getManySM_EVTDIsOnR524(targets, null, loadComponent);
}
public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR524(DataType_c [] targets, ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR524(targets, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR524(DataType_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new StateMachineEventDataItem_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, StateMachineEventDataItem_c.class);
  
  }
 
   InstanceList instances = modelRoot.getInstanceList(StateMachineEventDataItem_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_DefinesTheTypeOfStateMachineEventDataItemDefinesTheTypeOf_R524) {
	    for (int j = 0; j < targets[i].backPointer_DefinesTheTypeOfStateMachineEventDataItemDefinesTheTypeOf_R524.size(); ++j) {
	      StateMachineEventDataItem_c source = (StateMachineEventDataItem_c)targets[i].backPointer_DefinesTheTypeOfStateMachineEventDataItemDefinesTheTypeOf_R524.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	StateMachineEventDataItem_c[] ret_set = new StateMachineEventDataItem_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new StateMachineEventDataItem_c[0];
  }
  }

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR524(DataType_c target)
{
  return getManySM_EVTDIsOnR524(target, null);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR524(DataType_c target, boolean loadComponent)
{
  return getManySM_EVTDIsOnR524(target, null, loadComponent);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR524(DataType_c target, ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR524(target, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR524(DataType_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new StateMachineEventDataItem_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  if(loadComponent){
     //not a Containment Relation
	 PersistenceManager.ensureAllInstancesLoaded(modelRoot, StateMachineEventDataItem_c.class);
  }
  Vector matches = new Vector();
  synchronized(target.backPointer_DefinesTheTypeOfStateMachineEventDataItemDefinesTheTypeOf_R524) {
    for (int i = 0; i < target.backPointer_DefinesTheTypeOfStateMachineEventDataItemDefinesTheTypeOf_R524.size(); ++i) {
      StateMachineEventDataItem_c source = (StateMachineEventDataItem_c)target.backPointer_DefinesTheTypeOfStateMachineEventDataItemDefinesTheTypeOf_R524.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		StateMachineEventDataItem_c[] ret_set = new StateMachineEventDataItem_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new StateMachineEventDataItem_c[0];
	}
  }


  
    
// referring navigation

StateMachineEvent_c CarriedByStateMachineEvent ;
public void relateAcrossR532To(StateMachineEvent_c target)
{
	relateAcrossR532To(target, true);
}
public void relateAcrossR532To(StateMachineEvent_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == CarriedByStateMachineEvent) return;  // already related

    if ( CarriedByStateMachineEvent != target ) {
    
    Object oldKey = getInstanceKey();

    if (CarriedByStateMachineEvent != null) {
    
        CarriedByStateMachineEvent.clearBackPointerR532To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"StateMachineEventDataItem_c.relateAcrossR532To(StateMachineEvent_c target)", 
			"Relate performed across R532 from State Machine Event Data Item to State Machine Event without unrelate of prior instance.");  
		}
    }
                
    	CarriedByStateMachineEvent = target ;
        m_smevt_id = target.getSmevt_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR532To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "532", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR532From(StateMachineEvent_c target)
{
	unrelateAcrossR532From(target, true);
}
public void unrelateAcrossR532From(StateMachineEvent_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (CarriedByStateMachineEvent == null) return;  // already unrelated
	
	if (target != CarriedByStateMachineEvent) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R532", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR532To(this);
    }
    

      if(CarriedByStateMachineEvent != null) {
      
        m_smevt_id = CarriedByStateMachineEvent.getSmevt_id();
        CarriedByStateMachineEvent = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "532", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static StateMachineEventDataItem_c getOneSM_EVTDIOnR532(StateMachineEvent_c [] targets)
{
    return getOneSM_EVTDIOnR532(targets, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR532(StateMachineEvent_c [] targets, ClassQueryInterface_c test)
{
    StateMachineEventDataItem_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSM_EVTDIOnR532(targets[i], test);
        }
    }

    return ret_val;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR532(StateMachineEvent_c target)
{
  return getOneSM_EVTDIOnR532(target, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR532(StateMachineEvent_c target, boolean loadComponent)
{
    return getOneSM_EVTDIOnR532(target.getModelRoot(), target, null, loadComponent);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR532(StateMachineEvent_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSM_EVTDIOnR532(target.getModelRoot(), target, test);
  }
  return null;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR532(ModelRoot modelRoot, StateMachineEvent_c target, ClassQueryInterface_c test)
{
	return getOneSM_EVTDIOnR532(modelRoot, target, test, true);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR532(ModelRoot modelRoot, StateMachineEvent_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneSM_EVTDIOnR532(modelRoot,target,test);
}
private static StateMachineEventDataItem_c find_getOneSM_EVTDIOnR532(ModelRoot modelRoot, StateMachineEvent_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_CarriesStateMachineEventDataItemCarries_R532) {
	    for ( int i = 0; i < target.backPointer_CarriesStateMachineEventDataItemCarries_R532.size(); ++i ) {
	      StateMachineEventDataItem_c source = (StateMachineEventDataItem_c)target.backPointer_CarriesStateMachineEventDataItemCarries_R532.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR532(StateMachineEvent_c [] targets)
{
  return getManySM_EVTDIsOnR532(targets, null);
}
public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR532(StateMachineEvent_c [] targets, boolean loadComponent)
{
  return getManySM_EVTDIsOnR532(targets, null, loadComponent);
}
public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR532(StateMachineEvent_c [] targets, ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR532(targets, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR532(StateMachineEvent_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new StateMachineEventDataItem_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(StateMachineEventDataItem_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_CarriesStateMachineEventDataItemCarries_R532) {
	    for (int j = 0; j < targets[i].backPointer_CarriesStateMachineEventDataItemCarries_R532.size(); ++j) {
	      StateMachineEventDataItem_c source = (StateMachineEventDataItem_c)targets[i].backPointer_CarriesStateMachineEventDataItemCarries_R532.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	StateMachineEventDataItem_c[] ret_set = new StateMachineEventDataItem_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new StateMachineEventDataItem_c[0];
  }
  }

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR532(StateMachineEvent_c target)
{
  return getManySM_EVTDIsOnR532(target, null);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR532(StateMachineEvent_c target, boolean loadComponent)
{
  return getManySM_EVTDIsOnR532(target, null, loadComponent);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR532(StateMachineEvent_c target, ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR532(target, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR532(StateMachineEvent_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new StateMachineEventDataItem_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_CarriesStateMachineEventDataItemCarries_R532) {
    for (int i = 0; i < target.backPointer_CarriesStateMachineEventDataItemCarries_R532.size(); ++i) {
      StateMachineEventDataItem_c source = (StateMachineEventDataItem_c)target.backPointer_CarriesStateMachineEventDataItemCarries_R532.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		StateMachineEventDataItem_c[] ret_set = new StateMachineEventDataItem_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new StateMachineEventDataItem_c[0];
	}
  }


  
    
// referring navigation

StateMachineEventDataItem_c SucceedsStateMachineEventDataItem ;
public void relateAcrossR533ToSucceeds(StateMachineEventDataItem_c target)
{
	relateAcrossR533ToSucceeds(target, true);
}
public void relateAcrossR533ToSucceeds(StateMachineEventDataItem_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == SucceedsStateMachineEventDataItem) return;  // already related

    if ( SucceedsStateMachineEventDataItem != target ) {
    
    Object oldKey = getInstanceKey();

    if (SucceedsStateMachineEventDataItem != null) {
    
        SucceedsStateMachineEventDataItem.clearBackPointerR533ToPrecedes(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"StateMachineEventDataItem_c.relateAcrossR533ToSucceeds(StateMachineEventDataItem_c target)", 
			"Relate performed across R533 from State Machine Event Data Item to State Machine Event Data Item without unrelate of prior instance.");  
		}
    }
                
    	SucceedsStateMachineEventDataItem = target ;
        if(IdAssigner.NULL_UUID.equals(target.getSm_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_sm_id = target.getSm_idCachedValue();
        }
        m_previous_smedi_id = target.getSmedi_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR533ToPrecedes(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "533", "Succeeds");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR533FromSucceeds(StateMachineEventDataItem_c target)
{
	unrelateAcrossR533FromSucceeds(target, true);
}
public void unrelateAcrossR533FromSucceeds(StateMachineEventDataItem_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (SucceedsStateMachineEventDataItem == null) return;  // already unrelated
	
	if (target != SucceedsStateMachineEventDataItem) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R533", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR533ToPrecedes(this);
    }
    

      if(SucceedsStateMachineEventDataItem != null) {
      
        m_sm_id = SucceedsStateMachineEventDataItem.getSm_id();
        if(IdAssigner.NULL_UUID.equals(m_sm_id))
        {
          m_sm_id = SucceedsStateMachineEventDataItem.getSm_idCachedValue();
        }       
        m_previous_smedi_id = SucceedsStateMachineEventDataItem.getSmedi_id();
        SucceedsStateMachineEventDataItem = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "533", "Succeeds");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static StateMachineEventDataItem_c getOneSM_EVTDIOnR533Precedes(StateMachineEventDataItem_c [] targets)
{
    return getOneSM_EVTDIOnR533Precedes(targets, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR533Precedes(StateMachineEventDataItem_c [] targets, ClassQueryInterface_c test)
{
    StateMachineEventDataItem_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSM_EVTDIOnR533Precedes(targets[i], test);
        }
    }

    return ret_val;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR533Precedes(StateMachineEventDataItem_c target)
{
  return getOneSM_EVTDIOnR533Precedes(target, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR533Precedes(StateMachineEventDataItem_c target, boolean loadComponent)
{
    return getOneSM_EVTDIOnR533Precedes(target.getModelRoot(), target, null, loadComponent);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR533Precedes(StateMachineEventDataItem_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSM_EVTDIOnR533Precedes(target.getModelRoot(), target, test);
  }
  return null;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR533Precedes(ModelRoot modelRoot, StateMachineEventDataItem_c target, ClassQueryInterface_c test)
{
	return getOneSM_EVTDIOnR533Precedes(modelRoot, target, test, true);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR533Precedes(ModelRoot modelRoot, StateMachineEventDataItem_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneSM_EVTDIOnR533Precedes(modelRoot,target,test);
}
private static StateMachineEventDataItem_c find_getOneSM_EVTDIOnR533Precedes(ModelRoot modelRoot, StateMachineEventDataItem_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    StateMachineEventDataItem_c source = (StateMachineEventDataItem_c)target.backPointer_PrecedesStateMachineEventDataItemPrecedes_R533;
    if (source != null && (test == null || test.evaluate(source))) {
      return source;
    }
  }
  // not found
  return null ;
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Precedes(StateMachineEventDataItem_c [] targets)
{
  return getManySM_EVTDIsOnR533Precedes(targets, null);
}
public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Precedes(StateMachineEventDataItem_c [] targets, boolean loadComponent)
{
  return getManySM_EVTDIsOnR533Precedes(targets, null, loadComponent);
}
public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Precedes(StateMachineEventDataItem_c [] targets, ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR533Precedes(targets, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Precedes(StateMachineEventDataItem_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new StateMachineEventDataItem_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(StateMachineEventDataItem_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
      StateMachineEventDataItem_c source = (StateMachineEventDataItem_c)targets[i].backPointer_PrecedesStateMachineEventDataItemPrecedes_R533;
      if (source != null && (test == null || test.evaluate(source))) {
        matches.add(source);
      }
  }
  if (matches.size() > 0) {
	StateMachineEventDataItem_c[] ret_set = new StateMachineEventDataItem_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new StateMachineEventDataItem_c[0];
  }
  }

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Precedes(StateMachineEventDataItem_c target)
{
  if (target != null) {
    StateMachineEventDataItem_c [] targetArray = new StateMachineEventDataItem_c[1];
    targetArray[0] = target;
    return getManySM_EVTDIsOnR533Precedes(targetArray);
  } else {
    StateMachineEventDataItem_c [] result = new StateMachineEventDataItem_c [0] ;
  return result ;
}
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Precedes(StateMachineEventDataItem_c target, boolean loadComponent)
{
  if (target != null) {
    StateMachineEventDataItem_c [] targetArray = new StateMachineEventDataItem_c[1];
    targetArray[0] = target;
    return getManySM_EVTDIsOnR533Precedes(targetArray, loadComponent);
  } else {
    StateMachineEventDataItem_c [] result = new StateMachineEventDataItem_c [0] ;
  return result ;
}
}




// declare associations referring to this class

    
  
  
// referred to navigation

ArrayList<EventParameterReference_c> backPointer_EventParameterReference_R846 = new ArrayList<EventParameterReference_c>();

public void setEventParameterReferenceOrderInChildListR846(EventParameterReference_c target, int index) {
	unrelateAcrossR846From(target);
	EventParameterReference_c[] elements = EventParameterReference_c.getManyV_EPRsOnR846(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR846From((EventParameterReference_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR846To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR846To((EventParameterReference_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR846To(EventParameterReference_c target)
{
  if (target != null) {
    target.relateAcrossR846To(this, true) ;
  }
}

public void relateAcrossR846To(EventParameterReference_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR846To(this, notifyChanges) ;
  }
}

public void setBackPointerR846To(EventParameterReference_c target)
{
  	synchronized (backPointer_EventParameterReference_R846) {
		backPointer_EventParameterReference_R846.add(target);
	}
}

public void unrelateAcrossR846From(EventParameterReference_c target)
{
  if (target != null) {
    target.unrelateAcrossR846From(this, true) ;
  }
}

public void unrelateAcrossR846From(EventParameterReference_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR846From(this, notifyChanges) ;
  }
}

public void clearBackPointerR846To(EventParameterReference_c target)
{
  synchronized (backPointer_EventParameterReference_R846) {
	    backPointer_EventParameterReference_R846.remove(target);
	}
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR846(EventParameterReference_c [] targets)
{
    return getOneSM_EVTDIOnR846(targets, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR846(EventParameterReference_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTDIOnR846(targets, test, true);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR846(EventParameterReference_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEventDataItem_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEventDataItem_c candidate_val = getOneSM_EVTDIOnR846(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTDIOnR846(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR846(EventParameterReference_c target)
{
	return getOneSM_EVTDIOnR846(target, true);
}
public static StateMachineEventDataItem_c getOneSM_EVTDIOnR846(EventParameterReference_c target, boolean loadComponent)
{
  if (target != null) {
    return target.StateMachineEventDataItem ;
  } else {
    return null;
  }
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR846(EventParameterReference_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR846(targets, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR846(EventParameterReference_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEventDataItem_c[0];
  
  
  LinkedHashSet<StateMachineEventDataItem_c> elementsSet = new LinkedHashSet<StateMachineEventDataItem_c>();
  for (int i = 0; i < targets.length; i++) {
    StateMachineEventDataItem_c associate = targets[i].StateMachineEventDataItem;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEventDataItem_c[] result = new StateMachineEventDataItem_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR846(EventParameterReference_c [] targets)
{
  return getManySM_EVTDIsOnR846(targets, null);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR846(EventParameterReference_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    EventParameterReference_c [] targetArray = new EventParameterReference_c[1];
    targetArray[0] = target;
    return getManySM_EVTDIsOnR846(targetArray, test, loadComponent);
  } else {
    StateMachineEventDataItem_c [] result = new StateMachineEventDataItem_c [0] ;
    return result ;
  }
  
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR846(EventParameterReference_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTDIsOnR846(target, null, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR846(EventParameterReference_c target)
{
    return getManySM_EVTDIsOnR846(target, null, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR846(EventParameterReference_c target, boolean loadComponent)
{
    return getManySM_EVTDIsOnR846(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<SupplementalDataItems_c> backPointer_MakesUpSupplementalDataItemsMakesUp_R522 = new ArrayList<SupplementalDataItems_c>();

public void setSupplementalDataItemsOrderInChildListR522(SupplementalDataItems_c target, int index) {
	unrelateAcrossR522From(target);
	SupplementalDataItems_c[] elements = SupplementalDataItems_c.getManySM_SDIsOnR522(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR522From((SupplementalDataItems_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR522To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR522To((SupplementalDataItems_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR522To(SupplementalDataItems_c target)
{
  if (target != null) {
    target.relateAcrossR522To(this, true) ;
  }
}

public void relateAcrossR522To(SupplementalDataItems_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR522To(this, notifyChanges) ;
  }
}

public void setBackPointerR522To(SupplementalDataItems_c target)
{
  	synchronized (backPointer_MakesUpSupplementalDataItemsMakesUp_R522) {
		backPointer_MakesUpSupplementalDataItemsMakesUp_R522.add(target);
	}
}

public void unrelateAcrossR522From(SupplementalDataItems_c target)
{
  if (target != null) {
    target.unrelateAcrossR522From(this, true) ;
  }
}

public void unrelateAcrossR522From(SupplementalDataItems_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR522From(this, notifyChanges) ;
  }
}

public void clearBackPointerR522To(SupplementalDataItems_c target)
{
  synchronized (backPointer_MakesUpSupplementalDataItemsMakesUp_R522) {
	    backPointer_MakesUpSupplementalDataItemsMakesUp_R522.remove(target);
	}
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR522(SupplementalDataItems_c [] targets)
{
    return getOneSM_EVTDIOnR522(targets, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR522(SupplementalDataItems_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTDIOnR522(targets, test, true);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR522(SupplementalDataItems_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEventDataItem_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEventDataItem_c candidate_val = getOneSM_EVTDIOnR522(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTDIOnR522(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR522(SupplementalDataItems_c target)
{
	return getOneSM_EVTDIOnR522(target, true);
}
public static StateMachineEventDataItem_c getOneSM_EVTDIOnR522(SupplementalDataItems_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsMadeUpOfStateMachineEventDataItem ;
  } else {
    return null;
  }
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR522(SupplementalDataItems_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR522(targets, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR522(SupplementalDataItems_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEventDataItem_c[0];
  
  
  LinkedHashSet<StateMachineEventDataItem_c> elementsSet = new LinkedHashSet<StateMachineEventDataItem_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsMadeUpOfStateMachineEventDataItem == null)
	  targets[i].loadProxy();
    StateMachineEventDataItem_c associate = targets[i].IsMadeUpOfStateMachineEventDataItem;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEventDataItem_c[] result = new StateMachineEventDataItem_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR522(SupplementalDataItems_c [] targets)
{
  return getManySM_EVTDIsOnR522(targets, null);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR522(SupplementalDataItems_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    SupplementalDataItems_c [] targetArray = new SupplementalDataItems_c[1];
    targetArray[0] = target;
    return getManySM_EVTDIsOnR522(targetArray, test, loadComponent);
  } else {
    StateMachineEventDataItem_c [] result = new StateMachineEventDataItem_c [0] ;
    return result ;
  }
  
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR522(SupplementalDataItems_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTDIsOnR522(target, null, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR522(SupplementalDataItems_c target)
{
    return getManySM_EVTDIsOnR522(target, null, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR522(SupplementalDataItems_c target, boolean loadComponent)
{
    return getManySM_EVTDIsOnR522(target, null, loadComponent);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR522(EventSupplementalData_c target)
{
  return StateMachineEventDataItem_c.getOneSM_EVTDIOnR522(SupplementalDataItems_c.getOneSM_SDIOnR522(target)) ;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR522(EventSupplementalData_c target,
    ClassQueryInterface_c test)
{
  return StateMachineEventDataItem_c.getOneSM_EVTDIOnR522(SupplementalDataItems_c.getManySM_SDIsOnR522(target), test) ;
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR522(EventSupplementalData_c target,
    ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR522(target, test, true);
}
public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR522(EventSupplementalData_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  SupplementalDataItems_c [] associators = SupplementalDataItems_c.getManySM_SDIsOnR522(target, loadComponent) ;
    return StateMachineEventDataItem_c.getManySM_EVTDIsOnR522(associators, test, loadComponent) ;
}
public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR522(EventSupplementalData_c target)
{
    return getManySM_EVTDIsOnR522(target, null, true);
}
public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR522(EventSupplementalData_c target, boolean loadComponent)
{
    return getManySM_EVTDIsOnR522(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Dimensions_c> backPointer_MayHaveDimensionsMayHave_R531 = new ArrayList<Dimensions_c>();

public void setDimensionsOrderInChildListR531(Dimensions_c target, int index) {
	unrelateAcrossR531From(target);
	Dimensions_c[] elements = Dimensions_c.getManyS_DIMsOnR531(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR531From((Dimensions_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR531To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR531To((Dimensions_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR531To(Dimensions_c target)
{
  if (target != null) {
    target.relateAcrossR531To(this, true) ;
  }
}

public void relateAcrossR531To(Dimensions_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR531To(this, notifyChanges) ;
  }
}

public void setBackPointerR531To(Dimensions_c target)
{
  	synchronized (backPointer_MayHaveDimensionsMayHave_R531) {
		backPointer_MayHaveDimensionsMayHave_R531.add(target);
	}
}

public void unrelateAcrossR531From(Dimensions_c target)
{
  if (target != null) {
    target.unrelateAcrossR531From(this, true) ;
  }
}

public void unrelateAcrossR531From(Dimensions_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR531From(this, notifyChanges) ;
  }
}

public void clearBackPointerR531To(Dimensions_c target)
{
  synchronized (backPointer_MayHaveDimensionsMayHave_R531) {
	    backPointer_MayHaveDimensionsMayHave_R531.remove(target);
	}
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR531(Dimensions_c [] targets)
{
    return getOneSM_EVTDIOnR531(targets, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR531(Dimensions_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTDIOnR531(targets, test, true);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR531(Dimensions_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEventDataItem_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEventDataItem_c candidate_val = getOneSM_EVTDIOnR531(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTDIOnR531(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR531(Dimensions_c target)
{
	return getOneSM_EVTDIOnR531(target, true);
}
public static StateMachineEventDataItem_c getOneSM_EVTDIOnR531(Dimensions_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.SpecifiesOccurrencesOfStateMachineEventDataItem ;
  } else {
    return null;
  }
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR531(Dimensions_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR531(targets, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR531(Dimensions_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEventDataItem_c[0];
  
  
  LinkedHashSet<StateMachineEventDataItem_c> elementsSet = new LinkedHashSet<StateMachineEventDataItem_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].SpecifiesOccurrencesOfStateMachineEventDataItem == null)
	  targets[i].loadProxy();
    StateMachineEventDataItem_c associate = targets[i].SpecifiesOccurrencesOfStateMachineEventDataItem;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEventDataItem_c[] result = new StateMachineEventDataItem_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR531(Dimensions_c [] targets)
{
  return getManySM_EVTDIsOnR531(targets, null);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR531(Dimensions_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Dimensions_c [] targetArray = new Dimensions_c[1];
    targetArray[0] = target;
    return getManySM_EVTDIsOnR531(targetArray, test, loadComponent);
  } else {
    StateMachineEventDataItem_c [] result = new StateMachineEventDataItem_c [0] ;
    return result ;
  }
  
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR531(Dimensions_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTDIsOnR531(target, null, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR531(Dimensions_c target)
{
    return getManySM_EVTDIsOnR531(target, null, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR531(Dimensions_c target, boolean loadComponent)
{
    return getManySM_EVTDIsOnR531(target, null, loadComponent);
}


    
  
  
// referred to navigation

StateMachineEventDataItem_c backPointer_PrecedesStateMachineEventDataItemPrecedes_R533;

public void setStateMachineEventDataItemOrderInChildListR533(StateMachineEventDataItem_c target, int index) {
	unrelateAcrossR533FromPrecedes(target);
	StateMachineEventDataItem_c[] elements = StateMachineEventDataItem_c.getManySM_EVTDIsOnR533Precedes(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR533FromPrecedes((StateMachineEventDataItem_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR533ToPrecedes(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR533ToPrecedes((StateMachineEventDataItem_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR533ToPrecedes(StateMachineEventDataItem_c target)
{
  if (target != null) {
    target.relateAcrossR533ToSucceeds(this, true) ;
  }
}

public void relateAcrossR533ToPrecedes(StateMachineEventDataItem_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR533ToSucceeds(this, notifyChanges) ;
  }
}

public void setBackPointerR533ToPrecedes(StateMachineEventDataItem_c target)
{
    backPointer_PrecedesStateMachineEventDataItemPrecedes_R533 = target;
}

public void unrelateAcrossR533FromPrecedes(StateMachineEventDataItem_c target)
{
  if (target != null) {
    target.unrelateAcrossR533FromSucceeds(this, true) ;
  }
}

public void unrelateAcrossR533FromPrecedes(StateMachineEventDataItem_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR533FromSucceeds(this, notifyChanges) ;
  }
}

public void clearBackPointerR533ToPrecedes(StateMachineEventDataItem_c target)
{
	if (target == backPointer_PrecedesStateMachineEventDataItemPrecedes_R533) {
		backPointer_PrecedesStateMachineEventDataItemPrecedes_R533 = null;
	}
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR533Succeeds(StateMachineEventDataItem_c [] targets)
{
    return getOneSM_EVTDIOnR533Succeeds(targets, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR533Succeeds(StateMachineEventDataItem_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTDIOnR533Succeeds(targets, test, true);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR533Succeeds(StateMachineEventDataItem_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEventDataItem_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEventDataItem_c candidate_val = getOneSM_EVTDIOnR533Succeeds(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTDIOnR533Succeeds(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR533Succeeds(StateMachineEventDataItem_c target)
{
	return getOneSM_EVTDIOnR533Succeeds(target, true);
}
public static StateMachineEventDataItem_c getOneSM_EVTDIOnR533Succeeds(StateMachineEventDataItem_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.SucceedsStateMachineEventDataItem ;
  } else {
    return null;
  }
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Succeeds(StateMachineEventDataItem_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR533Succeeds(targets, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Succeeds(StateMachineEventDataItem_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEventDataItem_c[0];
  
  
  LinkedHashSet<StateMachineEventDataItem_c> elementsSet = new LinkedHashSet<StateMachineEventDataItem_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].SucceedsStateMachineEventDataItem == null)
	  targets[i].loadProxy();
    StateMachineEventDataItem_c associate = targets[i].SucceedsStateMachineEventDataItem;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEventDataItem_c[] result = new StateMachineEventDataItem_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Succeeds(StateMachineEventDataItem_c [] targets)
{
  return getManySM_EVTDIsOnR533Succeeds(targets, null);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Succeeds(StateMachineEventDataItem_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    StateMachineEventDataItem_c [] targetArray = new StateMachineEventDataItem_c[1];
    targetArray[0] = target;
    return getManySM_EVTDIsOnR533Succeeds(targetArray, test, loadComponent);
  } else {
    StateMachineEventDataItem_c [] result = new StateMachineEventDataItem_c [0] ;
    return result ;
  }
  
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Succeeds(StateMachineEventDataItem_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTDIsOnR533Succeeds(target, null, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Succeeds(StateMachineEventDataItem_c target)
{
    return getManySM_EVTDIsOnR533Succeeds(target, null, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR533Succeeds(StateMachineEventDataItem_c target, boolean loadComponent)
{
    return getManySM_EVTDIsOnR533Succeeds(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<EventArgument_c> backPointer_RepresentsEventArgumentRepresents_R1017 = new ArrayList<EventArgument_c>();

public void setEventArgumentOrderInChildListR1017(EventArgument_c target, int index) {
	unrelateAcrossR1017From(target);
	EventArgument_c[] elements = EventArgument_c.getManyMSG_EAsOnR1017(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR1017From((EventArgument_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR1017To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR1017To((EventArgument_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR1017To(EventArgument_c target)
{
  if (target != null) {
    target.relateAcrossR1017To(this, true) ;
  }
}

public void relateAcrossR1017To(EventArgument_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR1017To(this, notifyChanges) ;
  }
}

public void setBackPointerR1017To(EventArgument_c target)
{
  	synchronized (backPointer_RepresentsEventArgumentRepresents_R1017) {
		backPointer_RepresentsEventArgumentRepresents_R1017.add(target);
	}
}

public void unrelateAcrossR1017From(EventArgument_c target)
{
  if (target != null) {
    target.unrelateAcrossR1017From(this, true) ;
  }
}

public void unrelateAcrossR1017From(EventArgument_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR1017From(this, notifyChanges) ;
  }
}

public void clearBackPointerR1017To(EventArgument_c target)
{
  synchronized (backPointer_RepresentsEventArgumentRepresents_R1017) {
	    backPointer_RepresentsEventArgumentRepresents_R1017.remove(target);
	}
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR1017(EventArgument_c [] targets)
{
    return getOneSM_EVTDIOnR1017(targets, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR1017(EventArgument_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTDIOnR1017(targets, test, true);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR1017(EventArgument_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEventDataItem_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEventDataItem_c candidate_val = getOneSM_EVTDIOnR1017(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTDIOnR1017(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR1017(EventArgument_c target)
{
	return getOneSM_EVTDIOnR1017(target, true);
}
public static StateMachineEventDataItem_c getOneSM_EVTDIOnR1017(EventArgument_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	    if(target.IsRepresentedByStateMachineEventDataItem != null){
		target.IsRepresentedByStateMachineEventDataItem.loadProxy();
	}
	}
    return target.IsRepresentedByStateMachineEventDataItem ;
  } else {
    return null;
  }
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR1017(EventArgument_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR1017(targets, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR1017(EventArgument_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEventDataItem_c[0];
  
  
  LinkedHashSet<StateMachineEventDataItem_c> elementsSet = new LinkedHashSet<StateMachineEventDataItem_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsRepresentedByStateMachineEventDataItem == null)
	  targets[i].loadProxy();
    StateMachineEventDataItem_c associate = targets[i].IsRepresentedByStateMachineEventDataItem;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
                if(loadComponent){
                   associate.loadProxy();
                }
            }
    }
  }

  StateMachineEventDataItem_c[] result = new StateMachineEventDataItem_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR1017(EventArgument_c [] targets)
{
  return getManySM_EVTDIsOnR1017(targets, null);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR1017(EventArgument_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    EventArgument_c [] targetArray = new EventArgument_c[1];
    targetArray[0] = target;
    return getManySM_EVTDIsOnR1017(targetArray, test, loadComponent);
  } else {
    StateMachineEventDataItem_c [] result = new StateMachineEventDataItem_c [0] ;
    return result ;
  }
  
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR1017(EventArgument_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTDIsOnR1017(target, null, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR1017(EventArgument_c target)
{
    return getManySM_EVTDIsOnR1017(target, null, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR1017(EventArgument_c target, boolean loadComponent)
{
    return getManySM_EVTDIsOnR1017(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<DataItemValue_c> backPointer_DataItemValue_R2934 = new ArrayList<DataItemValue_c>();

public void setDataItemValueOrderInChildListR2934(DataItemValue_c target, int index) {
	unrelateAcrossR2934From(target);
	DataItemValue_c[] elements = DataItemValue_c.getManyI_DIVsOnR2934(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR2934From((DataItemValue_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR2934To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR2934To((DataItemValue_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR2934To(DataItemValue_c target)
{
  if (target != null) {
    target.relateAcrossR2934To(this, true) ;
  }
}

public void relateAcrossR2934To(DataItemValue_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR2934To(this, notifyChanges) ;
  }
}

public void setBackPointerR2934To(DataItemValue_c target)
{
  	synchronized (backPointer_DataItemValue_R2934) {
		backPointer_DataItemValue_R2934.add(target);
	}
}

public void unrelateAcrossR2934From(DataItemValue_c target)
{
  if (target != null) {
    target.unrelateAcrossR2934From(this, true) ;
  }
}

public void unrelateAcrossR2934From(DataItemValue_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR2934From(this, notifyChanges) ;
  }
}

public void clearBackPointerR2934To(DataItemValue_c target)
{
  synchronized (backPointer_DataItemValue_R2934) {
	    backPointer_DataItemValue_R2934.remove(target);
	}
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR2934(DataItemValue_c [] targets)
{
    return getOneSM_EVTDIOnR2934(targets, null);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR2934(DataItemValue_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_EVTDIOnR2934(targets, test, true);
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR2934(DataItemValue_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    StateMachineEventDataItem_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             StateMachineEventDataItem_c candidate_val = getOneSM_EVTDIOnR2934(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_EVTDIOnR2934(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static StateMachineEventDataItem_c getOneSM_EVTDIOnR2934(DataItemValue_c target)
{
	return getOneSM_EVTDIOnR2934(target, true);
}
public static StateMachineEventDataItem_c getOneSM_EVTDIOnR2934(DataItemValue_c target, boolean loadComponent)
{
  if (target != null) {
    return target.StateMachineEventDataItem ;
  } else {
    return null;
  }
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR2934(DataItemValue_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_EVTDIsOnR2934(targets, test, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR2934(DataItemValue_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new StateMachineEventDataItem_c[0];
  
  
  LinkedHashSet<StateMachineEventDataItem_c> elementsSet = new LinkedHashSet<StateMachineEventDataItem_c>();
  for (int i = 0; i < targets.length; i++) {
    StateMachineEventDataItem_c associate = targets[i].StateMachineEventDataItem;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  StateMachineEventDataItem_c[] result = new StateMachineEventDataItem_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR2934(DataItemValue_c [] targets)
{
  return getManySM_EVTDIsOnR2934(targets, null);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR2934(DataItemValue_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    DataItemValue_c [] targetArray = new DataItemValue_c[1];
    targetArray[0] = target;
    return getManySM_EVTDIsOnR2934(targetArray, test, loadComponent);
  } else {
    StateMachineEventDataItem_c [] result = new StateMachineEventDataItem_c [0] ;
    return result ;
  }
  
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR2934(DataItemValue_c target,
    ClassQueryInterface_c test)
{
    return getManySM_EVTDIsOnR2934(target, null, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR2934(DataItemValue_c target)
{
    return getManySM_EVTDIsOnR2934(target, null, true);
}

public static StateMachineEventDataItem_c [] getManySM_EVTDIsOnR2934(DataItemValue_c target, boolean loadComponent)
{
    return getManySM_EVTDIsOnR2934(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (IsCarriedOnEventsIntoStateMachine == null) {          
      // R516
      StateMachine_c relInst38319 = (StateMachine_c) baseRoot.getInstanceList(StateMachine_c.class).get(new Object[] {m_sm_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38319 == null) {
      			relInst38319 = (StateMachine_c) Ooaofooa.getDefaultInstance().getInstanceList(StateMachine_c.class).get(new Object[] {m_sm_id});
      		}
			if (relInst38319 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38319 = (StateMachine_c) roots[i].getInstanceList(StateMachine_c.class).get(new Object[] {m_sm_id});
					if (relInst38319 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38319 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38319) && !isProxy())) {
	      relInst38319.relateAcrossR516To(this, notifyChanges);
	  }
	  }
	}
	          

	if (IsDefinedByDataType == null) {          
      // R524
      DataType_c relInst38320 = (DataType_c) baseRoot.getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38320 == null) {
      			relInst38320 = (DataType_c) Ooaofooa.getDefaultInstance().getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
      		}
			if (relInst38320 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38320 = (DataType_c) roots[i].getInstanceList(DataType_c.class).get(new Object[] {m_dt_id});
					if (relInst38320 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38320 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38320) && !isProxy())) {
	      relInst38320.relateAcrossR524To(this, notifyChanges);
	  }
	  }
	}
	          

	if (CarriedByStateMachineEvent == null) {          
      // R532
      StateMachineEvent_c relInst38321 = (StateMachineEvent_c) baseRoot.getInstanceList(StateMachineEvent_c.class).get(new Object[] {m_smevt_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38321 == null) {
      			relInst38321 = (StateMachineEvent_c) Ooaofooa.getDefaultInstance().getInstanceList(StateMachineEvent_c.class).get(new Object[] {m_smevt_id});
      		}
			if (relInst38321 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38321 = (StateMachineEvent_c) roots[i].getInstanceList(StateMachineEvent_c.class).get(new Object[] {m_smevt_id});
					if (relInst38321 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38321 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38321) && !isProxy())) {
	      relInst38321.relateAcrossR532To(this, notifyChanges);
	  }
	  }
	}
	          

	if (SucceedsStateMachineEventDataItem == null) {          
      // R533
      StateMachineEventDataItem_c relInst38322 = (StateMachineEventDataItem_c) baseRoot.getInstanceList(StateMachineEventDataItem_c.class).get(new Object[] {m_sm_id,m_previous_smedi_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38322 == null) {
      			relInst38322 = (StateMachineEventDataItem_c) Ooaofooa.getDefaultInstance().getInstanceList(StateMachineEventDataItem_c.class).get(new Object[] {m_sm_id,m_previous_smedi_id});
      		}
			if (relInst38322 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38322 = (StateMachineEventDataItem_c) roots[i].getInstanceList(StateMachineEventDataItem_c.class).get(new Object[] {m_sm_id,m_previous_smedi_id});
					if (relInst38322 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38322 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38322) && !isProxy())) {
	      relInst38322.relateAcrossR533ToPrecedes(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R516
      // SM_SM
		  inst=IsCarriedOnEventsIntoStateMachine;
			unrelateAcrossR516From(IsCarriedOnEventsIntoStateMachine, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R524
      // S_DT
		  inst=IsDefinedByDataType;
			unrelateAcrossR524From(IsDefinedByDataType, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R532
      // SM_EVT
		  inst=CarriedByStateMachineEvent;
			unrelateAcrossR532From(CarriedByStateMachineEvent, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R533
      // SM_EVTDI
		  inst=SucceedsStateMachineEventDataItem;
			unrelateAcrossR533FromSucceeds(SucceedsStateMachineEventDataItem, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(StateMachineEventDataItem_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final StateMachineEventDataItem_c inst = (StateMachineEventDataItem_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(StateMachineEventDataItem_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static StateMachineEventDataItem_c StateMachineEventDataItemInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		StateMachineEventDataItem_c result=findStateMachineEventDataItemInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,StateMachineEventDataItem_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findStateMachineEventDataItemInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static StateMachineEventDataItem_c findStateMachineEventDataItemInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(StateMachineEventDataItem_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				StateMachineEventDataItem_c x = (StateMachineEventDataItem_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static StateMachineEventDataItem_c StateMachineEventDataItemInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return StateMachineEventDataItemInstance(modelRoot,test,true);
  }
  
  public static StateMachineEventDataItem_c StateMachineEventDataItemInstance(ModelRoot modelRoot)
  {
	 return StateMachineEventDataItemInstance(modelRoot,null,true);
  }

  public static StateMachineEventDataItem_c [] StateMachineEventDataItemInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, StateMachineEventDataItem_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(StateMachineEventDataItem_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					StateMachineEventDataItem_c x = (StateMachineEventDataItem_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				StateMachineEventDataItem_c[] ret_set = new StateMachineEventDataItem_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new StateMachineEventDataItem_c[0];
			}		
		} 
  }
  public static StateMachineEventDataItem_c [] StateMachineEventDataItemInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  StateMachineEventDataItemInstances(modelRoot,test,true);
  }
  public static StateMachineEventDataItem_c [] StateMachineEventDataItemInstances(ModelRoot modelRoot)
  {
	return StateMachineEventDataItemInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the State Machine Event Data Item.dispose call: ";
	EventParameterReference_c testR846Inst = EventParameterReference_c.getOneV_EPROnR846(this, false);

	if ( testR846Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "846 ";	
	}
 	SupplementalDataItems_c testR522Inst = SupplementalDataItems_c.getOneSM_SDIOnR522(this, false);

 	if ( testR522Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "522 ";
 	}
	StateMachine_c testR516Inst = StateMachine_c.getOneSM_SMOnR516(this, false);

	if ( testR516Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "516 ";
	}
	DataType_c testR524Inst = DataType_c.getOneS_DTOnR524(this, false);

	if ( testR524Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "524 ";
	}
	Dimensions_c testR531Inst = Dimensions_c.getOneS_DIMOnR531(this, false);

	if ( testR531Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "531 ";	
	}
	StateMachineEvent_c testR532Inst = StateMachineEvent_c.getOneSM_EVTOnR532(this, false);

	if ( testR532Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "532 ";
	}
	StateMachineEventDataItem_c testR533Inst = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Precedes(this, false);

	if ( testR533Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "533 ";	
	}
	 testR533Inst = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Succeeds(this, false);

	if ( testR533Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "533 ";
	}
	EventArgument_c testR1017Inst = EventArgument_c.getOneMSG_EAOnR1017(this, false);

	if ( testR1017Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "1017 ";	
	}
	DataItemValue_c testR2934Inst = DataItemValue_c.getOneI_DIVOnR2934(this, false);

	if ( testR2934Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "2934 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "State Machine Event Data Item", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("smedi_id")){
         return true;
      }
      if(attributeName.equals("sm_id")){
         return true;
      }
      if(attributeName.equals("smevt_id")){
         return true;
      }
      if(attributeName.equals("previous_smedi_id")){
         return true;
      }
      if(attributeName.equals("dt_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getSm_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getSm_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    tempID= getSmedi_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getSmedi_idLongBased()
  {
    if(m_smedi_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_smedi_id)){
    	return 0xfffffff & m_smedi_id.getLeastSignificantBits();
    }
    return m_smedi_idLongBased ;
  }
  public java.util.UUID getSmedi_id()
  {
    return m_smedi_id ;
  }


  public void setSmedi_id(java.util.UUID newValue)
  {
   m_smedi_id = IdAssigner.preprocessUUID(newValue);
  }
  public long getSm_idLongBased()
  {
    if ( IsCarriedOnEventsIntoStateMachine != null )
    {
      return IsCarriedOnEventsIntoStateMachine.getSm_idLongBased();
    }
    if ( SucceedsStateMachineEventDataItem != null )
    {
      return SucceedsStateMachineEventDataItem.getSm_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSm_id()
  {
    if ( IsCarriedOnEventsIntoStateMachine != null )
    {
      return IsCarriedOnEventsIntoStateMachine.getSm_id();
    }
    if ( SucceedsStateMachineEventDataItem != null )
    {
      return SucceedsStateMachineEventDataItem.getSm_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSm_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_sm_id) )
      return m_sm_id;
    else
      return getSm_id();
  }
  
  public String getName()
  {
    return m_name ;
  }


  public void setName(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_name)){
	        return;
	    }
	}else if(m_name != null){
	    if(m_name.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Name", m_name, newValue,true); 
   m_name = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDescrip()
  {
    return m_descrip ;
  }


  public void setDescrip(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_descrip)){
	        return;
	    }
	}else if(m_descrip != null){
	    if(m_descrip.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Descrip", m_descrip, newValue,true); 
   m_descrip = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public String getDimensions()
  {
    return m_dimensions ;
  }


  public void setDimensions(String newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dimensions)){
	        return;
	    }
	}else if(m_dimensions != null){
	    if(m_dimensions.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dimensions", m_dimensions, newValue,true); 
   m_dimensions = newValue ;
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSmevt_idLongBased()
  {
    if ( CarriedByStateMachineEvent != null )
    {
      return CarriedByStateMachineEvent.getSmevt_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSmevt_id()
  {
    if ( CarriedByStateMachineEvent != null )
    {
      return CarriedByStateMachineEvent.getSmevt_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSmevt_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_smevt_id) )
      return m_smevt_id;
    else
      return getSmevt_id();
  }
  
  public void setSmevt_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_smevt_id)){
	        return;
	    }
	}else if(m_smevt_id != null){
	    if(m_smevt_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Smevt_id", m_smevt_id, newValue,true); 
   m_smevt_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getPrevious_smedi_idLongBased()
  {
    if ( SucceedsStateMachineEventDataItem != null )
    {
      return SucceedsStateMachineEventDataItem.getSmedi_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getPrevious_smedi_id()
  {
    if ( SucceedsStateMachineEventDataItem != null )
    {
      return SucceedsStateMachineEventDataItem.getSmedi_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getPrevious_smedi_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_previous_smedi_id) )
      return m_previous_smedi_id;
    else
      return getPrevious_smedi_id();
  }
  
  public void setPrevious_smedi_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_previous_smedi_id)){
	        return;
	    }
	}else if(m_previous_smedi_id != null){
	    if(m_previous_smedi_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Previous_smedi_id", m_previous_smedi_id, newValue,true); 
   m_previous_smedi_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getDt_idLongBased()
  {
    if ( IsDefinedByDataType != null )
    {
      return IsDefinedByDataType.getDt_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getDt_id()
  {
    if ( IsDefinedByDataType != null )
    {
      return IsDefinedByDataType.getDt_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getDt_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_dt_id) )
      return m_dt_id;
    else
      return getDt_id();
  }
  
  public void setDt_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_dt_id)){
	        return;
	    }
	}else if(m_dt_id != null){
	    if(m_dt_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Dt_id", m_dt_id, newValue,true); 
   m_dt_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "State Machine Event Data Item", //$NON-NLS-1$
	  " Operation entered: State Machine Event Data Item::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     StateMachineEventDataItem_c [] objs = StateMachineEventDataItem_c.StateMachineEventDataItemInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "State Machine Event Data Item", //$NON-NLS-1$
	  " Operation entered: State Machine Event Data Item::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class StateMachineEventDataItem_c_test38324_c implements ClassQueryInterface_c
    {
	  StateMachineEventDataItem_c_test38324_c( java.util.UUID            p38325, java.util.UUID            p38326 ) {
	       m_p38325 = p38325; 
m_p38326 = p38326;
	  }
	  private java.util.UUID             m_p38325; private java.util.UUID             m_p38326; 
	  public boolean evaluate (Object candidate)
	  {
	      StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSm_id().equals(m_p38325)) & (selected.getSmedi_id().equals(m_p38326));
	      return retval;
	  }
    }

    StateMachineEventDataItem_c [] objs38323 = 
    StateMachineEventDataItem_c.StateMachineEventDataItemInstances(modelRoot, new StateMachineEventDataItem_c_test38324_c(getSm_id(), getSmedi_id())) ;

    if ( (  (objs38323.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event Data Item", //$NON-NLS-1$
           "Consistency: Object: State Machine Event Data Item: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38323.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event Data Item: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38323.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs38323.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event Data Item", //$NON-NLS-1$
           "Consistency: Object: State Machine Event Data Item: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38323.length )  + " SM_ID: " + "Not Printable"  + " SMedi_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event Data Item: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38323.length )  + " SM_ID: " + "Not Printable"  + " SMedi_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // State Machine Event Data Item is a referring class in association: rel.Numb = 516
          // The participating class is: State Machine
    class StateMachine_c_test38330_c implements ClassQueryInterface_c
    {
	  StateMachine_c_test38330_c( java.util.UUID            p38331 ) {
	  m_p38331 = p38331;
	  }
	  private java.util.UUID             m_p38331; 
	  public boolean evaluate (Object candidate)
	  {
	      StateMachine_c selected = (StateMachine_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSm_id().equals(m_p38331));
	      return retval;
	  }
    }

    StateMachine_c [] objs38329 = 
    StateMachine_c.StateMachineInstances(modelRoot, new StateMachine_c_test38330_c(getSm_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs38329.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event Data Item", //$NON-NLS-1$
           "Consistency: Object: State Machine Event Data Item: Association: 516: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38329.length )  + " SM_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event Data Item: Association: 516: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38329.length )  + " SM_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // State Machine Event Data Item is a referring class in association: rel.Numb = 533
          // The participating class is: State Machine Event Data Item
    class StateMachineEventDataItem_c_test38333_c implements ClassQueryInterface_c
    {
	  StateMachineEventDataItem_c_test38333_c( java.util.UUID            p38334, java.util.UUID            p38335 ) {
	       m_p38334 = p38334; 
m_p38335 = p38335;
	  }
	  private java.util.UUID             m_p38334; private java.util.UUID             m_p38335; 
	  public boolean evaluate (Object candidate)
	  {
	      StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSm_id().equals(m_p38334)) & (selected.getSmedi_id().equals(m_p38335));
	      return retval;
	  }
    }

    StateMachineEventDataItem_c [] objs38332 = 
    StateMachineEventDataItem_c.StateMachineEventDataItemInstances(modelRoot, new StateMachineEventDataItem_c_test38333_c(getSm_id(), getPrevious_smedi_id())) ;

    if ( (  (objs38332.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event Data Item", //$NON-NLS-1$
           "Consistency: Object: State Machine Event Data Item: Association: 533: Cardinality of a participant is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38332.length )  + " SM_ID: " + "Not Printable"  + " Previous_SMedi_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event Data Item: Association: 533: Cardinality of a participant is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38332.length )  + " SM_ID: " + "Not Printable"  + " Previous_SMedi_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }
                
          // State Machine Event Data Item is a referring class in association: rel.Numb = 532
          // The participating class is: State Machine Event
    class StateMachineEvent_c_test38337_c implements ClassQueryInterface_c
    {
	  StateMachineEvent_c_test38337_c( java.util.UUID            p38338 ) {
	  m_p38338 = p38338;
	  }
	  private java.util.UUID             m_p38338; 
	  public boolean evaluate (Object candidate)
	  {
	      StateMachineEvent_c selected = (StateMachineEvent_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSmevt_id().equals(m_p38338));
	      return retval;
	  }
    }

    StateMachineEvent_c [] objs38336 = 
    StateMachineEvent_c.StateMachineEventInstances(modelRoot, new StateMachineEvent_c_test38337_c(getSmevt_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs38336.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event Data Item", //$NON-NLS-1$
           "Consistency: Object: State Machine Event Data Item: Association: 532: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38336.length )  + " SMevt_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event Data Item: Association: 532: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38336.length )  + " SMevt_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // State Machine Event Data Item is a referring class in association: rel.Numb = 524
          // The participating class is: Data Type
    class DataType_c_test38340_c implements ClassQueryInterface_c
    {
	  DataType_c_test38340_c( java.util.UUID            p38341 ) {
	  m_p38341 = p38341;
	  }
	  private java.util.UUID             m_p38341; 
	  public boolean evaluate (Object candidate)
	  {
	      DataType_c selected = (DataType_c) candidate;
	      boolean retval = false;
	      retval = (selected.getDt_id().equals(m_p38341));
	      return retval;
	  }
    }

    DataType_c [] objs38339 = 
    DataType_c.DataTypeInstances(modelRoot, new DataType_c_test38340_c(getDt_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs38339.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event Data Item", //$NON-NLS-1$
           "Consistency: Object: State Machine Event Data Item: Association: 524: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38339.length )  + " DT_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event Data Item: Association: 524: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38339.length )  + " DT_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // State Machine Event Data Item is a participating class in association: rel.Numb = 846
             // Object: Event Parameter Reference
          // Associated Other Side: rel.Numb = 522
            // Link Object: Supplemental Data Items
          // State Machine Event Data Item is a participating class in association: rel.Numb = 533
             // Object: State Machine Event Data Item
    class StateMachineEventDataItem_c_test38343_c implements ClassQueryInterface_c
    {
	  StateMachineEventDataItem_c_test38343_c( java.util.UUID            p38344, java.util.UUID            p38345 ) {
	       m_p38344 = p38344; 
m_p38345 = p38345;
	  }
	  private java.util.UUID             m_p38344; private java.util.UUID             m_p38345; 
	  public boolean evaluate (Object candidate)
	  {
	      StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSm_id().equals(m_p38344)) & (selected.getPrevious_smedi_id().equals(m_p38345));
	      return retval;
	  }
    }

    StateMachineEventDataItem_c [] objs38342 = 
    StateMachineEventDataItem_c.StateMachineEventDataItemInstances(modelRoot, new StateMachineEventDataItem_c_test38343_c(getSm_id(), getSmedi_id())) ;

    if ( (  (objs38342.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "State Machine Event Data Item", //$NON-NLS-1$
           "Consistency: Object: State Machine Event Data Item: Association: 533: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38342.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: State Machine Event Data Item: Association: 533: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38342.length )  , e); 
      }
      retval = false;

    }

          // State Machine Event Data Item is a participating class in association: rel.Numb = 531
             // Object: Dimensions
          // State Machine Event Data Item is a participating class in association: rel.Numb = 1017
             // Object: Event Argument
          // State Machine Event Data Item is a participating class in association: rel.Numb = 2934
             // Object: Data Item Value
    return retval;
  }


  // declare transform functions
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR516(this);


this.unrelateAcrossR516From(v_sm);


DataType_c v_dt = DataType_c.getOneS_DTOnR524(this);


this.unrelateAcrossR524From(v_dt);


SupplementalDataItems_c [] v_sdis = SupplementalDataItems_c.getManySM_SDIsOnR522(this);


SupplementalDataItems_c  v_sdi = null;
for ( int i36591 = 0; i36591 < v_sdis.length; i36591++)
{
  v_sdi = v_sdis[i36591] ;

if (v_sdi != null) {
v_sdi.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

StateMachineEvent_c v_event = StateMachineEvent_c.getOneSM_EVTOnR532(this);


if (   (v_event != null) )
{

this.unrelateAcrossR532From(v_event);



}

StateMachineEventDataItem_c v_successor = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Precedes(this);


StateMachineEventDataItem_c v_predecessor = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Succeeds(this);


if ( (  !  (v_successor == null)) )
{

this.unrelateAcrossR533FromPrecedes(v_successor);



}

if ( (  !  (v_predecessor == null)) )
{

this.unrelateAcrossR533FromSucceeds(v_predecessor);



}

if ( (  (v_successor != null) &&   (v_predecessor != null)) )
{

if (v_successor != null) {
  v_successor.relateAcrossR533ToSucceeds(v_predecessor);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

EventParameterReference_c [] v_evdiValRefs = EventParameterReference_c.getManyV_EPRsOnR846(this);


EventParameterReference_c  v_evdiValRef = null;
for ( int i36592 = 0; i36592 < v_evdiValRefs.length; i36592++)
{
  v_evdiValRef = v_evdiValRefs[i36592] ;

if (v_evdiValRef != null) {
v_evdiValRef.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

DataItemValue_c [] v_divs = DataItemValue_c.getManyI_DIVsOnR2934(this);


DataItemValue_c  v_div = null;
for ( int i36593 = 0; i36593 < v_divs.length; i36593++)
{
  v_div = v_divs[i36593] ;

this.unrelateAcrossR2934From(v_div);


if (v_div != null) {
v_div.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

EventArgument_c [] v_args = EventArgument_c.getManyMSG_EAsOnR1017(this);


EventArgument_c  v_arg = null;
for ( int i36594 = 0; i36594 < v_args.length; i36594++)
{
  v_arg = v_args[i36594] ;

if (v_arg != null) {
v_arg.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

Dimensions_c [] v_dims = Dimensions_c.getManyS_DIMsOnR531(this);


Dimensions_c  v_dim = null;
for ( int i36595 = 0; i36595 < v_dims.length; i36595++)
{
  v_dim = v_dims[i36595] ;

this.unrelateAcrossR531From(v_dim);


if (v_dim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dim.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, this));
}



   } // End dispose
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_stateMachine = StateMachine_c.getOneSM_SMOnR516(this);


StateMachineEvent_c v_evt = StateMachineEvent_c.getOneSM_EVTOnR532(this);


if (v_evt != null) {
v_evt.Adddataitemtoorder(			    
getSmedi_id() ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR516(this))));


if ( (  (v_packageableElem == null)) )
{

v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR516(this))));



}

Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

java.util.UUID         v_id = v_packageableElem.Resolvedatatyperelativetoself(			    
"integer"			    
,"integer") ;


  class DataType_test37039_c implements ClassQueryInterface_c
  {
	DataType_test37039_c( java.util.UUID         p37040 ) {
		m_p37040 = p37040;
	}
	private java.util.UUID         m_p37040;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p37040) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8002(v_package)), new DataType_test37039_c(v_id));


if ( (  (v_dt == null)) )
{

  class DataType_test37041_c implements ClassQueryInterface_c
  {
	DataType_test37041_c( java.util.UUID         p37042 ) {
		m_p37042 = p37042;
	}
	private java.util.UUID         m_p37042;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p37042) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8004(v_component)), new DataType_test37041_c(v_id));



}

  this.relateAcrossR524To(v_dt);


String       v_name = Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed Data Item"			    
,Converttoinstance()) ;


String       v_success = Ooaofooa.Getnewelementname(modelRoot			    
,Converttoinstance()			    
,v_name			    
,true) ;


if ( (! v_success.equals("")) )
{

setName( v_success) ;



}

else
{

Dispose() ;



}


}

else
{

Domain_c v_dom = Domain_c.DomainInstance(modelRoot) ;


  class DataType_test37043_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getName().equals("integer") ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR14(v_dom, new DataType_test37043_c());


if ( (  (v_dt == null)) )
{

if ( (v_dom.Participatesinsystem()) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_dom))));


java.util.UUID         v_dt_id = Gd_c.Null_unique_id() ;


if (   (v_system != null) )
{

v_dt_id = v_system.Getcoretypeid(			    
"integer") ;



}

PackageableElement_c v_pe = (PackageableElement_c) modelRoot.getInstanceList(PackageableElement_c.class).getGlobal(null, v_dt_id);


v_dt = DataType_c.getOneS_DTOnR8001(v_pe);



}

else
{

String       v_pathMsg = "<No Path Available - Empty instance>" ;


if ( (  (v_stateMachine != null)) )
{

v_pathMsg = v_stateMachine.Getpath() ;



}

User_c.Logerror(			    
"Unable to locate expected data type: integer"			    
,v_pathMsg ) ;



}


}

  this.relateAcrossR524To(v_dt);


setName( Ooaofooa.Getuniqueinitialname(modelRoot			    
,"Unnamed Data Item"			    
,Converttoinstance())) ;



}


   } // End initialize
  public  boolean      Isallowedtype(final String       p_Typename)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Isallowedtype") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_machine = StateMachine_c.getOneSM_SMOnR516(this);


ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(v_machine));


if ( (  (v_clazz == null)) )
{

v_clazz = ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(v_machine));



}

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(v_clazz);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

return v_packageableElem.Isallowedtype(			    
false			    
,p_Typename);



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR1(Subsystem_c.getOneS_SSOnR2(v_clazz));


if ( (  (v_domain != null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR28(v_domain);


if ( (  (v_system != null)) )
{

return DataType_c.Isallowedparametertype(modelRoot			    
,v_domain.Get_ooa_id()			    
,p_Typename);



}

else
{

boolean      v_result = DataType_c.Isallowedparametertype(modelRoot			    
,v_domain.Get_ooa_id()			    
,p_Typename) ;


if ( (  !v_result) )
{

v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


if ( (  (v_system != null)) )
{

return Util_c.Isallowedparametertype(			    
v_system.Converttoinstance()			    
,p_Typename);



}

else
{

String       v_pathMsg = "<No Path Available - Empty instance>" ;


if ( (  (v_machine != null)) )
{

v_pathMsg = v_machine.Getpath() ;



}

User_c.Logerror(			    
"Unable to locate the system."			    
,v_pathMsg ) ;



}


}

else
{

return v_result;



}


}


}

return false;



}


   } // End isAllowedType
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  void Resolvedatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Resolvedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dtProxy = DataType_c.getOneS_DTOnR524(this);


if ( (  (v_dtProxy != null) &&   !Util_c.Isproxy(			    
Converttoinstance())) )
{

String       v_name = v_dtProxy.getName() ;


if (v_dtProxy != null) {
v_dtProxy.unrelateAcrossR524From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR516(this))));


if ( (  (v_packageableElem == null)) )
{

v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR516(this))));



}

Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

java.util.UUID         v_id = v_packageableElem.Resolvedatatyperelativetoself(			    
"integer"			    
,v_name) ;


  class DataType_test37044_c implements ClassQueryInterface_c
  {
	DataType_test37044_c( java.util.UUID         p37045 ) {
		m_p37045 = p37045;
	}
	private java.util.UUID         m_p37045;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p37045) ;
	}
  }
DataType_c v_resolvedDt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8002(v_package)), new DataType_test37044_c(v_id));


if ( (  (v_resolvedDt == null)) )
{

  class DataType_test37046_c implements ClassQueryInterface_c
  {
	DataType_test37046_c( java.util.UUID         p37047 ) {
		m_p37047 = p37047;
	}
	private java.util.UUID         m_p37047;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(m_p37047) ;
	}
  }
v_resolvedDt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8004(v_component)), new DataType_test37046_c(v_id));



}

if (   (v_resolvedDt != null) )
{

if (v_resolvedDt != null) {
  v_resolvedDt.relateAcrossR524To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR1(Subsystem_c.getOneS_SSOnR2(ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR516(this)))));


if ( (  (v_domain == null)) )
{

v_domain = Domain_c.getOneS_DOMOnR1(Subsystem_c.getOneS_SSOnR2(ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR516(this)))));



}

java.util.UUID         v_id = v_domain.Resolvedatatyperelativetoself(			    
"integer"			    
,v_name) ;


  class DataType_test37048_c implements ClassQueryInterface_c
  {
	DataType_test37048_c( java.util.UUID         p37049 ) {
		m_p37049 = p37049;
	}
	private java.util.UUID         m_p37049;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p37049)) ;
	}
  }
DataType_c v_resolvedDT = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test37048_c(v_id));


if ( (  (v_resolvedDT == null)) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


  class DataType_test37050_c implements ClassQueryInterface_c
  {
	DataType_test37050_c( java.util.UUID         p37051 ) {
		m_p37051 = p37051;
	}
	private java.util.UUID         m_p37051;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p37051)) ;
	}
  }
v_resolvedDT = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system), new DataType_test37050_c(v_id));


if (   (v_resolvedDT == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class DataType_test37052_c implements ClassQueryInterface_c
  {
	DataType_test37052_c( java.util.UUID         p37053 ) {
		m_p37053 = p37053;
	}
	private java.util.UUID         m_p37053;
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(m_p37053)) ;
	}
  }
v_resolvedDT = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system)), new DataType_test37052_c(v_id));



}


}

if ( (  (v_resolvedDT != null)) )
{

if (v_resolvedDT != null) {
  v_resolvedDT.relateAcrossR524To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


}


   } // End resolveDatatype
  public  java.util.UUID         Resolveexistingdataitem(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Resolveexistingdataitem") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_sm = (StateMachine_c) modelRoot.getInstanceList(StateMachine_c.class).getGlobal(null, p_Id);


if ( (  (v_sm != null)) )
{

boolean      v_foundDI = false ;


  class StateMachineEventDataItem_test36797_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c)candidate;
		return (selected.getSmedi_id().equals(Gd_c.Null_unique_id())) ;
	}
  }
StateMachineEventDataItem_c v_resolvedDI = StateMachineEventDataItem_c.StateMachineEventDataItemInstance(modelRoot, new StateMachineEventDataItem_test36797_c()) ;


  class StateMachineEventDataItem_test37054_c implements ClassQueryInterface_c
  {
	StateMachineEventDataItem_test37054_c( String       p37055 ) {
		m_p37055 = p37055;
	}
	private String       m_p37055;
	public boolean evaluate (Object candidate)
	{
		StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c)candidate;
		return (selected.getName().equals(m_p37055)) ;
	}
  }
StateMachineEventDataItem_c [] v_existingDIs = StateMachineEventDataItem_c.getManySM_EVTDIsOnR516(v_sm, new StateMachineEventDataItem_test37054_c(getName()));


StateMachineEventDataItem_c  v_existingDI = null;
for ( int i36596 = 0; i36596 < v_existingDIs.length; i36596++)
{
  v_existingDI = v_existingDIs[i36596] ;

DataType_c v_dt = DataType_c.getOneS_DTOnR524(this);


DataType_c v_otherDt = DataType_c.getOneS_DTOnR524(v_existingDI);


if ( (v_dt.getName().equals(v_otherDt.getName())) )
{

v_foundDI = true ;


v_resolvedDI = v_existingDI ;


break;



}


}

if ( (v_foundDI) )
{

return v_resolvedDI.getSmedi_id();



}


}

return Gd_c.Null_unique_id();



   } // End resolveExistingDataItem
  public  void Resizedimensions(final int          p_Dimension,final int          p_Elementcount,final int          p_Numdimensions)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Resizedimensions") ; 
               final ModelRoot modelRoot = getModelRoot();
while ( (p_Numdimensions > Getdimensionscnt()) )
{

Dimensions_c v_dim = new Dimensions_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_dim));


if (v_dim != null) {
  v_dim.setDimensioncount( Getdimensionscnt()) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_dim != null) {
  v_dim.relateAcrossR531To(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

while ( (p_Numdimensions < Getdimensionscnt()) )
{

  class Dimensions_test37056_c implements ClassQueryInterface_c
  {
	Dimensions_test37056_c( int          p37057 ) {
		m_p37057 = p37057;
	}
	private int          m_p37057;
	public boolean evaluate (Object candidate)
	{
		Dimensions_c selected = (Dimensions_c)candidate;
		return (selected.getDimensioncount() == (m_p37057 - 1)) ;
	}
  }
Dimensions_c v_dim = Dimensions_c.getOneS_DIMOnR531(this, new Dimensions_test37056_c(Getdimensionscnt()));


if (v_dim != null) {
v_dim.unrelateAcrossR531From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_dim != null) {
// get the location of this element in the instance list
// before deleting
if ( v_dim.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_dim));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}



}

if ( (p_Numdimensions > 0) )
{

  class Dimensions_test37058_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		Dimensions_c selected = (Dimensions_c)candidate;
		return (selected.getDimensioncount() == p_Dimension) ;
	}
  }
Dimensions_c v_dim = Dimensions_c.getOneS_DIMOnR531(this, new Dimensions_test37058_c());


if ( (v_dim.getElementcount() != p_Elementcount) )
{

if (v_dim != null) {
  v_dim.setElementcount( p_Elementcount) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}



}


}


   } // End resizeDimensions
  public  int          Getdimensionscnt()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Getdimensionscnt") ; 
               final ModelRoot modelRoot = getModelRoot();
Dimensions_c [] v_dims = Dimensions_c.getManyS_DIMsOnR531(this);


int          v_dimensions =   (v_dims.length) ;


return v_dimensions;



   } // End getDimensionsCnt
  public  void Moveup()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Moveup") ; 
               final ModelRoot modelRoot = getModelRoot();
Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


StateMachineEventDataItem_c v_prev_attr = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Succeeds(this);


StateMachineEventDataItem_c v_prev_prev_attr = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Succeeds(v_prev_attr);


StateMachineEventDataItem_c v_next_attr = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Precedes(this);


if ( (  (v_prev_prev_attr != null)) )
{

if (v_prev_attr != null) {
v_prev_attr.unrelateAcrossR533FromSucceeds(v_prev_prev_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if ( (  (v_next_attr != null)) )
{

if (v_next_attr != null) {
v_next_attr.unrelateAcrossR533FromSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

this.unrelateAcrossR533FromSucceeds(v_prev_attr);


if ( (  (v_prev_prev_attr != null)) )
{

  this.relateAcrossR533ToSucceeds(v_prev_prev_attr);



}

if ( (  (v_next_attr == null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}

if (v_prev_attr != null) {
  v_prev_attr.relateAcrossR533ToSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if ( (  (v_next_attr != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;


if (v_next_attr != null) {
  v_next_attr.relateAcrossR533ToSucceeds(v_prev_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End moveUp
  public  void Movedown()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Movedown") ; 
               final ModelRoot modelRoot = getModelRoot();
Ooaofooa.Changenotificationenablement(modelRoot 			    
,false ) ;


StateMachineEventDataItem_c v_next_attr = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Precedes(this);


StateMachineEventDataItem_c v_prev_attr = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Succeeds(this);


StateMachineEventDataItem_c v_next_next_attr = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Precedes(v_next_attr);


if ( (  (v_next_next_attr != null)) )
{

if (v_next_next_attr != null) {
v_next_next_attr.unrelateAcrossR533FromSucceeds(v_next_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if ( (  (v_prev_attr != null)) )
{

this.unrelateAcrossR533FromSucceeds(v_prev_attr);



}

if (v_next_attr != null) {
v_next_attr.unrelateAcrossR533FromSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if ( (  (v_prev_attr != null)) )
{

if (v_next_attr != null) {
  v_next_attr.relateAcrossR533ToSucceeds(v_prev_attr);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if ( (  (v_next_next_attr == null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;



}

  this.relateAcrossR533ToSucceeds(v_next_attr);


if ( (  (v_next_next_attr != null)) )
{

Ooaofooa.Changenotificationenablement(modelRoot 			    
,true ) ;


if (v_next_next_attr != null) {
  v_next_next_attr.relateAcrossR533ToSucceeds(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


   } // End moveDown
  public  boolean      Actionfilter(final String       p_Name,final String       p_Value)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Actionfilter") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Name.equals("can")) )
{

if ( (p_Value.equals("move up")) )
{

StateMachineEventDataItem_c v_prev_attr = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Succeeds(this);


return   (v_prev_attr != null);



}

else if ( (p_Value.equals("move down")) )
{

StateMachineEventDataItem_c v_next_attr = StateMachineEventDataItem_c.getOneSM_EVTDIOnR533Precedes(this);


return   (v_next_attr != null);



}


}

return false;



   } // End actionFilter
  public  boolean      Canrefertodatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Canrefertodatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR524(this);


if ( (  (v_dt != null)) )
{

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR516(this))));


if ( (  (v_packageableElem == null)) )
{

v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR516(this))));



}

Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

return v_packageableElem.Canrefertodatatype(			    
v_dt.getDt_id()			    
,v_dt.getName());



}

else
{

ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR516(this)));


if ( (  (v_clazz == null)) )
{

v_clazz = ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR516(this)));



}

Domain_c v_domain = Domain_c.getOneS_DOMOnR1(Subsystem_c.getOneS_SSOnR2(v_clazz));


DataTypePackage_c v_dtPkg = DataTypePackage_c.getOneS_DPKOnR39(DataTypeInPackage_c.getOneS_DIPOnR39(v_dt));


if ( (  !v_dtPkg.Isdomainlevel()) )
{

if ( (v_domain.Participatesinsystem()) )
{

return true;



}

else
{

return false;



}


}

else
{

Domain_c v_dtDomain = Domain_c.getOneS_DOMOnR14(v_dt);


if ( (v_dtDomain == v_domain) )
{

return true;



}


}


}


}

return false;



   } // End canReferToDataType
  public  boolean      Isreferringtodefaultdatatype()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Isreferringtodefaultdatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
DataType_c v_dt = DataType_c.getOneS_DTOnR524(this);


String       v_elementType = Util_c.Getsimpleclassname(			    
Converttoinstance()) ;


if ( (v_dt.getName().equals(DataType_c.Getdefaultdatatypename(modelRoot			    
,v_elementType))) )
{

return true;



}

return false;



   } // End isReferringToDefaultDataType
  public  boolean      Canusedatatype(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Canusedatatype") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_machine = StateMachine_c.getOneSM_SMOnR516(this);


ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(v_machine));


if ( (  (v_clazz == null)) )
{

v_clazz = ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(v_machine));



}

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(v_clazz);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( v_isInGenericPackage )
{

  class SearchResultSet_test37059_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		SearchResultSet_c selected = (SearchResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
SearchResultSet_c v_resultSet = SearchResultSet_c.getOnePE_SRSOnR8005(v_package, new SearchResultSet_test37059_c());


  class DataType_test37060_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Id) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8002(ElementVisibility_c.getManyPE_VISsOnR8006(v_resultSet)), new DataType_test37060_c());


if (   (v_component != null) )
{

  class ComponentResultSet_test37061_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ComponentResultSet_c selected = (ComponentResultSet_c)candidate;
		return selected.getName().equals("") && selected.getType() == Elementtypeconstants_c.DATATYPE ;
	}
  }
ComponentResultSet_c v_compResultSet = ComponentResultSet_c.getOnePE_CRSOnR8007(v_component, new ComponentResultSet_test37061_c());


  class DataType_test37062_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return selected.getDt_id().equals(p_Id) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR8004(ComponentVisibility_c.getManyPE_CVSsOnR8008(v_compResultSet)), new DataType_test37062_c());



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedtype(			    
v_dt.getName())) )
{

return true;



}


}

return false;



}

else
{

Domain_c v_domain = Domain_c.getOneS_DOMOnR1(Subsystem_c.getOneS_SSOnR2(v_clazz));


if ( (v_domain.Participatesinsystem()) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR4606(ComponentPackage_c.getOneCP_CPOnR4608(Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(v_domain))));


  class DataType_test37063_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR4401(SystemDatatypeInPackage_c.getManySLD_SDINPsOnR4402(v_system), new DataType_test37063_c());


if (   (v_dt == null) &&   (v_system != null) && v_system.getUseglobals() )
{

  class DataType_test37064_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR8001(PackageableElement_c.getManyPE_PEsOnR9100(GlobalElementInSystem_c.getManyG_EISsOnR9100(v_system)), new DataType_test37064_c());



}

if ( (  (v_dt == null)) )
{

  class DataType_test37065_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
v_dt = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test37065_c());



}

if ( (  (v_dt != null)) )
{

if ( (Isallowedtype(			    
v_dt.getName())) )
{

return true;



}


}


}

else
{

  class DataType_test37066_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		DataType_c selected = (DataType_c)candidate;
		return (selected.getDt_id().equals(p_Id)) ;
	}
  }
DataType_c v_dt = DataType_c.getOneS_DTOnR14(v_domain, new DataType_test37066_c());


if ( (  (v_dt != null)) )
{

if ( (Isallowedtype(			    
v_dt.getName())) )
{

return true;



}


}


}

return false;



}


   } // End canUseDataType
  public  void Checkintegrity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "State Machine Event Data Item", " Operation entered: StateMachineEventDataItem::Checkintegrity") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachineEvent_c v_event = StateMachineEvent_c.getOneSM_EVTOnR532(this);


StateMachine_c v_machine = StateMachine_c.getOneSM_SMOnR502(v_event);


ModelClass_c v_clazz = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(v_machine));


if ( (  (v_clazz == null)) )
{

v_clazz = ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(v_machine));



}

Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_clazz));


SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


java.util.UUID         v_sys_id = Gd_c.Null_unique_id() ;


if ( (  (v_system != null)) )
{

v_sys_id = v_system.getSys_id() ;



}

StateMachineEventDataItem_c [] v_parameters = StateMachineEventDataItem_c.getManySM_EVTDIsOnR532(v_event);


StateMachineEventDataItem_c  v_parameter = null;
for ( int i36597 = 0; i36597 < v_parameters.length; i36597++)
{
  v_parameter = v_parameters[i36597] ;

if ( (v_parameter != this && v_parameter.getName().equals(getName())) )
{

IntegrityManager_c.Createissue(modelRoot			    
,"Found another parameter under the same event with a " + "matching name."			    
,Converttoinstance()			    
,getSmedi_id()			    
,getName()			    
,v_event.Getpath() + "::" + getName()			    
,Severity_c.Error			    
,v_sys_id ) ;



}


}


   } // End checkIntegrity

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
    if (adapter == IActionFilter.class)
    {
        return StateMachineEventDataItemActionFilter.getSingleton();
    }
	  return null;
  }
} // end State Machine Event Data Item
