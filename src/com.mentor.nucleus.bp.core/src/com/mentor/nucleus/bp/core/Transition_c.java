      
package com.mentor.nucleus.bp.core ;
//====================================================================
//
// File:      com.mentor.nucleus.bp.core.Transition_c.java
//
// WARNING: Do not edit this generated file
// Generated by ../MC-Java/java.arc, $Revision: 1.111 $
//
// (c) Copyright 2005-2014 by Mentor Graphics Corp.  All rights reserved.
//
//====================================================================

// No special imports
import java.util.* ;
import java.lang.reflect.*;
import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IResource;
import org.eclipse.core.runtime.IAdaptable;
import org.eclipse.core.runtime.IPath;
import org.eclipse.core.runtime.Path;
import com.mentor.nucleus.bp.core.util.PersistenceUtil;
import org.eclipse.core.runtime.NullProgressMonitor;
import com.mentor.nucleus.bp.core.ui.marker.UmlProblem;
import org.eclipse.ui.IActionFilter;
import com.mentor.nucleus.bp.core.common.*;      
abstract class EV_TRANSITION extends genericEvent_c 
{
  public abstract int getEvtcode() ;
}

public class Transition_c extends NonRootModelElement implements IAdaptable, Cloneable
{
  // Public Constructors
  public Transition_c(ModelRoot modelRoot,
       java.util.UUID         p_m_trans_id,
       java.util.UUID         p_m_sm_id,
       java.util.UUID         p_m_smstt_id,
       java.util.UUID         p_m_smspd_id)
  {
    super(modelRoot);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_trans_id = IdAssigner.preprocessUUID(p_m_trans_id);
       //extract 28 bit value only            
       m_trans_idLongBased = 0xfffffff & p_m_trans_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_sm_id = IdAssigner.preprocessUUID(p_m_sm_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_smstt_id = IdAssigner.preprocessUUID(p_m_smstt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       m_smspd_id = IdAssigner.preprocessUUID(p_m_smspd_id);
        
    setUniqueId(m_trans_id);
    Object [] key = {m_trans_id,m_sm_id};
    addInstanceToMap(key);
  }
  static public Transition_c createProxy(ModelRoot modelRoot,
       java.util.UUID         p_m_trans_id,
       java.util.UUID         p_m_sm_id,
       java.util.UUID         p_m_smstt_id,
       java.util.UUID         p_m_smspd_id, String p_contentPath, IPath p_localPath)
  {
	  ModelRoot resolvedModelRoot = ModelRoot.findModelRoot(modelRoot, p_contentPath, p_localPath);
	  // if a model root was not resolved it is most likely
	  // due to a missing file of the proxy, defualt back to
	  // the original model root
	  if(resolvedModelRoot != null)
	  	modelRoot = resolvedModelRoot;
      InstanceList instances = modelRoot.getInstanceList(Transition_c.class);
      Transition_c new_inst = null;
      synchronized(instances) {
          Object[] key = {p_m_trans_id,p_m_sm_id};
          new_inst = (Transition_c) instances.get(key) ;
        }
	String contentPath = PersistenceUtil.resolveRelativePath(
			p_localPath,
			new Path(p_contentPath));
	if(modelRoot.isNewCompareRoot()) {
	      // for comparisons we do not want to change
	      // the content path
	      contentPath = p_contentPath;
	}
	if ( new_inst != null && !modelRoot.isCompareRoot()) {
		PersistableModelComponent pmc = new_inst.getPersistableComponent();
		if (pmc == null) {
			// dangling reference, redo this instance
			new_inst.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_trans_id = IdAssigner.preprocessUUID(p_m_trans_id);
       //extract 28 bit value only            
       new_inst.m_trans_idLongBased = 0xfffffff & p_m_trans_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_sm_id = IdAssigner.preprocessUUID(p_m_sm_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_smstt_id = IdAssigner.preprocessUUID(p_m_smstt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       new_inst.m_smspd_id = IdAssigner.preprocessUUID(p_m_smspd_id);
        
		}
	}
	if ( new_inst == null ) {
		// there is no instance matching the id, create a proxy
		// if the resource doesn't exist then this will be a dangling reference
    	new_inst = new Transition_c(modelRoot,
p_m_trans_id,
p_m_sm_id,
p_m_smstt_id,
p_m_smspd_id
);
		new_inst.m_contentPath = contentPath;
	}
    return new_inst;
  }

  static public Transition_c resolveInstance(ModelRoot modelRoot,
       java.util.UUID         p_m_trans_id,
       java.util.UUID         p_m_sm_id,
       java.util.UUID         p_m_smstt_id,
       java.util.UUID         p_m_smspd_id){
    InstanceList instances = modelRoot.getInstanceList(Transition_c.class);
    Transition_c source = null;
    synchronized(instances) {
        Object [] key = {
        p_m_trans_id
        ,
        p_m_sm_id
            };
        source = (Transition_c) instances.get(key);
        if (source != null && !modelRoot.isCompareRoot()) {
           source.convertFromProxy();
           source.batchUnrelate();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_trans_id = IdAssigner.preprocessUUID(p_m_trans_id);
       //extract 28 bit value only            
       source.m_trans_idLongBased = 0xfffffff & p_m_trans_id.getLeastSignificantBits();
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_sm_id = IdAssigner.preprocessUUID(p_m_sm_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_smstt_id = IdAssigner.preprocessUUID(p_m_smstt_id);
       //pre-process the uuid so that we re-use null uuid instance rather then creating a new one.           
       source.m_smspd_id = IdAssigner.preprocessUUID(p_m_smspd_id);
        
           return source ;
        }
      }
      // there is no instance matching the id
    Transition_c new_inst = new Transition_c(modelRoot,
p_m_trans_id,
p_m_sm_id,
p_m_smstt_id,
p_m_smspd_id
);
    return new_inst;
  }
  public Transition_c(ModelRoot modelRoot)
  {
    super(modelRoot);
     m_trans_id = idAssigner.createUUID();
     m_sm_id = IdAssigner.NULL_UUID;   
     m_smstt_id = IdAssigner.NULL_UUID;   
     m_smspd_id = IdAssigner.NULL_UUID;   
    setUniqueId(m_trans_id);
    Object [] key = {m_trans_id,m_sm_id};
    addInstanceToMap(key);
  }

  public Object getInstanceKey() {
    Object [] key =  {m_trans_id,m_sm_id};
		return key;
  }
  
  public boolean setInstanceKey(UUID p_newKey){
  
  	boolean changed = false;
		// round p1
		// round p2
		// round p3
			// round p5
	if (m_trans_id !=  p_newKey ){
	
		m_trans_id = p_newKey; 	
		changed = true;
	}
  	return changed;
  }
  

  



  public boolean equals (Object elem) {
     if (!(elem instanceof Transition_c)) {
         return false;
     }
	    // check that the model-roots are the same
    	if (((NonRootModelElement)elem).getModelRoot() != getModelRoot()) {
    		return false;
    	}
    	
     return identityEquals(elem);
  }
  
   public boolean identityEquals(Object elem) {
       if (!(elem instanceof Transition_c)) {
           return false;
       }
       
       Transition_c me = (Transition_c)elem;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if ((IdAssigner.NULL_UUID.equals(getTrans_id()) || IdAssigner.NULL_UUID.equals(((Transition_c)elem).getTrans_id())) && this != elem) {
      	return false;
      }
      if (!getTrans_id().equals(((Transition_c)elem).getTrans_id())) return false;
      // don't allow an empty id-value to produce a false positive result;
      // in this case, use whether the two instances are actually the same 
      // one in memory, instead
      if ((IdAssigner.NULL_UUID.equals(getSm_id()) || IdAssigner.NULL_UUID.equals(((Transition_c)elem).getSm_id())) && this != elem) {
      	return false;
      }
      if (!getSm_id().equals(((Transition_c)elem).getSm_id())) return false;
      return true;
    }

   public boolean cachedIdentityEquals(Object elem) {
       if (!(elem instanceof Transition_c)) {
           return false;
       }
       
       Transition_c me = (Transition_c)elem;
      if (!getTrans_id().equals(((Transition_c)elem).getTrans_id())) return false;
      if (!getSm_idCachedValue().equals(((Transition_c)elem).getSm_idCachedValue())) return false;
      return true;
    }


  // Attributes
  private java.util.UUID         m_trans_id ;
  private long m_trans_idLongBased ;
  private java.util.UUID         m_sm_id ;
  private java.util.UUID         m_smstt_id ;
  private java.util.UUID         m_smspd_id ;
      
// declare association references from this class
  
  
    
// referring navigation

StateMachineState_c IsDestinedToStateMachineState ;
public void relateAcrossR506To(StateMachineState_c target)
{
	relateAcrossR506To(target, true);
}
public void relateAcrossR506To(StateMachineState_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == IsDestinedToStateMachineState) return;  // already related

    if ( IsDestinedToStateMachineState != target ) {
    
    Object oldKey = getInstanceKey();

    if (IsDestinedToStateMachineState != null) {
    
        IsDestinedToStateMachineState.clearBackPointerR506To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Transition_c.relateAcrossR506To(StateMachineState_c target)", 
			"Relate performed across R506 from Transition to State Machine State without unrelate of prior instance.");  
		}
    }
                
    	IsDestinedToStateMachineState = target ;
        if(IdAssigner.NULL_UUID.equals(target.getSm_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_sm_id = target.getSm_idCachedValue();
        }
        m_smstt_id = target.getSmstt_id();
        if(IdAssigner.NULL_UUID.equals(target.getSmspd_id()))
        {
            // do not update cached value
        } else {
          // update cached value
          m_smspd_id = target.getSmspd_idCachedValue();
        }
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR506To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "506", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR506From(StateMachineState_c target)
{
	unrelateAcrossR506From(target, true);
}
public void unrelateAcrossR506From(StateMachineState_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (IsDestinedToStateMachineState == null) return;  // already unrelated
	
	if (target != IsDestinedToStateMachineState) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R506", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR506To(this);
    }
    

      if(IsDestinedToStateMachineState != null) {
      
        m_sm_id = IsDestinedToStateMachineState.getSm_id();
        if(IdAssigner.NULL_UUID.equals(m_sm_id))
        {
          m_sm_id = IsDestinedToStateMachineState.getSm_idCachedValue();
        }       
        m_smstt_id = IsDestinedToStateMachineState.getSmstt_id();
        m_smspd_id = IsDestinedToStateMachineState.getSmspd_id();
        if(IdAssigner.NULL_UUID.equals(m_smspd_id))
        {
          m_smspd_id = IsDestinedToStateMachineState.getSmspd_idCachedValue();
        }       
        IsDestinedToStateMachineState = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "506", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Transition_c getOneSM_TXNOnR506(StateMachineState_c [] targets)
{
    return getOneSM_TXNOnR506(targets, null);
}

public static Transition_c getOneSM_TXNOnR506(StateMachineState_c [] targets, ClassQueryInterface_c test)
{
    Transition_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSM_TXNOnR506(targets[i], test);
        }
    }

    return ret_val;
}

public static Transition_c getOneSM_TXNOnR506(StateMachineState_c target)
{
  return getOneSM_TXNOnR506(target, null);
}

public static Transition_c getOneSM_TXNOnR506(StateMachineState_c target, boolean loadComponent)
{
    return getOneSM_TXNOnR506(target.getModelRoot(), target, null, loadComponent);
}

public static Transition_c getOneSM_TXNOnR506(StateMachineState_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSM_TXNOnR506(target.getModelRoot(), target, test);
  }
  return null;
}

public static Transition_c getOneSM_TXNOnR506(ModelRoot modelRoot, StateMachineState_c target, ClassQueryInterface_c test)
{
	return getOneSM_TXNOnR506(modelRoot, target, test, true);
}

public static Transition_c getOneSM_TXNOnR506(ModelRoot modelRoot, StateMachineState_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneSM_TXNOnR506(modelRoot,target,test);
}
private static Transition_c find_getOneSM_TXNOnR506(ModelRoot modelRoot, StateMachineState_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_IsDestinationOfTransitionIsDestinationOf_R506) {
	    for ( int i = 0; i < target.backPointer_IsDestinationOfTransitionIsDestinationOf_R506.size(); ++i ) {
	      Transition_c source = (Transition_c)target.backPointer_IsDestinationOfTransitionIsDestinationOf_R506.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Transition_c [] getManySM_TXNsOnR506(StateMachineState_c [] targets)
{
  return getManySM_TXNsOnR506(targets, null);
}
public static Transition_c [] getManySM_TXNsOnR506(StateMachineState_c [] targets, boolean loadComponent)
{
  return getManySM_TXNsOnR506(targets, null, loadComponent);
}
public static Transition_c [] getManySM_TXNsOnR506(StateMachineState_c [] targets, ClassQueryInterface_c test)
{
	return getManySM_TXNsOnR506(targets, test, true);
}

public static Transition_c [] getManySM_TXNsOnR506(StateMachineState_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Transition_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Transition_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_IsDestinationOfTransitionIsDestinationOf_R506) {
	    for (int j = 0; j < targets[i].backPointer_IsDestinationOfTransitionIsDestinationOf_R506.size(); ++j) {
	      Transition_c source = (Transition_c)targets[i].backPointer_IsDestinationOfTransitionIsDestinationOf_R506.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Transition_c[] ret_set = new Transition_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Transition_c[0];
  }
  }

public static Transition_c [] getManySM_TXNsOnR506(StateMachineState_c target)
{
  return getManySM_TXNsOnR506(target, null);
}

public static Transition_c [] getManySM_TXNsOnR506(StateMachineState_c target, boolean loadComponent)
{
  return getManySM_TXNsOnR506(target, null, loadComponent);
}

public static Transition_c [] getManySM_TXNsOnR506(StateMachineState_c target, ClassQueryInterface_c test)
{
	return getManySM_TXNsOnR506(target, test, true);
}

public static Transition_c [] getManySM_TXNsOnR506(StateMachineState_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Transition_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_IsDestinationOfTransitionIsDestinationOf_R506) {
    for (int i = 0; i < target.backPointer_IsDestinationOfTransitionIsDestinationOf_R506.size(); ++i) {
      Transition_c source = (Transition_c)target.backPointer_IsDestinationOfTransitionIsDestinationOf_R506.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Transition_c[] ret_set = new Transition_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Transition_c[0];
	}
  }


  
    
// referring navigation

StateMachine_c StateMachine ;
public void relateAcrossR505To(StateMachine_c target)
{
	relateAcrossR505To(target, true);
}
public void relateAcrossR505To(StateMachine_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (target == StateMachine) return;  // already related

    if ( StateMachine != target ) {
    
    Object oldKey = getInstanceKey();

    if (StateMachine != null) {
    
        StateMachine.clearBackPointerR505To(this);
        
		if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == true) {   //$NON-NLS-1$
		Ooaofooa.log.println(ILogger.CONSISTENCY, 
			"Transition_c.relateAcrossR505To(StateMachine_c target)", 
			"Relate performed across R505 from Transition to State Machine without unrelate of prior instance.");  
		}
    }
                
    	StateMachine = target ;
        m_sm_id = target.getSm_id();
      updateInstanceKey(oldKey, getInstanceKey());
	    target.setBackPointerR505To(this);
        target.addRef();
      if(notifyChanges) {
	    	RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_RELATED, this, target, "505", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}
public void unrelateAcrossR505From(StateMachine_c target)
{
	unrelateAcrossR505From(target, true);
}
public void unrelateAcrossR505From(StateMachine_c target, boolean notifyChanges)
{
	if (target == null) return;
	
	if (StateMachine == null) return;  // already unrelated
	
	if (target != StateMachine) {
		Exception e = new Exception();
		e.fillInStackTrace();
		CorePlugin.logError("Tried to unrelate from non-related instance across R505", e);
		return;
	}

    if (target != null) {
        target.clearBackPointerR505To(this);
    }
    

      if(StateMachine != null) {
      
        m_sm_id = StateMachine.getSm_id();
        StateMachine = null ;
        target.removeRef();
      if(notifyChanges) { 
        RelationshipChangeModelDelta change = new RelationshipChangeModelDelta(Modeleventnotification_c.DELTA_ELEMENT_UNRELATED, this, target, "505", "");
        Ooaofooa.getDefaultInstance().fireModelElementRelationChanged(change);
      }
    }
}

  
    
      
public static Transition_c getOneSM_TXNOnR505(StateMachine_c [] targets)
{
    return getOneSM_TXNOnR505(targets, null);
}

public static Transition_c getOneSM_TXNOnR505(StateMachine_c [] targets, ClassQueryInterface_c test)
{
    Transition_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           ret_val = getOneSM_TXNOnR505(targets[i], test);
        }
    }

    return ret_val;
}

public static Transition_c getOneSM_TXNOnR505(StateMachine_c target)
{
  return getOneSM_TXNOnR505(target, null);
}

public static Transition_c getOneSM_TXNOnR505(StateMachine_c target, boolean loadComponent)
{
    return getOneSM_TXNOnR505(target.getModelRoot(), target, null, loadComponent);
}

public static Transition_c getOneSM_TXNOnR505(StateMachine_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    return getOneSM_TXNOnR505(target.getModelRoot(), target, test);
  }
  return null;
}

public static Transition_c getOneSM_TXNOnR505(ModelRoot modelRoot, StateMachine_c target, ClassQueryInterface_c test)
{
	return getOneSM_TXNOnR505(modelRoot, target, test, true);
}

public static Transition_c getOneSM_TXNOnR505(ModelRoot modelRoot, StateMachine_c target, ClassQueryInterface_c test, boolean loadComponent)
{
   return find_getOneSM_TXNOnR505(modelRoot,target,test);
}
private static Transition_c find_getOneSM_TXNOnR505(ModelRoot modelRoot, StateMachine_c target, ClassQueryInterface_c test)
{
  if (target != null) {
    synchronized(target.backPointer_ContainsTransitionContains_R505) {
	    for ( int i = 0; i < target.backPointer_ContainsTransitionContains_R505.size(); ++i ) {
	      Transition_c source = (Transition_c)target.backPointer_ContainsTransitionContains_R505.get(i) ;
	      if (source != null && (test == null || test.evaluate(source))) {
	        return source ;
      }
    }
  }
  }
  // not found
  return null ;
}

public static Transition_c [] getManySM_TXNsOnR505(StateMachine_c [] targets)
{
  return getManySM_TXNsOnR505(targets, null);
}
public static Transition_c [] getManySM_TXNsOnR505(StateMachine_c [] targets, boolean loadComponent)
{
  return getManySM_TXNsOnR505(targets, null, loadComponent);
}
public static Transition_c [] getManySM_TXNsOnR505(StateMachine_c [] targets, ClassQueryInterface_c test)
{
	return getManySM_TXNsOnR505(targets, test, true);
}

public static Transition_c [] getManySM_TXNsOnR505(StateMachine_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{

  if(targets == null || targets.length == 0 || targets[0] == null)
  	return new Transition_c[0];

  ModelRoot modelRoot = targets[0].getModelRoot();
 
   InstanceList instances = modelRoot.getInstanceList(Transition_c.class);

  Vector matches = new Vector();
  for (int i = 0 ; i < targets.length ; i++) {
    synchronized(targets[i].backPointer_ContainsTransitionContains_R505) {
	    for (int j = 0; j < targets[i].backPointer_ContainsTransitionContains_R505.size(); ++j) {
	      Transition_c source = (Transition_c)targets[i].backPointer_ContainsTransitionContains_R505.get(j) ;
          if (source != null && (test == null || test.evaluate(source))) {
	        matches.add(source);
    }
  }
    }
  }
  if (matches.size() > 0) {
	Transition_c[] ret_set = new Transition_c[matches.size()];
	matches.copyInto(ret_set);
	return ret_set;
  } else {
	return new Transition_c[0];
  }
  }

public static Transition_c [] getManySM_TXNsOnR505(StateMachine_c target)
{
  return getManySM_TXNsOnR505(target, null);
}

public static Transition_c [] getManySM_TXNsOnR505(StateMachine_c target, boolean loadComponent)
{
  return getManySM_TXNsOnR505(target, null, loadComponent);
}

public static Transition_c [] getManySM_TXNsOnR505(StateMachine_c target, ClassQueryInterface_c test)
{
	return getManySM_TXNsOnR505(target, test, true);
}

public static Transition_c [] getManySM_TXNsOnR505(StateMachine_c target, ClassQueryInterface_c test, boolean loadComponent)
{
  if(target == null)
    return new Transition_c[0];    

  ModelRoot modelRoot = target.getModelRoot();
  Vector matches = new Vector();
  synchronized(target.backPointer_ContainsTransitionContains_R505) {
    for (int i = 0; i < target.backPointer_ContainsTransitionContains_R505.size(); ++i) {
      Transition_c source = (Transition_c)target.backPointer_ContainsTransitionContains_R505.get(i);
      if (source != null && (test == null || test.evaluate(source))) {

        matches.add(source);
	  }
	}
  }
  
	if (matches.size() > 0) {
		Transition_c[] ret_set = new Transition_c[matches.size()];
		matches.copyInto(ret_set);
		return ret_set;
	} else {
		return new Transition_c[0];
	}
  }



// declare associations referring to this class

    
  
  
// referred to navigation

TransitionActionHome_c backPointer_HousesActionForTransitionActionHomeHousesActionFor_R530;

public void setTransitionActionHomeOrderInChildListR530(TransitionActionHome_c target, int index) {
	unrelateAcrossR530From(target);
	TransitionActionHome_c[] elements = TransitionActionHome_c.getManySM_TAHsOnR530(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR530From((TransitionActionHome_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR530To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR530To((TransitionActionHome_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR530To(TransitionActionHome_c target)
{
  if (target != null) {
    target.relateAcrossR530To(this, true) ;
  }
}

public void relateAcrossR530To(TransitionActionHome_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR530To(this, notifyChanges) ;
  }
}

public void setBackPointerR530To(TransitionActionHome_c target)
{
    backPointer_HousesActionForTransitionActionHomeHousesActionFor_R530 = target;
}

public void unrelateAcrossR530From(TransitionActionHome_c target)
{
  if (target != null) {
    target.unrelateAcrossR530From(this, true) ;
  }
}

public void unrelateAcrossR530From(TransitionActionHome_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR530From(this, notifyChanges) ;
  }
}

public void clearBackPointerR530To(TransitionActionHome_c target)
{
	if (target == backPointer_HousesActionForTransitionActionHomeHousesActionFor_R530) {
		backPointer_HousesActionForTransitionActionHomeHousesActionFor_R530 = null;
	}
}

public static Transition_c getOneSM_TXNOnR530(TransitionActionHome_c [] targets)
{
    return getOneSM_TXNOnR530(targets, null);
}

public static Transition_c getOneSM_TXNOnR530(TransitionActionHome_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_TXNOnR530(targets, test, true);
}

public static Transition_c getOneSM_TXNOnR530(TransitionActionHome_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Transition_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Transition_c candidate_val = getOneSM_TXNOnR530(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_TXNOnR530(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Transition_c getOneSM_TXNOnR530(TransitionActionHome_c target)
{
	return getOneSM_TXNOnR530(target, true);
}
public static Transition_c getOneSM_TXNOnR530(TransitionActionHome_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.Transition ;
  } else {
    return null;
  }
}

public static Transition_c [] getManySM_TXNsOnR530(TransitionActionHome_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_TXNsOnR530(targets, test, true);
}

public static Transition_c [] getManySM_TXNsOnR530(TransitionActionHome_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Transition_c[0];
  
  
  LinkedHashSet<Transition_c> elementsSet = new LinkedHashSet<Transition_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].Transition == null)
	  targets[i].loadProxy();
    Transition_c associate = targets[i].Transition;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Transition_c[] result = new Transition_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Transition_c [] getManySM_TXNsOnR530(TransitionActionHome_c [] targets)
{
  return getManySM_TXNsOnR530(targets, null);
}

public static Transition_c [] getManySM_TXNsOnR530(TransitionActionHome_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    TransitionActionHome_c [] targetArray = new TransitionActionHome_c[1];
    targetArray[0] = target;
    return getManySM_TXNsOnR530(targetArray, test, loadComponent);
  } else {
    Transition_c [] result = new Transition_c [0] ;
    return result ;
  }
  
}

public static Transition_c [] getManySM_TXNsOnR530(TransitionActionHome_c target,
    ClassQueryInterface_c test)
{
    return getManySM_TXNsOnR530(target, null, true);
}

public static Transition_c [] getManySM_TXNsOnR530(TransitionActionHome_c target)
{
    return getManySM_TXNsOnR530(target, null, true);
}

public static Transition_c [] getManySM_TXNsOnR530(TransitionActionHome_c target, boolean loadComponent)
{
    return getManySM_TXNsOnR530(target, null, loadComponent);
}


    
  
  
// referred to navigation

NoEventTransition_c backPointer_IsSubtypeNoEventTransitionIsSubtype_R507;

public void setNoEventTransitionOrderInChildListR507(NoEventTransition_c target, int index) {
	unrelateAcrossR507From(target);
	NoEventTransition_c[] elements = NoEventTransition_c.getManySM_NETXNsOnR507(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR507From((NoEventTransition_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR507To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR507To((NoEventTransition_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR507To(NoEventTransition_c target)
{
  if (target != null) {
    target.relateAcrossR507To(this, true) ;
  }
}

public void relateAcrossR507To(NoEventTransition_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR507To(this, notifyChanges) ;
  }
}

public void setBackPointerR507To(NoEventTransition_c target)
{
    backPointer_IsSubtypeNoEventTransitionIsSubtype_R507 = target;
}

public void unrelateAcrossR507From(NoEventTransition_c target)
{
  if (target != null) {
    target.unrelateAcrossR507From(this, true) ;
  }
}

public void unrelateAcrossR507From(NoEventTransition_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR507From(this, notifyChanges) ;
  }
}

public void clearBackPointerR507To(NoEventTransition_c target)
{
	if (target == backPointer_IsSubtypeNoEventTransitionIsSubtype_R507) {
		backPointer_IsSubtypeNoEventTransitionIsSubtype_R507 = null;
	}
}

public static Transition_c getOneSM_TXNOnR507(NoEventTransition_c [] targets)
{
    return getOneSM_TXNOnR507(targets, null);
}

public static Transition_c getOneSM_TXNOnR507(NoEventTransition_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_TXNOnR507(targets, test, true);
}

public static Transition_c getOneSM_TXNOnR507(NoEventTransition_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Transition_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Transition_c candidate_val = getOneSM_TXNOnR507(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_TXNOnR507(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Transition_c getOneSM_TXNOnR507(NoEventTransition_c target)
{
	return getOneSM_TXNOnR507(target, true);
}
public static Transition_c getOneSM_TXNOnR507(NoEventTransition_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeTransition ;
  } else {
    return null;
  }
}

public static Transition_c [] getManySM_TXNsOnR507(NoEventTransition_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_TXNsOnR507(targets, test, true);
}

public static Transition_c [] getManySM_TXNsOnR507(NoEventTransition_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Transition_c[0];
  
  
  LinkedHashSet<Transition_c> elementsSet = new LinkedHashSet<Transition_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeTransition == null)
	  targets[i].loadProxy();
    Transition_c associate = targets[i].IsSupertypeTransition;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Transition_c[] result = new Transition_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Transition_c [] getManySM_TXNsOnR507(NoEventTransition_c [] targets)
{
  return getManySM_TXNsOnR507(targets, null);
}

public static Transition_c [] getManySM_TXNsOnR507(NoEventTransition_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    NoEventTransition_c [] targetArray = new NoEventTransition_c[1];
    targetArray[0] = target;
    return getManySM_TXNsOnR507(targetArray, test, loadComponent);
  } else {
    Transition_c [] result = new Transition_c [0] ;
    return result ;
  }
  
}

public static Transition_c [] getManySM_TXNsOnR507(NoEventTransition_c target,
    ClassQueryInterface_c test)
{
    return getManySM_TXNsOnR507(target, null, true);
}

public static Transition_c [] getManySM_TXNsOnR507(NoEventTransition_c target)
{
    return getManySM_TXNsOnR507(target, null, true);
}

public static Transition_c [] getManySM_TXNsOnR507(NoEventTransition_c target, boolean loadComponent)
{
    return getManySM_TXNsOnR507(target, null, loadComponent);
}

  
  
  
// referred to navigation

CreationTransition_c backPointer_IsSubtypeCreationTransitionIsSubtype_R507;

public void setCreationTransitionOrderInChildListR507(CreationTransition_c target, int index) {
	unrelateAcrossR507From(target);
	CreationTransition_c[] elements = CreationTransition_c.getManySM_CRTXNsOnR507(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR507From((CreationTransition_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR507To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR507To((CreationTransition_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR507To(CreationTransition_c target)
{
  if (target != null) {
    target.relateAcrossR507To(this, true) ;
  }
}

public void relateAcrossR507To(CreationTransition_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR507To(this, notifyChanges) ;
  }
}

public void setBackPointerR507To(CreationTransition_c target)
{
    backPointer_IsSubtypeCreationTransitionIsSubtype_R507 = target;
}

public void unrelateAcrossR507From(CreationTransition_c target)
{
  if (target != null) {
    target.unrelateAcrossR507From(this, true) ;
  }
}

public void unrelateAcrossR507From(CreationTransition_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR507From(this, notifyChanges) ;
  }
}

public void clearBackPointerR507To(CreationTransition_c target)
{
	if (target == backPointer_IsSubtypeCreationTransitionIsSubtype_R507) {
		backPointer_IsSubtypeCreationTransitionIsSubtype_R507 = null;
	}
}

public static Transition_c getOneSM_TXNOnR507(CreationTransition_c [] targets)
{
    return getOneSM_TXNOnR507(targets, null);
}

public static Transition_c getOneSM_TXNOnR507(CreationTransition_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_TXNOnR507(targets, test, true);
}

public static Transition_c getOneSM_TXNOnR507(CreationTransition_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Transition_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Transition_c candidate_val = getOneSM_TXNOnR507(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_TXNOnR507(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Transition_c getOneSM_TXNOnR507(CreationTransition_c target)
{
	return getOneSM_TXNOnR507(target, true);
}
public static Transition_c getOneSM_TXNOnR507(CreationTransition_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeTransition ;
  } else {
    return null;
  }
}

public static Transition_c [] getManySM_TXNsOnR507(CreationTransition_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_TXNsOnR507(targets, test, true);
}

public static Transition_c [] getManySM_TXNsOnR507(CreationTransition_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Transition_c[0];
  
  
  LinkedHashSet<Transition_c> elementsSet = new LinkedHashSet<Transition_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeTransition == null)
	  targets[i].loadProxy();
    Transition_c associate = targets[i].IsSupertypeTransition;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Transition_c[] result = new Transition_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Transition_c [] getManySM_TXNsOnR507(CreationTransition_c [] targets)
{
  return getManySM_TXNsOnR507(targets, null);
}

public static Transition_c [] getManySM_TXNsOnR507(CreationTransition_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    CreationTransition_c [] targetArray = new CreationTransition_c[1];
    targetArray[0] = target;
    return getManySM_TXNsOnR507(targetArray, test, loadComponent);
  } else {
    Transition_c [] result = new Transition_c [0] ;
    return result ;
  }
  
}

public static Transition_c [] getManySM_TXNsOnR507(CreationTransition_c target,
    ClassQueryInterface_c test)
{
    return getManySM_TXNsOnR507(target, null, true);
}

public static Transition_c [] getManySM_TXNsOnR507(CreationTransition_c target)
{
    return getManySM_TXNsOnR507(target, null, true);
}

public static Transition_c [] getManySM_TXNsOnR507(CreationTransition_c target, boolean loadComponent)
{
    return getManySM_TXNsOnR507(target, null, loadComponent);
}

  
  
  
// referred to navigation

NewStateTransition_c backPointer_IsSubtypeNewStateTransitionIsSubtype_R507;

public void setNewStateTransitionOrderInChildListR507(NewStateTransition_c target, int index) {
	unrelateAcrossR507From(target);
	NewStateTransition_c[] elements = NewStateTransition_c.getManySM_NSTXNsOnR507(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR507From((NewStateTransition_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR507To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR507To((NewStateTransition_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR507To(NewStateTransition_c target)
{
  if (target != null) {
    target.relateAcrossR507To(this, true) ;
  }
}

public void relateAcrossR507To(NewStateTransition_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR507To(this, notifyChanges) ;
  }
}

public void setBackPointerR507To(NewStateTransition_c target)
{
    backPointer_IsSubtypeNewStateTransitionIsSubtype_R507 = target;
}

public void unrelateAcrossR507From(NewStateTransition_c target)
{
  if (target != null) {
    target.unrelateAcrossR507From(this, true) ;
  }
}

public void unrelateAcrossR507From(NewStateTransition_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR507From(this, notifyChanges) ;
  }
}

public void clearBackPointerR507To(NewStateTransition_c target)
{
	if (target == backPointer_IsSubtypeNewStateTransitionIsSubtype_R507) {
		backPointer_IsSubtypeNewStateTransitionIsSubtype_R507 = null;
	}
}

public static Transition_c getOneSM_TXNOnR507(NewStateTransition_c [] targets)
{
    return getOneSM_TXNOnR507(targets, null);
}

public static Transition_c getOneSM_TXNOnR507(NewStateTransition_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_TXNOnR507(targets, test, true);
}

public static Transition_c getOneSM_TXNOnR507(NewStateTransition_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Transition_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Transition_c candidate_val = getOneSM_TXNOnR507(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_TXNOnR507(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Transition_c getOneSM_TXNOnR507(NewStateTransition_c target)
{
	return getOneSM_TXNOnR507(target, true);
}
public static Transition_c getOneSM_TXNOnR507(NewStateTransition_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.IsSupertypeTransition ;
  } else {
    return null;
  }
}

public static Transition_c [] getManySM_TXNsOnR507(NewStateTransition_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_TXNsOnR507(targets, test, true);
}

public static Transition_c [] getManySM_TXNsOnR507(NewStateTransition_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Transition_c[0];
  
  
  LinkedHashSet<Transition_c> elementsSet = new LinkedHashSet<Transition_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].IsSupertypeTransition == null)
	  targets[i].loadProxy();
    Transition_c associate = targets[i].IsSupertypeTransition;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Transition_c[] result = new Transition_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Transition_c [] getManySM_TXNsOnR507(NewStateTransition_c [] targets)
{
  return getManySM_TXNsOnR507(targets, null);
}

public static Transition_c [] getManySM_TXNsOnR507(NewStateTransition_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    NewStateTransition_c [] targetArray = new NewStateTransition_c[1];
    targetArray[0] = target;
    return getManySM_TXNsOnR507(targetArray, test, loadComponent);
  } else {
    Transition_c [] result = new Transition_c [0] ;
    return result ;
  }
  
}

public static Transition_c [] getManySM_TXNsOnR507(NewStateTransition_c target,
    ClassQueryInterface_c test)
{
    return getManySM_TXNsOnR507(target, null, true);
}

public static Transition_c [] getManySM_TXNsOnR507(NewStateTransition_c target)
{
    return getManySM_TXNsOnR507(target, null, true);
}

public static Transition_c [] getManySM_TXNsOnR507(NewStateTransition_c target, boolean loadComponent)
{
    return getManySM_TXNsOnR507(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<MealyActionHome_c> backPointer_MealyActionHome_R512 = new ArrayList<MealyActionHome_c>();

public void setMealyActionHomeOrderInChildListR512(MealyActionHome_c target, int index) {
	unrelateAcrossR512From(target);
	MealyActionHome_c[] elements = MealyActionHome_c.getManySM_MEAHsOnR512(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR512From((MealyActionHome_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR512To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR512To((MealyActionHome_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR512To(MealyActionHome_c target)
{
  if (target != null) {
    target.relateAcrossR512To(this, true) ;
  }
}

public void relateAcrossR512To(MealyActionHome_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR512To(this, notifyChanges) ;
  }
}

public void setBackPointerR512To(MealyActionHome_c target)
{
  	synchronized (backPointer_MealyActionHome_R512) {
		backPointer_MealyActionHome_R512.add(target);
	}
}

public void unrelateAcrossR512From(MealyActionHome_c target)
{
  if (target != null) {
    target.unrelateAcrossR512From(this, true) ;
  }
}

public void unrelateAcrossR512From(MealyActionHome_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR512From(this, notifyChanges) ;
  }
}

public void clearBackPointerR512To(MealyActionHome_c target)
{
  synchronized (backPointer_MealyActionHome_R512) {
	    backPointer_MealyActionHome_R512.remove(target);
	}
}

public static Transition_c getOneSM_TXNOnR512(MealyActionHome_c [] targets)
{
    return getOneSM_TXNOnR512(targets, null);
}

public static Transition_c getOneSM_TXNOnR512(MealyActionHome_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_TXNOnR512(targets, test, true);
}

public static Transition_c getOneSM_TXNOnR512(MealyActionHome_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Transition_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Transition_c candidate_val = getOneSM_TXNOnR512(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_TXNOnR512(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Transition_c getOneSM_TXNOnR512(MealyActionHome_c target)
{
	return getOneSM_TXNOnR512(target, true);
}
public static Transition_c getOneSM_TXNOnR512(MealyActionHome_c target, boolean loadComponent)
{
  if (target != null) {
	if(loadComponent){
	     target.loadProxy();
	}
    return target.Transition ;
  } else {
    return null;
  }
}

public static Transition_c [] getManySM_TXNsOnR512(MealyActionHome_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_TXNsOnR512(targets, test, true);
}

public static Transition_c [] getManySM_TXNsOnR512(MealyActionHome_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Transition_c[0];
  
  
  LinkedHashSet<Transition_c> elementsSet = new LinkedHashSet<Transition_c>();
  for (int i = 0; i < targets.length; i++) {
	if(loadComponent && targets[i] != null && targets[i].Transition == null)
	  targets[i].loadProxy();
    Transition_c associate = targets[i].Transition;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Transition_c[] result = new Transition_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Transition_c [] getManySM_TXNsOnR512(MealyActionHome_c [] targets)
{
  return getManySM_TXNsOnR512(targets, null);
}

public static Transition_c [] getManySM_TXNsOnR512(MealyActionHome_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    MealyActionHome_c [] targetArray = new MealyActionHome_c[1];
    targetArray[0] = target;
    return getManySM_TXNsOnR512(targetArray, test, loadComponent);
  } else {
    Transition_c [] result = new Transition_c [0] ;
    return result ;
  }
  
}

public static Transition_c [] getManySM_TXNsOnR512(MealyActionHome_c target,
    ClassQueryInterface_c test)
{
    return getManySM_TXNsOnR512(target, null, true);
}

public static Transition_c [] getManySM_TXNsOnR512(MealyActionHome_c target)
{
    return getManySM_TXNsOnR512(target, null, true);
}

public static Transition_c [] getManySM_TXNsOnR512(MealyActionHome_c target, boolean loadComponent)
{
    return getManySM_TXNsOnR512(target, null, loadComponent);
}

public static Transition_c getOneSM_TXNOnR512(MealyStateMachine_c target)
{
  return Transition_c.getOneSM_TXNOnR512(MealyActionHome_c.getOneSM_MEAHOnR512(target)) ;
}

public static Transition_c getOneSM_TXNOnR512(MealyStateMachine_c target,
    ClassQueryInterface_c test)
{
  return Transition_c.getOneSM_TXNOnR512(MealyActionHome_c.getManySM_MEAHsOnR512(target), test) ;
}

public static Transition_c [] getManySM_TXNsOnR512(MealyStateMachine_c target,
    ClassQueryInterface_c test)
{
	return getManySM_TXNsOnR512(target, test, true);
}
public static Transition_c [] getManySM_TXNsOnR512(MealyStateMachine_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{

  MealyActionHome_c [] associators = MealyActionHome_c.getManySM_MEAHsOnR512(target, loadComponent) ;
    return Transition_c.getManySM_TXNsOnR512(associators, test, loadComponent) ;
}
public static Transition_c [] getManySM_TXNsOnR512(MealyStateMachine_c target)
{
    return getManySM_TXNsOnR512(target, null, true);
}
public static Transition_c [] getManySM_TXNsOnR512(MealyStateMachine_c target, boolean loadComponent)
{
    return getManySM_TXNsOnR512(target, null, loadComponent);
}


    
  
  
// referred to navigation

ArrayList<Instance_c> backPointer_CausedLastStateChangeToInstanceCausedLastStateChangeTo_R2953 = new ArrayList<Instance_c>();

public void setInstanceOrderInChildListR2953(Instance_c target, int index) {
	unrelateAcrossR2953From(target);
	Instance_c[] elements = Instance_c.getManyI_INSsOnR2953(this);
	int count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			unrelateAcrossR2953From((Instance_c) elements[i]); 
		}
		count++;
	}
	relateAcrossR2953To(target);
	count = 0;
	for(int i = 0; i < elements.length; i++) {
		if(count >= index) {
			relateAcrossR2953To((Instance_c) elements[i]);
		}
		count++;
	}
}

public void relateAcrossR2953To(Instance_c target)
{
  if (target != null) {
    target.relateAcrossR2953To(this, true) ;
  }
}

public void relateAcrossR2953To(Instance_c target, boolean notifyChanges)
{
  if (target != null) {
    target.relateAcrossR2953To(this, notifyChanges) ;
  }
}

public void setBackPointerR2953To(Instance_c target)
{
  	synchronized (backPointer_CausedLastStateChangeToInstanceCausedLastStateChangeTo_R2953) {
		backPointer_CausedLastStateChangeToInstanceCausedLastStateChangeTo_R2953.add(target);
	}
}

public void unrelateAcrossR2953From(Instance_c target)
{
  if (target != null) {
    target.unrelateAcrossR2953From(this, true) ;
  }
}

public void unrelateAcrossR2953From(Instance_c target, boolean notifyChanges)
{
  if (target != null) {
    target.unrelateAcrossR2953From(this, notifyChanges) ;
  }
}

public void clearBackPointerR2953To(Instance_c target)
{
  synchronized (backPointer_CausedLastStateChangeToInstanceCausedLastStateChangeTo_R2953) {
	    backPointer_CausedLastStateChangeToInstanceCausedLastStateChangeTo_R2953.remove(target);
	}
}

public static Transition_c getOneSM_TXNOnR2953(Instance_c [] targets)
{
    return getOneSM_TXNOnR2953(targets, null);
}

public static Transition_c getOneSM_TXNOnR2953(Instance_c [] targets, ClassQueryInterface_c test)
{
    return getOneSM_TXNOnR2953(targets, test, true);
}

public static Transition_c getOneSM_TXNOnR2953(Instance_c [] targets, ClassQueryInterface_c test, boolean loadComponent)
{
    Transition_c ret_val = null;
    if (targets != null)
    {
        for (int i = 0; i < targets.length && ret_val == null; ++i )
        {
           if (test != null) {
             Transition_c candidate_val = getOneSM_TXNOnR2953(targets[i],true);
             if ( candidate_val != null && test.evaluate(candidate_val) )
             {
               ret_val = candidate_val;
               break;
             }
           }
           else {
             ret_val = getOneSM_TXNOnR2953(targets[i], loadComponent);
             if (ret_val != null) {
               break;
             }
           }
        }
    }
    return ret_val;
}

public static Transition_c getOneSM_TXNOnR2953(Instance_c target)
{
	return getOneSM_TXNOnR2953(target, true);
}
public static Transition_c getOneSM_TXNOnR2953(Instance_c target, boolean loadComponent)
{
  if (target != null) {
    return target.EnteredLastStateViaTransition ;
  } else {
    return null;
  }
}

public static Transition_c [] getManySM_TXNsOnR2953(Instance_c [] targets,
    ClassQueryInterface_c test)
{
	return getManySM_TXNsOnR2953(targets, test, true);
}

public static Transition_c [] getManySM_TXNsOnR2953(Instance_c [] targets,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if(targets == null || targets.length == 0 || targets[0] == null)
    return new Transition_c[0];
  
  
  LinkedHashSet<Transition_c> elementsSet = new LinkedHashSet<Transition_c>();
  for (int i = 0; i < targets.length; i++) {
    Transition_c associate = targets[i].EnteredLastStateViaTransition;
    if (targets[i] != null && associate != null
    	&& (test == null || test.evaluate(associate))) {
        	if (elementsSet.add(associate)){ 
            }
    }
  }

  Transition_c[] result = new Transition_c[elementsSet.size()];
  elementsSet.toArray(result);
  return result;
}

public static Transition_c [] getManySM_TXNsOnR2953(Instance_c [] targets)
{
  return getManySM_TXNsOnR2953(targets, null);
}

public static Transition_c [] getManySM_TXNsOnR2953(Instance_c target,
    ClassQueryInterface_c test, boolean loadComponent)
{
  if (target != null) {
    Instance_c [] targetArray = new Instance_c[1];
    targetArray[0] = target;
    return getManySM_TXNsOnR2953(targetArray, test, loadComponent);
  } else {
    Transition_c [] result = new Transition_c [0] ;
    return result ;
  }
  
}

public static Transition_c [] getManySM_TXNsOnR2953(Instance_c target,
    ClassQueryInterface_c test)
{
    return getManySM_TXNsOnR2953(target, null, true);
}

public static Transition_c [] getManySM_TXNsOnR2953(Instance_c target)
{
    return getManySM_TXNsOnR2953(target, null, true);
}

public static Transition_c [] getManySM_TXNsOnR2953(Instance_c target, boolean loadComponent)
{
    return getManySM_TXNsOnR2953(target, null, loadComponent);
}


      
  public void batchRelate(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots)
  {
      batchRelate(modelRoot, false, notifyChanges, searchAllRoots);
  }
  
  public void batchRelate(ModelRoot modelRoot, boolean relateProxies, boolean notifyChanges, boolean searchAllRoots)
  {
        InstanceList instances=null;
        ModelRoot baseRoot = modelRoot;

	if (IsDestinedToStateMachineState == null) {          
      // R506
	  instances = baseRoot.getInstanceList(StateMachineState_c.class);
      StateMachineState_c relInst38258 = null;
      synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
        while (cursor.hasNext())
        {
           StateMachineState_c source = (StateMachineState_c)cursor.next() ;
           if (     source.getSmspd_idCachedValue().equals(m_smspd_id) && 
     source.getSmstt_id().equals(m_smstt_id) && 
     source.getSm_idCachedValue().equals(m_sm_id) 		){
  		relInst38258 = source;
			break;
		  }
	  }
     }//synchronized
			//synchronized
      if ( relInst38258 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38258) && !isProxy())) {
	      relInst38258.relateAcrossR506To(this, notifyChanges);
	  }
	  }
	}
	          

	if (StateMachine == null) {          
      // R505
      StateMachine_c relInst38259 = (StateMachine_c) baseRoot.getInstanceList(StateMachine_c.class).get(new Object[] {m_sm_id});
            // if there was no local element, check for any global elements
            // failing that proceed to check other model roots
      		if (relInst38259 == null) {
      			relInst38259 = (StateMachine_c) Ooaofooa.getDefaultInstance().getInstanceList(StateMachine_c.class).get(new Object[] {m_sm_id});
      		}
			if (relInst38259 == null && searchAllRoots && !baseRoot.isCompareRoot()) {
				Ooaofooa[] roots = Ooaofooa.getInstances();
				for (int i = 0; i < roots.length; i++) {
				    if(roots[i].isCompareRoot()) {
				         // never use elements from any compare root
				         continue;
				    }
					relInst38259 = (StateMachine_c) roots[i].getInstanceList(StateMachine_c.class).get(new Object[] {m_sm_id});
					if (relInst38259 != null)
						break;
				}
			}
			//synchronized
      if ( relInst38259 != null )
      {
          if (relateProxies || !isProxy() || (inSameComponent(this, relInst38259) && !isProxy())) {
	      relInst38259.relateAcrossR505To(this, notifyChanges);
	  }
	  }
	}
	          
	}
  public void batchUnrelate(boolean notifyChanges)
  {
		NonRootModelElement inst=null;
      // R506
      // SM_STATE
		  inst=IsDestinedToStateMachineState;
			unrelateAcrossR506From(IsDestinedToStateMachineState, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
      // R505
      // SM_SM
		  inst=StateMachine;
			unrelateAcrossR505From(StateMachine, notifyChanges);
          if ( inst != null ) {
			   inst.removeRef();
	      }
	}
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots) {
		batchRelateAll(modelRoot, notifyChanges, searchAllRoots, false);
  }	  
  public static void batchRelateAll(ModelRoot modelRoot, boolean notifyChanges, boolean searchAllRoots, boolean relateProxies)
  {
	InstanceList instances = modelRoot.getInstanceList(Transition_c.class);
    synchronized(instances) {
        Iterator<NonRootModelElement> cursor = instances.iterator() ;
    	while (cursor.hasNext())
	    {
            final Transition_c inst = (Transition_c)cursor.next() ;
	        inst.batchRelate(modelRoot, relateProxies, notifyChanges, searchAllRoots );
	    }
	}
  }

  public static void clearInstances(ModelRoot modelRoot)
  {
    InstanceList instances = modelRoot.getInstanceList(Transition_c.class);
    synchronized(instances) {
       for(int i=instances.size()-1; i>=0; i--){
              ((NonRootModelElement)instances.get(i)).delete_unchecked();
       }
    
    }
  }

  public static Transition_c TransitionInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {
  		Transition_c result=findTransitionInstance(modelRoot,test,loadComponent);
  		if(result==null && loadComponent){
     List pmcs =  PersistenceManager.findAllComponents(modelRoot,Transition_c.class);
		for (int i = 0; i < pmcs.size(); i++) {
			PersistableModelComponent component = (PersistableModelComponent) pmcs
				.get(i);
			if (!component.isLoaded()) {
				try {
					component.load(new NullProgressMonitor());
					 result=findTransitionInstance(modelRoot,test,loadComponent);
					 if(result!=null) return result;
				} catch (Exception e) {
					CorePlugin.logError("Error Loading component", e);
				}
			}
		}
	    }
	    if(result!=null && loadComponent){
    	    result.loadProxy();
	    }
	  return result;  
  }
private static Transition_c findTransitionInstance(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
{
	InstanceList instances = modelRoot.getInstanceList(Transition_c.class);
		synchronized (instances) {
            for (int i = 0; i < instances.size(); ++i) {
				Transition_c x = (Transition_c) instances.get(i);
				if (test==null || test.evaluate(x)){
					if(x.ensureLoaded(loadComponent))
					return x;
			}
		}
		}
			return null;
}
  public static Transition_c TransitionInstance(ModelRoot modelRoot, ClassQueryInterface_c test){
     return TransitionInstance(modelRoot,test,true);
  }
  
  public static Transition_c TransitionInstance(ModelRoot modelRoot)
  {
	 return TransitionInstance(modelRoot,null,true);
  }

  public static Transition_c [] TransitionInstances(ModelRoot modelRoot, ClassQueryInterface_c test, boolean loadComponent)
  {	
            if(loadComponent){
  			   PersistenceManager.ensureAllInstancesLoaded(modelRoot, Transition_c.class);
  			}
		    InstanceList instances = modelRoot.getInstanceList(Transition_c.class);
			Vector matches = new Vector();
			synchronized (instances) {
                for (int i = 0; i < instances.size(); ++i) {
					Transition_c x = (Transition_c) instances.get(i);
					if (test==null ||test.evaluate(x)){
						if(x.ensureLoaded(loadComponent))
						matches.add(x);
			    }
				}
			if (matches.size() > 0) {
				Transition_c[] ret_set = new Transition_c[matches.size()];
				matches.copyInto(ret_set);
				return ret_set;
			} else {
				return new Transition_c[0];
			}		
		} 
  }
  public static Transition_c [] TransitionInstances(ModelRoot modelRoot, ClassQueryInterface_c test){
    return  TransitionInstances(modelRoot,test,true);
  }
  public static Transition_c [] TransitionInstances(ModelRoot modelRoot)
  {
	return TransitionInstances(modelRoot,null,true);
  }

  public boolean delete()
  {
    boolean result = super.delete();
	boolean delete_error = false;
	String errorMsg = "The following relationships were not torn down by the Transition.dispose call: ";
	TransitionActionHome_c testR530Inst = TransitionActionHome_c.getOneSM_TAHOnR530(this, false);

	if ( testR530Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "530 ";	
	}
	NoEventTransition_c testR507Inst1 = NoEventTransition_c.getOneSM_NETXNOnR507(this, false);

	if ( testR507Inst1 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "507 ";
	}
	CreationTransition_c testR507Inst2 = CreationTransition_c.getOneSM_CRTXNOnR507(this, false);

	if ( testR507Inst2 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "507 ";
	}
	NewStateTransition_c testR507Inst3 = NewStateTransition_c.getOneSM_NSTXNOnR507(this, false);

	if ( testR507Inst3 != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "507 ";
	}
	StateMachineState_c testR506Inst = StateMachineState_c.getOneSM_STATEOnR506(this, false);

	if ( testR506Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "506 ";
	}
	StateMachine_c testR505Inst = StateMachine_c.getOneSM_SMOnR505(this, false);

	if ( testR505Inst != null )
	{
   	delete_error = true;	        
	errorMsg = errorMsg + "505 ";
	}
 	MealyActionHome_c testR512Inst = MealyActionHome_c.getOneSM_MEAHOnR512(this, false);

 	if ( testR512Inst != null )
	{
 	delete_error = true;
	errorMsg = errorMsg + "512 ";
 	}
	Instance_c testR2953Inst = Instance_c.getOneI_INSOnR2953(this, false);

	if ( testR2953Inst != null )
	{
	delete_error = true;
	errorMsg = errorMsg + "2953 ";	
	}
	if(delete_error == true) {

		if(CorePlugin.getDefault().isDebugging()) {
			Ooaofooa.log.println(ILogger.DELETE, "Transition", errorMsg);
		}
		else {
			Exception e = new Exception();
            e.fillInStackTrace();
			CorePlugin.logError(errorMsg, e);
		}
	}
	return result;
  }

	/**
	 * Assigns IDs to instances of this class.
	 */
    private static IdAssigner idAssigner = new IdAssigner();
    
	/**
	 * See field.
	 */
    public IdAssigner getIdAssigner() {return idAssigner;}

	/**
	 * See field.
	 */
    public static IdAssigner getIdAssigner_() {return idAssigner;}
  // end declare instance pool

  // declare attribute accessors
  public boolean isUUID(String attributeName){
      if(attributeName.equals("trans_id")){
         return true;
      }
      if(attributeName.equals("sm_id")){
         return true;
      }
      if(attributeName.equals("smstt_id")){
         return true;
      }
      if(attributeName.equals("smspd_id")){
         return true;
      }
      return false;      
  }      
 public String getCompUniqueID(){
    UUID tempID=null;
    long longID=0L;
    StringBuffer result= new StringBuffer();
    
    tempID= getTrans_id();
    
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    tempID= getSm_id();
    
        if(IdAssigner.NULL_UUID.equals(tempID))
	      tempID=getSm_idCachedValue(); 
	      result.append(Long.toHexString(tempID.getMostSignificantBits()));
          result.append(Long.toHexString(tempID.getLeastSignificantBits()));
    return result.toString();
 }
  // declare attribute accessors
  public long getTrans_idLongBased()
  {
    if(m_trans_idLongBased == 0 && !IdAssigner.NULL_UUID.equals(m_trans_id)){
    	return 0xfffffff & m_trans_id.getLeastSignificantBits();
    }
    return m_trans_idLongBased ;
  }
  public java.util.UUID getTrans_id()
  {
    return m_trans_id ;
  }


  public void setTrans_id(java.util.UUID newValue)
  {
   m_trans_id = IdAssigner.preprocessUUID(newValue);
  }
  public long getSm_idLongBased()
  {
    if ( StateMachine != null )
    {
      return StateMachine.getSm_idLongBased();
    }
    if ( IsDestinedToStateMachineState != null )
    {
      return IsDestinedToStateMachineState.getSm_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSm_id()
  {
    if ( StateMachine != null )
    {
      return StateMachine.getSm_id();
    }
    if ( IsDestinedToStateMachineState != null )
    {
      return IsDestinedToStateMachineState.getSm_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSm_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_sm_id) )
      return m_sm_id;
    else
      return getSm_id();
  }
  
  public long getSmstt_idLongBased()
  {
    if ( IsDestinedToStateMachineState != null )
    {
      return IsDestinedToStateMachineState.getSmstt_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSmstt_id()
  {
    if ( IsDestinedToStateMachineState != null )
    {
      return IsDestinedToStateMachineState.getSmstt_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSmstt_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_smstt_id) )
      return m_smstt_id;
    else
      return getSmstt_id();
  }
  
  public void setSmstt_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_smstt_id)){
	        return;
	    }
	}else if(m_smstt_id != null){
	    if(m_smstt_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Smstt_id", m_smstt_id, newValue,true); 
   m_smstt_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  public long getSmspd_idLongBased()
  {
    if ( IsDestinedToStateMachineState != null )
    {
      return IsDestinedToStateMachineState.getSmspd_idLongBased();
    }
    return 0;  
  }          
  public java.util.UUID getSmspd_id()
  {
    if ( IsDestinedToStateMachineState != null )
    {
      return IsDestinedToStateMachineState.getSmspd_id();
    }
    return IdAssigner.NULL_UUID;
  }


  public java.util.UUID getSmspd_idCachedValue()
  {
    if ( !IdAssigner.NULL_UUID.equals(m_smspd_id) )
      return m_smspd_id;
    else
      return getSmspd_id();
  }
  
  public void setSmspd_id(java.util.UUID newValue)
  {
	if(newValue != null){
	    if(newValue.equals(m_smspd_id)){
	        return;
	    }
	}else if(m_smspd_id != null){
	    if(m_smspd_id.equals(newValue)){
	        return;
	    }
	}else{
	    return;
	}
	AttributeChangeModelDelta change = new AttributeChangeModelDelta(Modeleventnotification_c.DELTA_ATTRIBUTE_CHANGE, this, "Smspd_id", m_smspd_id, newValue,true); 
   m_smspd_id = IdAssigner.preprocessUUID(newValue);
    Ooaofooa.getDefaultInstance().fireModelElementAttributeChanged(change);
  }
  // end declare accessors
  public static void checkClassConsistency (ModelRoot modelRoot) {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Transition", //$NON-NLS-1$
	  " Operation entered: Transition::checkClassConsistency"); //$NON-NLS-1$
     if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
       return;
     }
     Transition_c [] objs = Transition_c.TransitionInstances(modelRoot,null,false); 
     
     for ( int i = 0; i < objs.length; i++) {
       objs[i].checkConsistency();
     }  
  } 
  public boolean checkConsistency () {
    Ooaofooa.log.println(
	  ILogger.OPERATION,
	  "Transition", //$NON-NLS-1$
	  " Operation entered: Transition::checkConsistency");  //$NON-NLS-1$
    if (Boolean.valueOf(System.getenv("PTC_MCC_ENABLED")) == false) {  //$NON-NLS-1$
      return true;
    }
	ModelRoot modelRoot = getModelRoot();
    boolean      retval = true;
    class Transition_c_test38261_c implements ClassQueryInterface_c
    {
	  Transition_c_test38261_c( java.util.UUID            p38262, java.util.UUID            p38263 ) {
	       m_p38262 = p38262; 
m_p38263 = p38263;
	  }
	  private java.util.UUID             m_p38262; private java.util.UUID             m_p38263; 
	  public boolean evaluate (Object candidate)
	  {
	      Transition_c selected = (Transition_c) candidate;
	      boolean retval = false;
	      retval = (selected.getTrans_id().equals(m_p38262)) & (selected.getSm_id().equals(m_p38263));
	      return retval;
	  }
    }

    Transition_c [] objs38260 = 
    Transition_c.TransitionInstances(modelRoot, new Transition_c_test38261_c(getTrans_id(), getSm_id())) ;

    if ( (  (objs38260.length) == 0) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Transition", //$NON-NLS-1$
           "Consistency: Object: Transition: Cardinality of an identifier is zero. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38260.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Transition: Cardinality of an identifier is zero. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38260.length )  , e); 
      }
      retval = false;

    }

    if ( (  (objs38260.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Transition", //$NON-NLS-1$
           "Consistency: Object: Transition: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38260.length )  + " Trans_ID: " + "Not Printable"  + " SM_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Transition: Cardinality of an identifier is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38260.length )  + " Trans_ID: " + "Not Printable"  + " SM_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Transition is a referring class in association: rel.Numb = 505
          // The participating class is: State Machine
    class StateMachine_c_test38267_c implements ClassQueryInterface_c
    {
	  StateMachine_c_test38267_c( java.util.UUID            p38268 ) {
	  m_p38268 = p38268;
	  }
	  private java.util.UUID             m_p38268; 
	  public boolean evaluate (Object candidate)
	  {
	      StateMachine_c selected = (StateMachine_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSm_id().equals(m_p38268));
	      return retval;
	  }
    }

    StateMachine_c [] objs38266 = 
    StateMachine_c.StateMachineInstances(modelRoot, new StateMachine_c_test38267_c(getSm_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs38266.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Transition", //$NON-NLS-1$
           "Consistency: Object: Transition: Association: 505: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38266.length )  + " SM_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Transition: Association: 505: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38266.length )  + " SM_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Transition is a referring class in association: rel.Numb = 506
          // The participating class is: State Machine State
    class StateMachineState_c_test38270_c implements ClassQueryInterface_c
    {
	  StateMachineState_c_test38270_c( java.util.UUID            p38271, java.util.UUID            p38272, java.util.UUID            p38273 ) {
	            m_p38271 = p38271; 
m_p38272 = p38272; 
m_p38273 = p38273;
	  }
	  private java.util.UUID             m_p38271; private java.util.UUID             m_p38272; private java.util.UUID             m_p38273; 
	  public boolean evaluate (Object candidate)
	  {
	      StateMachineState_c selected = (StateMachineState_c) candidate;
	      boolean retval = false;
	      retval = (selected.getSm_id().equals(m_p38271)) & (selected.getSmstt_id().equals(m_p38272)) & (selected.getSmspd_id().equals(m_p38273));
	      return retval;
	  }
    }

    StateMachineState_c [] objs38269 = 
    StateMachineState_c.StateMachineStateInstances(modelRoot, new StateMachineState_c_test38270_c(getSm_id(), getSmstt_id(), getSmspd_id())) ;

          // The participant is unconditional
          // The multiplicity of the participant is one
    if ( (  (objs38269.length) != 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Transition", //$NON-NLS-1$
           "Consistency: Object: Transition: Association: 506: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " //$NON-NLS-1$ 
           + Integer.toString( objs38269.length )  + " SM_ID: " + "Not Printable"  + " SMstt_ID: " + "Not Printable"  + " SMspd_ID: " + "Not Printable" ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Transition: Association: 506: Cardinality of a participant is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38269.length )  + " SM_ID: " + "Not Printable"  + " SMstt_ID: " + "Not Printable"  + " SMspd_ID: " + "Not Printable" , e); //$NON-NLS-1$
      }
      retval = false;

    }

          // Transition is a participating class in association: rel.Numb = 530
             // Object: Transition Action Home
    class TransitionActionHome_c_test38275_c implements ClassQueryInterface_c
    {
	  TransitionActionHome_c_test38275_c( java.util.UUID            p38276, java.util.UUID            p38277 ) {
	       m_p38276 = p38276; 
m_p38277 = p38277;
	  }
	  private java.util.UUID             m_p38276; private java.util.UUID             m_p38277; 
	  public boolean evaluate (Object candidate)
	  {
	      TransitionActionHome_c selected = (TransitionActionHome_c) candidate;
	      boolean retval = false;
	      retval = (selected.getTrans_id().equals(m_p38276)) & (selected.getSm_id().equals(m_p38277));
	      return retval;
	  }
    }

    TransitionActionHome_c [] objs38274 = 
    TransitionActionHome_c.TransitionActionHomeInstances(modelRoot, new TransitionActionHome_c_test38275_c(getTrans_id(), getSm_id())) ;

    if ( (  (objs38274.length) > 1) )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Transition", //$NON-NLS-1$
           "Consistency: Object: Transition: Association: 530: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38274.length ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Transition: Association: 530: Cardinality of a formalizer is greater than 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38274.length )  , e); 
      }
      retval = false;

    }

          // Supertype: rel.Numb = 507
    int objs38278 = 0;
            // Subtype Object: No Event Transition
    class NoEventTransition_c_test38279_c implements ClassQueryInterface_c
    {
	  NoEventTransition_c_test38279_c( java.util.UUID            p38280, java.util.UUID            p38281 ) {
	       m_p38280 = p38280; 
m_p38281 = p38281;
	  }
	  private java.util.UUID             m_p38280; private java.util.UUID             m_p38281; 
	  public boolean evaluate (Object candidate)
	  {
	      NoEventTransition_c selected = (NoEventTransition_c) candidate;
	      boolean retval = false;
	      retval = (selected.getTrans_id().equals(m_p38280)) & (selected.getSm_id().equals(m_p38281));
	      return retval;
	  }
    }

    NoEventTransition_c [] objs38282 = 
    NoEventTransition_c.NoEventTransitionInstances(modelRoot, new NoEventTransition_c_test38279_c(getTrans_id(), getSm_id())) ;
 
    objs38278 = objs38278 + objs38282.length;
            // Subtype Object: Creation Transition
    class CreationTransition_c_test38283_c implements ClassQueryInterface_c
    {
	  CreationTransition_c_test38283_c( java.util.UUID            p38284, java.util.UUID            p38285 ) {
	       m_p38284 = p38284; 
m_p38285 = p38285;
	  }
	  private java.util.UUID             m_p38284; private java.util.UUID             m_p38285; 
	  public boolean evaluate (Object candidate)
	  {
	      CreationTransition_c selected = (CreationTransition_c) candidate;
	      boolean retval = false;
	      retval = (selected.getTrans_id().equals(m_p38284)) & (selected.getSm_id().equals(m_p38285));
	      return retval;
	  }
    }

    CreationTransition_c [] objs38286 = 
    CreationTransition_c.CreationTransitionInstances(modelRoot, new CreationTransition_c_test38283_c(getTrans_id(), getSm_id())) ;
 
    objs38278 = objs38278 + objs38286.length;
            // Subtype Object: New State Transition
    class NewStateTransition_c_test38287_c implements ClassQueryInterface_c
    {
	  NewStateTransition_c_test38287_c( java.util.UUID            p38288, java.util.UUID            p38289 ) {
	       m_p38288 = p38288; 
m_p38289 = p38289;
	  }
	  private java.util.UUID             m_p38288; private java.util.UUID             m_p38289; 
	  public boolean evaluate (Object candidate)
	  {
	      NewStateTransition_c selected = (NewStateTransition_c) candidate;
	      boolean retval = false;
	      retval = (selected.getTrans_id().equals(m_p38288)) & (selected.getSm_id().equals(m_p38289));
	      return retval;
	  }
    }

    NewStateTransition_c [] objs38290 = 
    NewStateTransition_c.NewStateTransitionInstances(modelRoot, new NewStateTransition_c_test38287_c(getTrans_id(), getSm_id())) ;
 
    objs38278 = objs38278 + objs38290.length;
    if ( objs38278 != 1 )
    {

      if (CorePlugin.getDefault().isDebugging()){
          Ooaofooa.log.println(ILogger.CONSISTENCY, "Transition", //$NON-NLS-1$
           "Consistency: Object: Transition: Association: 507: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$
           + "Actual Value: " + Integer.toString( objs38278 ) ); //$NON-NLS-1$
      }
      else {
          Exception e = new Exception();
          CorePlugin.logError("Consistency: Object: Transition: Association: 507: Cardinality of subtype is not equal to 1. " //$NON-NLS-1$ 
          + "Actual Value: " //$NON-NLS-1$
          + Integer.toString( objs38278 )  , e); 
      }
      retval = false;

    }

          // Associated Other Side: rel.Numb = 512
            // Link Object: Mealy Action Home
          // Transition is a participating class in association: rel.Numb = 2953
             // Object: Instance
    return retval;
  }


  // declare transform functions
  public  String       Get_connector_text(final java.util.UUID         p_Ooa_id,final boolean      p_Ooa_typeisimportedclass,final int  p_At,final java.util.UUID         p_Parent_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Get_connector_text") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


if ( (p_At == End_c.Middle) )
{

NewStateTransition_c v_nst = NewStateTransition_c.getOneSM_NSTXNOnR507(this);


if ( (  (v_nst != null)) )
{

v_result = v_nst.Get_connector_text() ;



}

NoEventTransition_c v_net = NoEventTransition_c.getOneSM_NETXNOnR507(this);


if ( (  (v_net != null)) )
{

v_result = v_net.Get_connector_text() ;



}

Action_c v_action = Action_c.getOneSM_ACTOnR514(ActionHome_c.getOneSM_AHOnR513(TransitionActionHome_c.getOneSM_TAHOnR530(this)));


if (   (v_action != null) && ! v_action.getAction_semantics().equals("") )
{

v_result = v_result + "/" ;


if ( Pref_c.Getboolean(			    
"bridgepoint_prefs_show_transition_actions") )
{

v_result = v_result + Gd_c.Newline() + v_action.getAction_semantics() ;



}

else
{

v_result = v_result + "..." ;



}


}


}

return v_result;



   } // End get_connector_text
  public  int  Get_style(final int  p_At)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Get_style") ; 
               final ModelRoot modelRoot = getModelRoot();
CreationTransition_c v_crt = CreationTransition_c.getOneSM_CRTXNOnR507(this);


if ( (  (v_crt != null)) )
{

return v_crt.Get_style(			    
p_At);



}

else
{

if ( (p_At == End_c.End) )
{

return Style_c.OpenArrow;



}

else
{

return Style_c.None;



}


}


   } // End get_style
  public  void Dispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Dispose") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End dispose
  public  java.util.UUID         Get_ooa_id()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Get_ooa_id") ; 
               final ModelRoot modelRoot = getModelRoot();
return getTrans_id();



   } // End get_ooa_id
  public  boolean      Actionfilter(final String       p_Name,final String       p_Value)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Actionfilter") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Name.equals("event")) )
{

if ( (p_Value.equals("exists spec pkg")) || (p_Value.equals("exists generic pkg")) )
{

ModelClass_c v_cls = ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR505(this)));


if ( (  (v_cls == null)) )
{

v_cls = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR505(this)));



}

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(v_cls);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_cc = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_cc != null) ;


if ( ((p_Value.equals("exists spec pkg")) && (v_isInGenericPackage)) )
{

return false;



}

if ( ((p_Value.equals("exists generic pkg")) && (  !v_isInGenericPackage)) )
{

return false;



}

NoEventTransition_c v_net = NoEventTransition_c.getOneSM_NETXNOnR507(this);


NewStateTransition_c v_nst = NewStateTransition_c.getOneSM_NSTXNOnR507(this);


CreationTransition_c v_ct = CreationTransition_c.getOneSM_CRTXNOnR507(this);


StateMachine_c v_stateMachine = StateMachine_c.getOneSM_SMOnR505(this);


StateMachineEvent_c [] v_selfTypeEvents = StateMachineEvent_c.getManySM_EVTsOnR502(v_stateMachine);


InstanceStateMachine_c v_instanceStateMachine = InstanceStateMachine_c.getOneSM_ISMOnR517(v_stateMachine);


int          v_numSupertypeEvents = 0 ;


int          v_numSelfTypeEvents =   (v_selfTypeEvents.length) ;


if ( (  (v_instanceStateMachine != null) &&   (v_ct == null)) )
{

StateMachineEvent_c [] v_events = StateMachineEvent_c.StateMachineEventInstances(modelRoot) ;


StateMachineEvent_c  v_event = null;
for ( int i36572 = 0; i36572 < v_events.length; i36572++)
{
  v_event = v_events[i36572] ;

if ( (! v_event.getSm_id().equals(getSm_id()) && v_event.Isassignabletostatemachine(			    
getSm_id()			    
,false)) )
{

v_numSupertypeEvents = v_numSupertypeEvents + 1 ;



}


}

v_events = StateMachineEvent_c.getManySM_EVTsOnR502(v_stateMachine);


for ( int i36573 = 0; i36573 < v_events.length; i36573++)
{
  v_event = v_events[i36573] ;

if ( (v_event.Isassignedinsubtypestatemachine(			    
v_instanceStateMachine.getObj_id())) )
{

v_numSelfTypeEvents = v_numSelfTypeEvents - 1 ;



}


}


}

else
{

StateMachineEvent_c [] v_events = StateMachineEvent_c.getManySM_EVTsOnR502(v_stateMachine);


StateMachineEvent_c  v_event = null;
for ( int i36574 = 0; i36574 < v_events.length; i36574++)
{
  v_event = v_events[i36574] ;

SignalEvent_c v_sigEvt = SignalEvent_c.getOneSM_SGEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(v_event));


if (   (v_sigEvt != null) )
{

v_numSelfTypeEvents = v_numSelfTypeEvents - 1 ;



}


}


}

if ( (  (v_net != null)) )
{

StateMachineState_c v_state = StateMachineState_c.getOneSM_STATEOnR508(v_net);


NewStateTransition_c [] v_newStateTransitions = NewStateTransition_c.getManySM_NSTXNsOnR504(StateEventMatrixEntry_c.getManySM_SEMEsOnR503(v_state));


SignalEvent_c [] v_signalDrivers = SignalEvent_c.getManySM_SGEVTsOnR526(SemEvent_c.getManySM_SEVTsOnR503(StateEventMatrixEntry_c.getManySM_SEMEsOnR504(v_newStateTransitions)));


int          v_eventDrivenNewStateTransitions =   (v_newStateTransitions.length) -   (v_signalDrivers.length) ;


return v_numSelfTypeEvents + v_numSupertypeEvents > v_eventDrivenNewStateTransitions;



}

else if ( (  (v_nst != null)) )
{

StateMachineState_c v_state = StateMachineState_c.getOneSM_STATEOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(v_nst));


NewStateTransition_c [] v_newStateTransitions = NewStateTransition_c.getManySM_NSTXNsOnR504(StateEventMatrixEntry_c.getManySM_SEMEsOnR503(v_state));


SignalEvent_c [] v_signalDrivers = SignalEvent_c.getManySM_SGEVTsOnR526(SemEvent_c.getManySM_SEVTsOnR503(StateEventMatrixEntry_c.getManySM_SEMEsOnR504(v_newStateTransitions)));


int          v_eventDrivenNewStateTransitions =   (v_newStateTransitions.length) -   (v_signalDrivers.length) ;


return v_numSelfTypeEvents + v_numSupertypeEvents > v_eventDrivenNewStateTransitions;



}

else if ( (  (v_ct != null)) )
{

StateMachineState_c v_state = StateMachineState_c.getOneSM_STATEOnR506(this);


CreationTransition_c [] v_creationTransitionsAssigned = CreationTransition_c.getManySM_CRTXNsOnR509(LocalEvent_c.getManySM_LEVTsOnR526(SemEvent_c.getManySM_SEVTsOnR525(v_selfTypeEvents)));


return v_numSelfTypeEvents >   (v_creationTransitionsAssigned.length);



}


}

else if ( (p_Value.equals("assigned")) )
{

LocalEvent_c v_levt = LocalEvent_c.getOneSM_LEVTOnR526(SemEvent_c.getOneSM_SEVTOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(NewStateTransition_c.getOneSM_NSTXNOnR507(this))));


if (   (v_levt == null) )
{

v_levt = LocalEvent_c.getOneSM_LEVTOnR509(CreationTransition_c.getOneSM_CRTXNOnR507(this));



}

return   (v_levt != null);



}


}

else if ( p_Name.equals("signal") )
{

if ( (p_Value.equals("exists spec pkg")) || (p_Value.equals("exists generic pkg")) )
{

ModelClass_c v_cls = ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR505(this)));


if ( (  (v_cls == null)) )
{

v_cls = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR505(this)));



}

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(v_cls);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


if (   (v_package != null) )
{

java.util.UUID         v_compId = v_package.Getcontainingcomponentid() ;


v_component = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_compId);



}

boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage &&   (v_component == null)) )
{

return false;



}

if ( ((p_Value.equals("exists spec pkg")) && (v_isInGenericPackage)) )
{

return false;



}

if ( ((p_Value.equals("exists generic pkg")) && (  !v_isInGenericPackage)) )
{

return false;



}

if ( (  !v_isInGenericPackage) )
{

v_component = Component_c.getOneC_COnR4204(DomainAsComponent_c.getOneCN_DCOnR4204(Domain_c.getOneS_DOMOnR1(Subsystem_c.getOneS_SSOnR2(ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR505(this)))))));



}

Provision_c [] v_provisions = Provision_c.getManyC_PsOnR4009(InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_component)));


Provision_c  v_provision = null;
for ( int i36575 = 0; i36575 < v_provisions.length; i36575++)
{
  v_provision = v_provisions[i36575] ;

if ( v_provision.Hasavailablesignalsfor(			    
getTrans_id()) )
{

return true;



}


}

Requirement_c [] v_requirements = Requirement_c.getManyC_RsOnR4009(InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_component)));


Requirement_c  v_requirement = null;
for ( int i36576 = 0; i36576 < v_requirements.length; i36576++)
{
  v_requirement = v_requirements[i36576] ;

if ( v_requirement.Hasavailablesignalsfor(			    
getTrans_id()) )
{

return true;



}


}


}

else if ( p_Value.equals("assigned") )
{

SignalEvent_c v_sgEvt = SignalEvent_c.getOneSM_SGEVTOnR526(SemEvent_c.getOneSM_SEVTOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(NewStateTransition_c.getOneSM_NSTXNOnR507(this))));


return   (v_sgEvt != null);



}


}

return false;



   } // End actionFilter
  public  void Addevent(final java.util.UUID         p_Eventid,final java.util.UUID         p_Eventstatemachineid)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Addevent") ; 
               final ModelRoot modelRoot = getModelRoot();
  class StateMachineEvent_test36785_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		StateMachineEvent_c selected = (StateMachineEvent_c)candidate;
		return selected.getSmevt_id().equals(p_Eventid) && selected.getSm_id().equals(p_Eventstatemachineid) ;
	}
  }
StateMachineEvent_c v_event = StateMachineEvent_c.StateMachineEventInstance(modelRoot, new StateMachineEvent_test36785_c()) ;


StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR505(this);


java.util.UUID         v_eventId = v_event.Getassociatedeventforstatemachine(			    
v_sm.getSm_id()) ;


v_event = (StateMachineEvent_c) modelRoot.getInstanceList(StateMachineEvent_c.class).getGlobal(null, v_eventId);


NoEventTransition_c v_no_evt_txn = NoEventTransition_c.getOneSM_NETXNOnR507(this);


if ( (  (v_no_evt_txn != null)) )
{

StateMachineState_c v_orig_state = StateMachineState_c.getOneSM_STATEOnR508(v_no_evt_txn);


if (v_no_evt_txn != null) {
v_no_evt_txn.unrelateAcrossR508From(v_orig_state);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_no_evt_txn != null) {
v_no_evt_txn.unrelateAcrossR507From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_no_evt_txn != null) {
// get the location of this element in the instance list
// before deleting
if ( v_no_evt_txn.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_no_evt_txn));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}


NewStateTransition_c v_ns_txn = new NewStateTransition_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ns_txn));


  this.relateAcrossR507To(v_ns_txn);


  class StateEventMatrixEntry_test36999_c implements ClassQueryInterface_c
  {
	StateEventMatrixEntry_test36999_c( java.util.UUID         p37000 ) {
		m_p37000 = p37000;
	}
	private java.util.UUID         m_p37000;
	public boolean evaluate (Object candidate)
	{
		StateEventMatrixEntry_c selected = (StateEventMatrixEntry_c)candidate;
		return selected.getSmevt_id().equals(m_p37000) ;
	}
  }
StateEventMatrixEntry_c v_seme = StateEventMatrixEntry_c.getOneSM_SEMEOnR503(v_orig_state, new StateEventMatrixEntry_test36999_c(v_event.getSmevt_id()));


if (v_seme != null) {
v_seme.Disposechorei() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_ns_txn != null) {
  v_ns_txn.relateAcrossR504To(v_seme);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

else
{

NewStateTransition_c v_ns_txn = NewStateTransition_c.getOneSM_NSTXNOnR507(this);


if ( (  (v_ns_txn != null)) )
{

StateEventMatrixEntry_c v_seme = StateEventMatrixEntry_c.getOneSM_SEMEOnR504(v_ns_txn);


StateMachineState_c v_orig_state = StateMachineState_c.getOneSM_STATEOnR503(v_seme);


CantHappen_c v_ch = new CantHappen_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ch));


if (v_ns_txn != null) {
v_ns_txn.unrelateAcrossR504From(v_seme);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_seme != null) {
  v_seme.relateAcrossR504To(v_ch);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  class StateEventMatrixEntry_test37001_c implements ClassQueryInterface_c
  {
	StateEventMatrixEntry_test37001_c( java.util.UUID         p37002 ) {
		m_p37002 = p37002;
	}
	private java.util.UUID         m_p37002;
	public boolean evaluate (Object candidate)
	{
		StateEventMatrixEntry_c selected = (StateEventMatrixEntry_c)candidate;
		return selected.getSmevt_id().equals(m_p37002) ;
	}
  }
StateEventMatrixEntry_c v_new_seme = StateEventMatrixEntry_c.getOneSM_SEMEOnR503(v_orig_state, new StateEventMatrixEntry_test37001_c(v_event.getSmevt_id()));


if (v_new_seme != null) {
v_new_seme.Disposechorei() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_new_seme != null) {
  v_new_seme.relateAcrossR504To(v_ns_txn);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

else
{

CreationTransition_c v_cr_txn = CreationTransition_c.getOneSM_CRTXNOnR507(this);


LocalEvent_c v_levt = LocalEvent_c.getOneSM_LEVTOnR509(v_cr_txn);


if ( (  (v_levt != null)) )
{

if (v_cr_txn != null) {
v_cr_txn.unrelateAcrossR509From(v_levt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

LocalEvent_c v_new_evt = LocalEvent_c.getOneSM_LEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(v_event));


if (v_cr_txn != null) {
  v_cr_txn.relateAcrossR509To(v_new_evt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


   } // End addEvent
  public  void Removeevent()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Removeevent") ; 
               final ModelRoot modelRoot = getModelRoot();
NewStateTransition_c v_ns_txn = NewStateTransition_c.getOneSM_NSTXNOnR507(this);


if ( (  (v_ns_txn != null)) )
{

StateEventMatrixEntry_c v_seme = StateEventMatrixEntry_c.getOneSM_SEMEOnR504(v_ns_txn);


CantHappen_c v_ch = new CantHappen_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ch));


if (v_ns_txn != null) {
v_ns_txn.unrelateAcrossR504From(v_seme);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_seme != null) {
  v_seme.relateAcrossR504To(v_ch);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


NoEventTransition_c v_ne_txn = new NoEventTransition_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ne_txn));


if (v_ns_txn != null) {
v_ns_txn.unrelateAcrossR507From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


  this.relateAcrossR507To(v_ne_txn);


if (v_ns_txn != null) {
// get the location of this element in the instance list
// before deleting
if ( v_ns_txn.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_ns_txn));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}


StateMachineState_c v_orig_state = StateMachineState_c.getOneSM_STATEOnR503(v_seme);


if (v_ne_txn != null) {
  v_ne_txn.relateAcrossR508To(v_orig_state);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


StateMachineState_c v_dest_state = StateMachineState_c.getOneSM_STATEOnR506(this);



}

else
{

CreationTransition_c v_cr_txn = CreationTransition_c.getOneSM_CRTXNOnR507(this);


LocalEvent_c v_levt = LocalEvent_c.getOneSM_LEVTOnR509(v_cr_txn);


if ( (  (v_levt != null)) )
{

if (v_cr_txn != null) {
v_cr_txn.unrelateAcrossR509From(v_levt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


StateMachineState_c v_st = StateMachineState_c.getOneSM_STATEOnR506(this);



}

else
{


}


}


   } // End removeEvent
  public  void Updateassignedevent()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Updateassignedevent") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_stateMachine = StateMachine_c.getOneSM_SMOnR505(this);


StateMachineEvent_c v_evt = StateMachineEvent_c.getOneSM_EVTOnR525(SemEvent_c.getOneSM_SEVTOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(NewStateTransition_c.getOneSM_NSTXNOnR507(this))));


StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR505(this);


CreationTransition_c v_creationTrans = CreationTransition_c.getOneSM_CRTXNOnR507(this);


ModelClass_c v_polyClass = (ModelClass_c) modelRoot.getInstanceList(ModelClass_c.class).getGlobal(null, Gd_c.Null_unique_id());


boolean      v_isPoly = false ;


if ( (  (v_evt != null)) )
{

NonLocalEvent_c v_nlevt = NonLocalEvent_c.getOneSM_NLEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(v_evt));


if ( (  (v_nlevt != null)) )
{

v_isPoly = true ;



}


}

boolean      v_creation = false ;


if ( (  (v_creationTrans != null)) )
{

v_creation = true ;


v_evt = StateMachineEvent_c.getOneSM_EVTOnR525(SemEvent_c.getOneSM_SEVTOnR526(LocalEvent_c.getOneSM_LEVTOnR509(v_creationTrans)));



}

if ( (  (v_evt == null)) )
{

return ;



}

StateMachineEventDataItem_c [] v_dataItems = StateMachineEventDataItem_c.getManySM_EVTDIsOnR532(v_evt);


java.util.UUID         v_eventID = v_sm.Findmatchingevent(			    
v_evt.getSmevt_id()			    
,v_creation			    
,v_sm.getSm_id()) ;


  class StateMachineEvent_test37003_c implements ClassQueryInterface_c
  {
	StateMachineEvent_test37003_c( java.util.UUID         p37004 ) {
		m_p37004 = p37004;
	}
	private java.util.UUID         m_p37004;
	public boolean evaluate (Object candidate)
	{
		StateMachineEvent_c selected = (StateMachineEvent_c)candidate;
		return selected.getSmevt_id().equals(m_p37004) ;
	}
  }
StateMachineEvent_c v_existingEvt = StateMachineEvent_c.getOneSM_EVTOnR502(v_sm, new StateMachineEvent_test37003_c(v_eventID));


if (   (v_existingEvt != null) )
{

Removeevent() ;


String       v_warnings = "" ;


String       v_sep = "" ;


StateMachineEventDataItem_c  v_dataItem = null;
for ( int i36577 = 0; i36577 < v_dataItems.length; i36577++)
{
  v_dataItem = v_dataItems[i36577] ;

DataType_c v_pastedDIDatatype = DataType_c.getOneS_DTOnR524(v_dataItem);


  class StateMachineEventDataItem_test37005_c implements ClassQueryInterface_c
  {
	StateMachineEventDataItem_test37005_c( String       p37006 ) {
		m_p37006 = p37006;
	}
	private String       m_p37006;
	public boolean evaluate (Object candidate)
	{
		StateMachineEventDataItem_c selected = (StateMachineEventDataItem_c)candidate;
		return selected.getName().equals(m_p37006) ;
	}
  }
StateMachineEventDataItem_c v_existingDataItem = StateMachineEventDataItem_c.getOneSM_EVTDIOnR532(v_existingEvt, new StateMachineEventDataItem_test37005_c(v_dataItem.getName()));


DataType_c v_existingDIDatatype = DataType_c.getOneS_DTOnR524(v_existingDataItem);


if (   (v_existingDataItem != null) && v_existingDIDatatype.getName().equals(v_pastedDIDatatype.getName()) && Os_c.Remove_spaces(			    
v_existingDataItem.getDimensions()).equals(Os_c.Remove_spaces(			    
v_dataItem.getDimensions())) )
{

if (v_dataItem != null) {
v_dataItem.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

else
{

if (   (v_existingDataItem == null) )
{

v_warnings = v_warnings + v_sep + "Event parameter " + v_dataItem.getName() + " was added" ;



}

else
{

String       v_warnType = "" ;


if ( ! v_existingDIDatatype.getName().equals(v_pastedDIDatatype.getName()) )
{

v_warnType = " a type conflict " ;



}

else
{

v_warnType = " an array incompatibility " ;



}

v_warnings = v_warnings + v_sep + "An existing event parameter " + v_dataItem.getName() + " was found, but has" + v_warnType + "with the pasted " + "parameter. The paste has been executed as an additional parameter " + "with the same name. You will need to combine the two parameters or " + "rename one." ;



}

v_sep = ", " ;


if (v_dataItem != null) {
v_dataItem.unrelateAcrossR532From(v_evt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_dataItem != null) {
  v_dataItem.relateAcrossR532To(v_existingEvt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


StateMachine_c v_pasteSM = StateMachine_c.getOneSM_SMOnR516(v_dataItem);


if (   (v_pasteSM != null) )
{

if (v_dataItem != null) {
v_dataItem.unrelateAcrossR516From(v_pasteSM);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}

if (v_dataItem != null) {
  v_dataItem.relateAcrossR516To(v_sm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}

if ( ! v_warnings.equals("") )
{

StateMachine_c v_pasteSM = StateMachine_c.getOneSM_SMOnR502(v_evt);


if (   (v_pasteSM == null) )
{

if (v_evt != null) {
  v_evt.relateAcrossR502To(v_sm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

Util_c.Addpastedelementtoproblemlist(			    
v_evt.Get_name()			    
,v_warnings ) ;



}

if (v_evt != null) {
v_evt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


Addevent(			    
v_existingEvt.getSmevt_id()			    
,v_sm.getSm_id() ) ;



}

else
{

boolean      v_relateToSM = true ;


if ( (v_isPoly) )
{

java.util.UUID         v_polyId = Locatematchingpolymorphicevent(			    
v_evt.getSmevt_id()) ;


if ( (! v_polyId.equals(Gd_c.Null_unique_id())) )
{

StateMachineEvent_c v_polyEvt = (StateMachineEvent_c) modelRoot.getInstanceList(StateMachineEvent_c.class).getGlobal(null, v_polyId);


if ( (  (v_polyEvt != null)) )
{

PolymorphicEvent_c v_poly = PolymorphicEvent_c.getOneSM_PEVTOnR525(v_polyEvt);


if ( (  (v_poly == null)) )
{

v_poly = new PolymorphicEvent_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_poly));


SemEvent_c v_matrixEvent = SemEvent_c.getOneSM_SEVTOnR525(v_polyEvt);


if (v_matrixEvent != null) {
v_matrixEvent.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_poly != null) {
  v_poly.relateAcrossR525To(v_polyEvt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

NonLocalEvent_c v_nlevt = NonLocalEvent_c.getOneSM_NLEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(v_evt));


if (v_nlevt != null) {
  v_nlevt.relateAcrossR527To(v_poly);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

else
{

if (v_evt != null) {
v_evt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


v_relateToSM = false ;



}


}

else
{

if (v_evt != null) {
  v_evt.relateAcrossR502To(v_sm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


String       v_message = Ooaofooa.Getmissinginheritedeventmessage(modelRoot			    
,false) ;


Util_c.Addpastedelementtoproblemlist(			    
v_evt.Get_name()			    
,v_message ) ;


if (v_evt != null) {
v_evt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


v_relateToSM = false ;



}


}

if ( (v_relateToSM) )
{

if (v_evt != null) {
  v_evt.relateAcrossR502To(v_sm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


StateMachineEventDataItem_c  v_dataItem = null;
for ( int i36578 = 0; i36578 < v_dataItems.length; i36578++)
{
  v_dataItem = v_dataItems[i36578] ;

if (v_dataItem != null) {
  v_dataItem.relateAcrossR516To(v_sm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

SemEvent_c v_sevt = SemEvent_c.getOneSM_SEVTOnR525(v_evt);


if (   (v_sevt != null) )
{

StateMachineState_c [] v_states = StateMachineState_c.getManySM_STATEsOnR501(v_sm);


StateMachineState_c  v_state = null;
for ( int i36579 = 0; i36579 < v_states.length; i36579++)
{
  v_state = v_states[i36579] ;

  class StateMachineEvent_test37007_c implements ClassQueryInterface_c
  {
	StateMachineEvent_test37007_c( String       p37008 ) {
		m_p37008 = p37008;
	}
	private String       m_p37008;
	public boolean evaluate (Object candidate)
	{
		StateMachineEvent_c selected = (StateMachineEvent_c)candidate;
		return selected.getDrv_lbl().equals(m_p37008) ;
	}
  }
v_existingEvt = StateMachineEvent_c.getOneSM_EVTOnR525(SemEvent_c.getManySM_SEVTsOnR503(StateEventMatrixEntry_c.getManySM_SEMEsOnR503(v_state)), new StateMachineEvent_test37007_c(v_evt.getDrv_lbl()));


if (   (v_existingEvt == null) )
{

StateEventMatrixEntry_c v_seme = new StateEventMatrixEntry_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_seme));


if (v_seme != null) {
  v_seme.relateAcrossR503To( v_sevt ) ;   v_seme.relateAcrossR503To( v_state ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate using attempted on null link class instance.", t);
}



}


}


}

else
{

String       v_pathMsg = "<No Path Available - Empty instance>" ;


if ( (  (v_stateMachine != null)) )
{

v_pathMsg = v_stateMachine.Getpath() ;



}

User_c.Logerror(			    
"Internal Error in updateAssignedEvent:" + " No State Event Matrix Event instance found for pasted event."			    
,v_pathMsg ) ;



}

if (v_evt != null) {
v_evt.Setuniquenumber(			    
true ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End updateAssignedEvent
  public  java.util.UUID         Locatematchingpolymorphicevent(final java.util.UUID         p_Id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Locatematchingpolymorphicevent") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_stateMachine = StateMachine_c.getOneSM_SMOnR505(this);


ClassStateMachine_c v_asm = ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR505(this));


boolean      v_isClassBased =   (v_asm != null) ;


ModelClass_c v_mclass = ModelClass_c.getOneO_OBJOnR519(v_asm);


if ( (  (v_mclass == null)) )
{

v_mclass = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR505(this)));



}

StateMachine_c [] v_machines = StateMachine_c.getManySM_SMsOnR517(InstanceStateMachine_c.getManySM_ISMsOnR518(ModelClass_c.getManyO_OBJsOnR2(Subsystem_c.getManyS_SSsOnR1(Domain_c.getManyS_DOMsOnR1(Subsystem_c.getManyS_SSsOnR2(v_mclass))))));


if ( (v_isClassBased) )
{

v_machines = StateMachine_c.getManySM_SMsOnR517(ClassStateMachine_c.getManySM_ASMsOnR519(ModelClass_c.getManyO_OBJsOnR2(Subsystem_c.getManyS_SSsOnR1(Domain_c.getManyS_DOMsOnR1(Subsystem_c.getManyS_SSsOnR2(v_mclass))))));



}

PackageableElement_c v_packageableElem = PackageableElement_c.getOnePE_PEOnR8001(v_mclass);


Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_packageableElem);


Component_c v_component = Component_c.getOneC_COnR8003(v_packageableElem);


boolean      v_isInGenericPackage =   (v_package != null) ||   (v_component != null) ;


if ( (v_isInGenericPackage) )
{

if ( (  (v_package != null)) )
{

v_machines = StateMachine_c.getManySM_SMsOnR517(ClassStateMachine_c.getManySM_ASMsOnR519(ModelClass_c.getManyO_OBJsOnR8001(PackageableElement_c.getManyPE_PEsOnR8000(Package_c.getManyEP_PKGsOnR1405(SystemModel_c.getManyS_SYSsOnR1405(v_package))))));



}

else
{

java.util.UUID         v_rootCompIdInPkg = v_component.Getrootcomponentid() ;


Component_c v_rootComponent = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_rootCompIdInPkg);


v_machines = StateMachine_c.getManySM_SMsOnR517(ClassStateMachine_c.getManySM_ASMsOnR519(ModelClass_c.getManyO_OBJsOnR8001(PackageableElement_c.getManyPE_PEsOnR8000(Package_c.getManyEP_PKGsOnR1405(SystemModel_c.getManyS_SYSsOnR1405(Package_c.getManyEP_PKGsOnR8000(PackageableElement_c.getManyPE_PEsOnR8001(v_rootComponent))))))));



}


}

StateMachineEvent_c [] v_events = StateMachineEvent_c.getManySM_EVTsOnR502(v_machines);


StateMachineEvent_c v_copiedEvt = StateMachineEvent_c.getOneSM_EVTOnR525(SemEvent_c.getOneSM_SEVTOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(NewStateTransition_c.getOneSM_NSTXNOnR507(this))));


StateMachineEvent_c  v_evt = null;
for ( int i36580 = 0; i36580 < v_events.length; i36580++)
{
  v_evt = v_events[i36580] ;

if ( (v_copiedEvt == v_evt) )
{

continue;



}

NonLocalEvent_c v_nlevt = NonLocalEvent_c.getOneSM_NLEVTOnR526(SemEvent_c.getOneSM_SEVTOnR525(v_evt));


if ( (  (v_nlevt != null)) )
{

continue;



}

StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR502(v_evt);


if ( (v_sm == v_stateMachine) )
{

continue;



}

if ( (v_stateMachine.Canassignevent(			    
v_evt.getSmevt_id()			    
,v_evt.getSm_id()			    
,false)) )
{

java.util.UUID         v_eventID = v_sm.Findmatchingevent(			    
v_copiedEvt.getSmevt_id()			    
,false			    
,v_stateMachine.getSm_id()) ;


if ( (! v_eventID.equals(Gd_c.Null_unique_id())) )
{

return v_eventID;



}


}


}

return Gd_c.Null_unique_id();



   } // End locateMatchingPolymorphicEvent
  public  void Addsignal(final java.util.UUID         p_Interface_id,final java.util.UUID         p_Signal_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Addsignal") ; 
               final ModelRoot modelRoot = getModelRoot();
  class ExecutableProperty_test37009_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ExecutableProperty_c selected = (ExecutableProperty_c)candidate;
		return (selected.getId().equals(p_Signal_id)) ;
	}
  }
ExecutableProperty_c v_signal = ExecutableProperty_c.getOneC_EPOnR4003(Interface_c.getManyC_IsOnR4012(InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(Component_c.getManyC_CsOnR4204(DomainAsComponent_c.getManyCN_DCsOnR4204(Domain_c.getManyS_DOMsOnR1(Subsystem_c.getManyS_SSsOnR2(ModelClass_c.getManyO_OBJsOnR519(ClassStateMachine_c.getManySM_ASMsOnR517(StateMachine_c.getManySM_SMsOnR505(this)))))))))), new ExecutableProperty_test37009_c());


if ( (  (v_signal == null)) )
{

PackageableElement_c v_pe = PackageableElement_c.getOnePE_PEOnR8001(ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR505(this))));


if ( (  (v_pe != null)) )
{

Package_c v_package = Package_c.getOneEP_PKGOnR8000(v_pe);


java.util.UUID         v_compId = v_package.Getcontainingcomponentid() ;


Component_c v_component = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_compId);


if ( (  (v_component != null)) )
{

  class ExecutableProperty_test37010_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ExecutableProperty_c selected = (ExecutableProperty_c)candidate;
		return (selected.getId().equals(p_Signal_id)) ;
	}
  }
v_signal = ExecutableProperty_c.getOneC_EPOnR4003(Interface_c.getManyC_IsOnR4012(InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_component))), new ExecutableProperty_test37010_c());



}


}


}

  class RequiredExecutableProperty_test37011_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		RequiredExecutableProperty_c selected = (RequiredExecutableProperty_c)candidate;
		return (selected.getExecutableproperty_id().equals(p_Signal_id) && selected.getRequirement_id().equals(p_Interface_id)) ;
	}
  }
RequiredExecutableProperty_c v_reqEP = RequiredExecutableProperty_c.getOneSPR_REPOnR4500(v_signal, new RequiredExecutableProperty_test37011_c());


RequiredSignal_c v_reqSignal = RequiredSignal_c.getOneSPR_RSOnR4502(v_reqEP);


  class ProvidedExecutableProperty_test37012_c implements ClassQueryInterface_c
  {
	public boolean evaluate (Object candidate)
	{
		ProvidedExecutableProperty_c selected = (ProvidedExecutableProperty_c)candidate;
		return (selected.getExecutableproperty_id().equals(p_Signal_id) && selected.getProvision_id().equals(p_Interface_id)) ;
	}
  }
ProvidedExecutableProperty_c v_provEP = ProvidedExecutableProperty_c.getOneSPR_PEPOnR4501(v_signal, new ProvidedExecutableProperty_test37012_c());


ProvidedSignal_c v_provSignal = ProvidedSignal_c.getOneSPR_PSOnR4503(v_provEP);


StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR505(this);


SignalEvent_c v_signalEvent = SignalEvent_c.getOneSM_SGEVTOnR528(v_provSignal);


if (   (v_signalEvent == null) )
{

v_signalEvent = SignalEvent_c.getOneSM_SGEVTOnR529(v_reqSignal);



}

if (   (v_signalEvent == null) )
{

v_signalEvent = new SignalEvent_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_signalEvent));


SemEvent_c v_semEvt = new SemEvent_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_semEvt));


if (v_semEvt != null) {
  v_semEvt.relateAcrossR526To(v_signalEvent);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


String       v_name = "" ;


if (   (v_provSignal != null) )
{

if (v_signalEvent != null) {
  v_signalEvent.relateAcrossR528To(v_provSignal);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_name = v_provSignal.getName() ;



}

else
{

if (v_signalEvent != null) {
  v_signalEvent.relateAcrossR529To(v_reqSignal);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


v_name = v_reqSignal.getName() ;



}

StateMachineEvent_c v_evt = new StateMachineEvent_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_evt));


if (v_evt != null) {
  v_evt.relateAcrossR525To(v_semEvt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_evt != null) {
  v_evt.relateAcrossR502To(v_sm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_evt != null) {
  v_evt.setMning( v_name) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_evt != null) {
  v_evt.setNumb( 1) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_evt != null) {
v_evt.Setuniquenumber(			    
false ) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_semEvt != null) {
v_semEvt.Createdefaultmatrixentries() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}

NoEventTransition_c v_no_evt_txn = NoEventTransition_c.getOneSM_NETXNOnR507(this);


if ( (  (v_no_evt_txn != null)) )
{

StateMachineState_c v_orig_state = StateMachineState_c.getOneSM_STATEOnR508(v_no_evt_txn);


if (v_no_evt_txn != null) {
v_no_evt_txn.unrelateAcrossR508From(v_orig_state);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_no_evt_txn != null) {
v_no_evt_txn.unrelateAcrossR507From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_no_evt_txn != null) {
// get the location of this element in the instance list
// before deleting
if ( v_no_evt_txn.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_no_evt_txn));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}


NewStateTransition_c v_ns_txn = new NewStateTransition_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ns_txn));


  this.relateAcrossR507To(v_ns_txn);


  class StateEventMatrixEntry_test37013_c implements ClassQueryInterface_c
  {
	StateEventMatrixEntry_test37013_c( java.util.UUID         p37014 ) {
		m_p37014 = p37014;
	}
	private java.util.UUID         m_p37014;
	public boolean evaluate (Object candidate)
	{
		StateEventMatrixEntry_c selected = (StateEventMatrixEntry_c)candidate;
		return selected.getSmevt_id().equals(m_p37014) ;
	}
  }
StateEventMatrixEntry_c v_seme = StateEventMatrixEntry_c.getOneSM_SEMEOnR503(v_orig_state, new StateEventMatrixEntry_test37013_c(v_signalEvent.getSmevt_id()));


if (v_seme != null) {
v_seme.Disposechorei() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_ns_txn != null) {
  v_ns_txn.relateAcrossR504To(v_seme);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

else
{

NewStateTransition_c v_ns_txn = NewStateTransition_c.getOneSM_NSTXNOnR507(this);


if ( (  (v_ns_txn != null)) )
{

StateEventMatrixEntry_c v_seme = StateEventMatrixEntry_c.getOneSM_SEMEOnR504(v_ns_txn);


StateMachineState_c v_orig_state = StateMachineState_c.getOneSM_STATEOnR503(v_seme);


CantHappen_c v_ch = new CantHappen_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ch));


if (v_ns_txn != null) {
v_ns_txn.unrelateAcrossR504From(v_seme);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_seme != null) {
  v_seme.relateAcrossR504To(v_ch);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  class StateEventMatrixEntry_test37015_c implements ClassQueryInterface_c
  {
	StateEventMatrixEntry_test37015_c( java.util.UUID         p37016 ) {
		m_p37016 = p37016;
	}
	private java.util.UUID         m_p37016;
	public boolean evaluate (Object candidate)
	{
		StateEventMatrixEntry_c selected = (StateEventMatrixEntry_c)candidate;
		return selected.getSmevt_id().equals(m_p37016) ;
	}
  }
StateEventMatrixEntry_c v_new_seme = StateEventMatrixEntry_c.getOneSM_SEMEOnR503(v_orig_state, new StateEventMatrixEntry_test37015_c(v_signalEvent.getSmevt_id()));


if (v_new_seme != null) {
v_new_seme.Disposechorei() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}


if (v_new_seme != null) {
  v_new_seme.relateAcrossR504To(v_ns_txn);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}


}


   } // End addSignal
  public  void Removesignal()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Removesignal") ; 
               final ModelRoot modelRoot = getModelRoot();
NewStateTransition_c v_ns_txn = NewStateTransition_c.getOneSM_NSTXNOnR507(this);


if ( (  (v_ns_txn != null)) )
{

StateEventMatrixEntry_c v_seme = StateEventMatrixEntry_c.getOneSM_SEMEOnR504(v_ns_txn);


CantHappen_c v_ch = new CantHappen_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ch));


if (v_ns_txn != null) {
v_ns_txn.unrelateAcrossR504From(v_seme);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


if (v_seme != null) {
  v_seme.relateAcrossR504To(v_ch);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


NoEventTransition_c v_ne_txn = new NoEventTransition_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ne_txn));


if (v_ns_txn != null) {
v_ns_txn.unrelateAcrossR507From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


  this.relateAcrossR507To(v_ne_txn);


if (v_ns_txn != null) {
// get the location of this element in the instance list
// before deleting
if ( v_ns_txn.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_ns_txn));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}


StateMachineState_c v_orig_state = StateMachineState_c.getOneSM_STATEOnR503(v_seme);


if (v_ne_txn != null) {
  v_ne_txn.relateAcrossR508To(v_orig_state);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


SemEvent_c v_sevt = SemEvent_c.getOneSM_SEVTOnR503(v_seme);


CantHappen_c [] v_chs = CantHappen_c.getManySM_CHsOnR504(StateEventMatrixEntry_c.getManySM_SEMEsOnR503(v_sevt));


StateMachineState_c [] v_states = StateMachineState_c.getManySM_STATEsOnR503(v_sevt);


if (   (v_chs.length) ==   (v_states.length) )
{

StateMachineEvent_c v_evt = StateMachineEvent_c.getOneSM_EVTOnR525(v_sevt);


if (v_evt != null) {
v_evt.Dispose() ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attempted to call an operation on a null instance.", t);
}



}


}


   } // End removeSignal
  public  void Initialize()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Initialize") ; 
               final ModelRoot modelRoot = getModelRoot();
ActionHome_c v_ah = new ActionHome_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ah));


TransitionActionHome_c v_tah = new TransitionActionHome_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_tah));


if (v_ah != null) {
  v_ah.relateAcrossR513To(v_tah);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


StateMachine_c v_sm = StateMachine_c.getOneSM_SMOnR505(this);


Action_c v_act = new Action_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_act));


if (v_act != null) {
  v_act.setSuc_pars( Parsestatus_c.parseInitial) ;
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Attribute write attempted on null instance.", t);
}


if (v_act != null) {
  v_act.relateAcrossR514To(v_ah);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


if (v_act != null) {
  v_act.relateAcrossR515To(v_sm);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


  this.relateAcrossR530To(v_tah);



   } // End initialize
  public  String       Get_name()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Get_name") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


NewStateTransition_c v_nst = NewStateTransition_c.getOneSM_NSTXNOnR507(this);


if (   (v_nst != null) )
{

v_result = v_nst.Get_name() ;



}

NoEventTransition_c v_net = NoEventTransition_c.getOneSM_NETXNOnR507(this);


if (   (v_net != null) )
{

v_result = v_net.Get_connector_text() ;



}

CreationTransition_c v_ctxn = CreationTransition_c.getOneSM_CRTXNOnR507(this);


if ( (  (v_ctxn != null)) )
{

StateMachineEvent_c v_evt = StateMachineEvent_c.getOneSM_EVTOnR525(SemEvent_c.getOneSM_SEVTOnR526(LocalEvent_c.getOneSM_LEVTOnR509(v_ctxn)));


if ( (  (v_evt != null)) )
{

v_result = v_evt.Get_event_text() ;



}

else
{

v_result = "No Event Assigned" ;



}


}

return v_result;



   } // End get_name
  public  void Updateassignedsignal()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Updateassignedsignal") ; 
               final ModelRoot modelRoot = getModelRoot();
SemEvent_c v_evt = SemEvent_c.getOneSM_SEVTOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(NewStateTransition_c.getOneSM_NSTXNOnR507(this)));


StateMachine_c v_machine = StateMachine_c.getOneSM_SMOnR505(this);


java.util.UUID         v_componentId = v_machine.Getcontainingcomponentid() ;


Component_c v_component = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_componentId);


if ( (  (v_component != null)) )
{

SignalEvent_c v_signalEvt = SignalEvent_c.getOneSM_SGEVTOnR526(v_evt);


ProvidedSignal_c v_proSignal = ProvidedSignal_c.getOneSPR_PSOnR528(v_signalEvt);


Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR4012(InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_component)));


if ( (  (v_proSignal != null) && Util_c.Isproxy(			    
v_proSignal.Converttoinstance())) )
{

java.util.UUID         v_signalId = Locatematchingprovidedsignal() ;


  class ProvidedSignal_test37017_c implements ClassQueryInterface_c
  {
	ProvidedSignal_test37017_c( java.util.UUID         p37018 ) {
		m_p37018 = p37018;
	}
	private java.util.UUID         m_p37018;
	public boolean evaluate (Object candidate)
	{
		ProvidedSignal_c selected = (ProvidedSignal_c)candidate;
		return (selected.getId().equals(m_p37018)) ;
	}
  }
ProvidedSignal_c v_matchingSignal = ProvidedSignal_c.getOneSPR_PSOnR4503(ProvidedExecutableProperty_c.getManySPR_PEPsOnR4501(ExecutableProperty_c.getManyC_EPsOnR4003(v_interfaces)), new ProvidedSignal_test37017_c(v_signalId));


if ( (  (v_matchingSignal != null)) )
{

Removesignal() ;


ProvidedExecutableProperty_c v_pep = ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(v_matchingSignal);


Addsignal(			    
v_pep.getProvision_id()			    
,v_pep.getExecutableproperty_id() ) ;



}

else
{

v_signalId = Locatematchingrequiredsignal() ;


  class RequiredSignal_test37019_c implements ClassQueryInterface_c
  {
	RequiredSignal_test37019_c( java.util.UUID         p37020 ) {
		m_p37020 = p37020;
	}
	private java.util.UUID         m_p37020;
	public boolean evaluate (Object candidate)
	{
		RequiredSignal_c selected = (RequiredSignal_c)candidate;
		return (selected.getId().equals(m_p37020)) ;
	}
  }
RequiredSignal_c v_matchingReqSignal = RequiredSignal_c.getOneSPR_RSOnR4502(RequiredExecutableProperty_c.getManySPR_REPsOnR4500(ExecutableProperty_c.getManyC_EPsOnR4003(v_interfaces)), new RequiredSignal_test37019_c(v_signalId));


if ( (  (v_matchingReqSignal != null)) )
{

Removesignal() ;


RequiredExecutableProperty_c v_rep = RequiredExecutableProperty_c.getOneSPR_REPOnR4502(v_matchingReqSignal);


Addsignal(			    
v_rep.getRequirement_id()			    
,v_rep.getExecutableproperty_id() ) ;



}

else
{

String       v_message = "Matching signals for the following were not found in the " ;


v_message = v_message + "destination." ;


Util_c.Addpastedelementtoproblemlist(			    
v_signalEvt.Get_event_text()			    
,v_message ) ;


Removesignal() ;



}


}


}

RequiredSignal_c v_reqSignal = RequiredSignal_c.getOneSPR_RSOnR529(v_signalEvt);


if ( (  (v_reqSignal != null) && Util_c.Isproxy(			    
v_reqSignal.Converttoinstance())) )
{

java.util.UUID         v_signalId = Locatematchingrequiredsignal() ;


  class RequiredSignal_test37021_c implements ClassQueryInterface_c
  {
	RequiredSignal_test37021_c( java.util.UUID         p37022 ) {
		m_p37022 = p37022;
	}
	private java.util.UUID         m_p37022;
	public boolean evaluate (Object candidate)
	{
		RequiredSignal_c selected = (RequiredSignal_c)candidate;
		return (selected.getId().equals(m_p37022)) ;
	}
  }
RequiredSignal_c v_matchingSignal = RequiredSignal_c.getOneSPR_RSOnR4502(RequiredExecutableProperty_c.getManySPR_REPsOnR4500(ExecutableProperty_c.getManyC_EPsOnR4003(v_interfaces)), new RequiredSignal_test37021_c(v_signalId));


if ( (  (v_matchingSignal != null)) )
{

Removesignal() ;


RequiredExecutableProperty_c v_rep = RequiredExecutableProperty_c.getOneSPR_REPOnR4502(v_matchingSignal);


Addsignal(			    
v_rep.getRequirement_id()			    
,v_rep.getExecutableproperty_id() ) ;



}

else
{

v_signalId = Locatematchingprovidedsignal() ;


  class ProvidedSignal_test37023_c implements ClassQueryInterface_c
  {
	ProvidedSignal_test37023_c( java.util.UUID         p37024 ) {
		m_p37024 = p37024;
	}
	private java.util.UUID         m_p37024;
	public boolean evaluate (Object candidate)
	{
		ProvidedSignal_c selected = (ProvidedSignal_c)candidate;
		return (selected.getId().equals(m_p37024)) ;
	}
  }
ProvidedSignal_c v_matchingProSignal = ProvidedSignal_c.getOneSPR_PSOnR4503(ProvidedExecutableProperty_c.getManySPR_PEPsOnR4501(ExecutableProperty_c.getManyC_EPsOnR4003(v_interfaces)), new ProvidedSignal_test37023_c(v_signalId));


if ( (  (v_matchingProSignal != null)) )
{

Removesignal() ;


ProvidedExecutableProperty_c v_pep = ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(v_matchingProSignal);


Addsignal(			    
v_pep.getProvision_id()			    
,v_pep.getExecutableproperty_id() ) ;



}

else
{

String       v_message = "Matching signals for the following were not found in the " ;


v_message = v_message + "destination." ;


Util_c.Addpastedelementtoproblemlist(			    
v_signalEvt.Get_event_text()			    
,v_message ) ;


Removesignal() ;



}


}


}


}


   } // End updateAssignedSignal
  public  void Updateassignedeventorsignal()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Updateassignedeventorsignal") ; 
               final ModelRoot modelRoot = getModelRoot();
CreationTransition_c v_creationTrans = CreationTransition_c.getOneSM_CRTXNOnR507(this);


if ( (  (v_creationTrans != null)) )
{

Updateassignedevent() ;


return ;



}

SemEvent_c v_evt = SemEvent_c.getOneSM_SEVTOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(NewStateTransition_c.getOneSM_NSTXNOnR507(this)));


if ( (  (v_evt != null)) )
{

SignalEvent_c v_signalEvent = SignalEvent_c.getOneSM_SGEVTOnR526(v_evt);


if ( (  (v_signalEvent != null)) )
{

Updateassignedsignal() ;



}

else
{

Updateassignedevent() ;



}


}


   } // End updateAssignedEventOrSignal
  public  java.util.UUID         Locatematchingprovidedsignal()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Locatematchingprovidedsignal") ; 
               final ModelRoot modelRoot = getModelRoot();
StateMachine_c v_stateMachine = StateMachine_c.getOneSM_SMOnR505(this);


SemEvent_c v_evt = SemEvent_c.getOneSM_SEVTOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(NewStateTransition_c.getOneSM_NSTXNOnR507(this)));


SignalEvent_c v_signalEvt = SignalEvent_c.getOneSM_SGEVTOnR526(v_evt);


ProvidedSignal_c v_proSignal = ProvidedSignal_c.getOneSPR_PSOnR528(v_signalEvt);


String       v_name = "" ;


int  v_direction = Ifdirectiontype_c.ClientServer ;


ExecutableProperty_c v_ep = (ExecutableProperty_c) modelRoot.getInstanceList(ExecutableProperty_c.class).getGlobal(null, Gd_c.Null_unique_id());


if ( (  (v_proSignal != null)) )
{

v_name = v_proSignal.getName() ;


v_ep = ExecutableProperty_c.getOneC_EPOnR4501(ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(v_proSignal));


InterfaceSignal_c v_sig = InterfaceSignal_c.getOneC_ASOnR4004(v_ep);


v_direction = v_sig.getDirection() ;



}

else
{

RequiredSignal_c v_reqSignal = RequiredSignal_c.getOneSPR_RSOnR529(v_signalEvt);


if ( (  (v_reqSignal != null)) )
{

v_name = v_reqSignal.getName() ;


v_direction = Ifdirectiontype_c.ClientServer ;


v_ep = ExecutableProperty_c.getOneC_EPOnR4500(RequiredExecutableProperty_c.getOneSPR_REPOnR4502(v_reqSignal));



}

else
{

String       v_pathMsg = "<No Path Available - Empty instance>" ;


if ( (  (v_stateMachine != null)) )
{

v_pathMsg = v_stateMachine.Getpath() ;



}

User_c.Logerror(			    
"Signal Event had no associated signal."			    
,v_pathMsg ) ;


return Gd_c.Null_unique_id();



}


}

StateMachine_c v_machine = StateMachine_c.getOneSM_SMOnR505(this);


java.util.UUID         v_componentId = v_machine.Getcontainingcomponentid() ;


Component_c v_component = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_componentId);


Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR4012(InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_component)));


PropertyParameter_c [] v_testParameters = PropertyParameter_c.getManyC_PPsOnR4006(v_ep);


ProvidedSignal_c v_matchingSignal = (ProvidedSignal_c) modelRoot.getInstanceList(ProvidedSignal_c.class).getGlobal(null, Gd_c.Null_unique_id());


ProvidedSignal_c [] v_existingProSignals = ProvidedSignal_c.getManySPR_PSsOnR4503(ProvidedExecutableProperty_c.getManySPR_PEPsOnR4501(ExecutableProperty_c.getManyC_EPsOnR4003(v_interfaces)));


ProvidedSignal_c  v_existingSignal = null;
for ( int i36581 = 0; i36581 < v_existingProSignals.length; i36581++)
{
  v_existingSignal = v_existingProSignals[i36581] ;

InterfaceSignal_c v_existingAS = InterfaceSignal_c.getOneC_ASOnR4004(ExecutableProperty_c.getOneC_EPOnR4501(ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(v_existingSignal)));


if ( (v_existingSignal.getName().equals(v_name) && v_existingAS.getDirection() == v_direction) )
{

PropertyParameter_c [] v_parameters = PropertyParameter_c.getManyC_PPsOnR4006(ExecutableProperty_c.getManyC_EPsOnR4501(ProvidedExecutableProperty_c.getManySPR_PEPsOnR4503(v_existingSignal)));


int          v_index = 0 ;


boolean      v_matchNotFound = false ;


PropertyParameter_c  v_testParm = null;
for ( int i36582 = 0; i36582 < v_testParameters.length; i36582++)
{
  v_testParm = v_testParameters[i36582] ;

int          v_internalIndex = 0 ;


DataType_c v_testType = DataType_c.getOneS_DTOnR4007(v_testParm);


PropertyParameter_c  v_parameter = null;
for ( int i36583 = 0; i36583 < v_parameters.length; i36583++)
{
  v_parameter = v_parameters[i36583] ;

if ( (v_internalIndex == v_index) )
{

if ( (! v_testParm.getName().equals(v_parameter.getName())) )
{

v_matchNotFound = true ;


break;



}

DataType_c v_type = DataType_c.getOneS_DTOnR4007(v_parameter);


if ( (! v_testType.getName().equals(v_type.getName())) )
{

v_matchNotFound = true ;


break;



}


}

v_internalIndex = v_internalIndex + 1 ;



}

if ( (v_matchNotFound) )
{

break;



}

v_index = v_index + 1 ;


if ( (  (v_parameters.length) <   (v_testParameters.length)) )
{

v_matchNotFound = true ;


break;



}


}

if ( (  !v_matchNotFound) )
{

if ( (v_existingSignal.Isavailableforallocationto(			    
getTrans_id())) )
{

v_matchingSignal = v_existingSignal ;


break;



}


}


}


}

if ( (  (v_matchingSignal != null)) )
{

return v_matchingSignal.getId();



}

else
{

return Gd_c.Null_unique_id();



}


   } // End locateMatchingProvidedSignal
  public  java.util.UUID         Locatematchingrequiredsignal()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Locatematchingrequiredsignal") ; 
               final ModelRoot modelRoot = getModelRoot();
SemEvent_c v_evt = SemEvent_c.getOneSM_SEVTOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(NewStateTransition_c.getOneSM_NSTXNOnR507(this)));


SignalEvent_c v_signalEvt = SignalEvent_c.getOneSM_SGEVTOnR526(v_evt);


RequiredSignal_c v_reqSignal = RequiredSignal_c.getOneSPR_RSOnR529(v_signalEvt);


StateMachine_c v_machine = StateMachine_c.getOneSM_SMOnR505(this);


String       v_name = "" ;


int  v_direction = Ifdirectiontype_c.ServerClient ;


ExecutableProperty_c v_ep = (ExecutableProperty_c) modelRoot.getInstanceList(ExecutableProperty_c.class).getGlobal(null, Gd_c.Null_unique_id());


if ( (  (v_reqSignal != null)) )
{

v_name = v_reqSignal.getName() ;


v_ep = ExecutableProperty_c.getOneC_EPOnR4500(RequiredExecutableProperty_c.getOneSPR_REPOnR4502(v_reqSignal));


InterfaceSignal_c v_sig = InterfaceSignal_c.getOneC_ASOnR4004(v_ep);


v_direction = v_sig.getDirection() ;



}

else
{

ProvidedSignal_c v_proSignal = ProvidedSignal_c.getOneSPR_PSOnR528(v_signalEvt);


if ( (  (v_proSignal != null)) )
{

v_name = v_proSignal.getName() ;


v_direction = Ifdirectiontype_c.ServerClient ;


v_ep = ExecutableProperty_c.getOneC_EPOnR4501(ProvidedExecutableProperty_c.getOneSPR_PEPOnR4503(v_proSignal));



}

else
{

String       v_pathMsg = "<No Path Available - Empty instance>" ;


if ( (  (v_machine != null)) )
{

v_pathMsg = v_machine.Getpath() ;



}

User_c.Logerror(			    
"Signal Event had no associated signal."			    
,v_pathMsg ) ;


return Gd_c.Null_unique_id();



}


}

java.util.UUID         v_componentId = v_machine.Getcontainingcomponentid() ;


Component_c v_component = (Component_c) modelRoot.getInstanceList(Component_c.class).getGlobal(null, v_componentId);


Interface_c [] v_interfaces = Interface_c.getManyC_IsOnR4012(InterfaceReference_c.getManyC_IRsOnR4016(Port_c.getManyC_POsOnR4010(v_component)));


PropertyParameter_c [] v_testParameters = PropertyParameter_c.getManyC_PPsOnR4006(v_ep);


RequiredSignal_c v_matchingSignal = (RequiredSignal_c) modelRoot.getInstanceList(RequiredSignal_c.class).getGlobal(null, Gd_c.Null_unique_id());


RequiredSignal_c [] v_existingReqSignals = RequiredSignal_c.getManySPR_RSsOnR4502(RequiredExecutableProperty_c.getManySPR_REPsOnR4500(ExecutableProperty_c.getManyC_EPsOnR4003(v_interfaces)));


RequiredSignal_c  v_existingSignal = null;
for ( int i36584 = 0; i36584 < v_existingReqSignals.length; i36584++)
{
  v_existingSignal = v_existingReqSignals[i36584] ;

InterfaceSignal_c v_existingSigAS = InterfaceSignal_c.getOneC_ASOnR4004(ExecutableProperty_c.getOneC_EPOnR4500(RequiredExecutableProperty_c.getOneSPR_REPOnR4502(v_existingSignal)));


if ( (v_existingSignal.getName().equals(v_name) && v_existingSigAS.getDirection() == v_direction) )
{

PropertyParameter_c [] v_parameters = PropertyParameter_c.getManyC_PPsOnR4006(ExecutableProperty_c.getManyC_EPsOnR4500(RequiredExecutableProperty_c.getManySPR_REPsOnR4502(v_existingSignal)));


int          v_index = 0 ;


boolean      v_matchNotFound = false ;


PropertyParameter_c  v_testParm = null;
for ( int i36585 = 0; i36585 < v_testParameters.length; i36585++)
{
  v_testParm = v_testParameters[i36585] ;

int          v_internalIndex = 0 ;


DataType_c v_testType = DataType_c.getOneS_DTOnR4007(v_testParm);


PropertyParameter_c  v_parameter = null;
for ( int i36586 = 0; i36586 < v_parameters.length; i36586++)
{
  v_parameter = v_parameters[i36586] ;

if ( (v_internalIndex == v_index) )
{

if ( (! v_testParm.getName().equals(v_parameter.getName())) )
{

v_matchNotFound = true ;


break;



}

DataType_c v_type = DataType_c.getOneS_DTOnR4007(v_parameter);


if ( (! v_testType.getName().equals(v_type.getName())) )
{

v_matchNotFound = true ;


break;



}


}

v_internalIndex = v_internalIndex + 1 ;



}

if ( (v_matchNotFound) )
{

break;



}

v_index = v_index + 1 ;


if ( (  (v_parameters.length) <   (v_testParameters.length)) )
{

v_matchNotFound = true ;


break;



}


}

if ( (  !v_matchNotFound) )
{

if ( (v_existingSignal.Isavailableforallocationto(			    
getTrans_id())) )
{

v_matchingSignal = v_existingSignal ;


break;



}


}


}


}

if ( (  (v_matchingSignal != null)) )
{

return v_matchingSignal.getId();



}

else
{

return Gd_c.Null_unique_id();



}


   } // End locateMatchingRequiredSignal
  public  String       Get_label()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Get_label") ; 
               final ModelRoot modelRoot = getModelRoot();
String       v_result = "" ;


NewStateTransition_c v_nst = NewStateTransition_c.getOneSM_NSTXNOnR507(this);


if (   (v_nst != null) )
{

v_result = v_nst.Get_name() ;



}

NoEventTransition_c v_net = NoEventTransition_c.getOneSM_NETXNOnR507(this);


if (   (v_net != null) )
{

v_result = v_net.Get_connector_text() ;



}

StateMachineState_c v_destState = StateMachineState_c.getOneSM_STATEOnR506(this);


StateMachineState_c v_srcState = StateMachineState_c.getOneSM_STATEOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(v_nst));


if (   (v_srcState != null) )
{

v_result = v_result + " in " + v_srcState.getName() + " to " + v_destState.getName() ;



}

else
{

v_result = v_result + " to creation state: " + v_destState.getName() ;



}

return v_result;



   } // End get_label
  public  void Mergedispose()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Mergedispose") ; 
               final ModelRoot modelRoot = getModelRoot();

   } // End mergeDispose
  public  void Checkintegrity()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Checkintegrity") ; 
               final ModelRoot modelRoot = getModelRoot();
ModelClass_c v_class = ModelClass_c.getOneO_OBJOnR518(InstanceStateMachine_c.getOneSM_ISMOnR517(StateMachine_c.getOneSM_SMOnR505(this)));


Package_c v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_class));


String       v_machineName = "Instance State Machine" ;


if ( (  (v_package == null)) )
{

v_class = ModelClass_c.getOneO_OBJOnR519(ClassStateMachine_c.getOneSM_ASMOnR517(StateMachine_c.getOneSM_SMOnR505(this)));


v_package = Package_c.getOneEP_PKGOnR8000(PackageableElement_c.getOnePE_PEOnR8001(v_class));


v_machineName = "Class State Machine" ;



}

StateMachineState_c v_state = StateMachineState_c.getOneSM_STATEOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(NewStateTransition_c.getOneSM_NSTXNOnR507(this)));


Transition_c [] v_transitions = Transition_c.getManySM_TXNsOnR507(NewStateTransition_c.getManySM_NSTXNsOnR504(StateEventMatrixEntry_c.getManySM_SEMEsOnR503(v_state)));


Transition_c  v_transition = null;
for ( int i36587 = 0; i36587 < v_transitions.length; i36587++)
{
  v_transition = v_transitions[i36587] ;

SemEvent_c v_selfEvt = SemEvent_c.getOneSM_SEVTOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(NewStateTransition_c.getOneSM_NSTXNOnR507(this)));


SemEvent_c v_otherEvt = SemEvent_c.getOneSM_SEVTOnR503(StateEventMatrixEntry_c.getOneSM_SEMEOnR504(NewStateTransition_c.getOneSM_NSTXNOnR507(v_transition)));


if ( (v_transition != this && v_otherEvt == v_selfEvt) )
{

SystemModel_c v_system = SystemModel_c.getOneS_SYSOnR1405(v_package);


java.util.UUID         v_sys_id = Gd_c.Null_unique_id() ;


if ( (  (v_system != null)) )
{

v_sys_id = v_system.getSys_id() ;



}

IntegrityManager_c.Createissue(modelRoot			    
,"Found another transition with the same event assignment " + "leaving the same state."			    
,Converttoinstance()			    
,getSmstt_id()			    
,Get_name()			    
,v_class.Getpath(			    
true			    
,Get_name()) + "::" + v_machineName + "::" + Get_name()			    
,Severity_c.Error			    
,v_sys_id ) ;



}


}


   } // End checkIntegrity
  public  Object Converttoinstance()
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Converttoinstance") ; 
// just return this instance as an Object
return this;
   } // End convertToInstance
  public  boolean      Mergestatemachineeventassignedlocalevent(final java.util.UUID         p_Event_id)
  {
      Ooaofooa.log.println(ILogger.OPERATION, "Transition", " Operation entered: Transition::Mergestatemachineeventassignedlocalevent") ; 
               final ModelRoot modelRoot = getModelRoot();
if ( (p_Event_id.equals(Gd_c.Null_unique_id())) )
{

NewStateTransition_c v_ns_txn = NewStateTransition_c.getOneSM_NSTXNOnR507(this);


if ( (  (v_ns_txn != null)) )
{

StateEventMatrixEntry_c v_seme = StateEventMatrixEntry_c.getOneSM_SEMEOnR504(v_ns_txn);


SemEvent_c v_event = SemEvent_c.getOneSM_SEVTOnR503(v_seme);


StateMachineState_c v_state = StateMachineState_c.getOneSM_STATEOnR503(v_seme);


  class StateEventMatrixEntry_test37025_c implements ClassQueryInterface_c
  {
	StateEventMatrixEntry_test37025_c( java.util.UUID         p37026, java.util.UUID         p37027 ) {
		m_p37026 = p37026;
				m_p37027 = p37027;
	}
	private java.util.UUID         m_p37026;
		private java.util.UUID         m_p37027;
	public boolean evaluate (Object candidate)
	{
		StateEventMatrixEntry_c selected = (StateEventMatrixEntry_c)candidate;
		return (selected.getSmevt_id().equals(m_p37026) && selected.getSmstt_id().equals(m_p37027)) ;
	}
  }
StateEventMatrixEntry_c [] v_existing = StateEventMatrixEntry_c.getManySM_SEMEsOnR503(v_event, new StateEventMatrixEntry_test37025_c(v_event.getSmevt_id(), v_state.getSmstt_id()));


if ( (  (v_existing.length) == 1) )
{

CantHappen_c v_ch = new CantHappen_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ch));


if (v_seme != null) {
  v_seme.relateAcrossR504To(v_ch);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}



}

if (v_ns_txn != null) {
v_ns_txn.unrelateAcrossR504From(v_seme);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


NoEventTransition_c v_ne_txn = new NoEventTransition_c(modelRoot) ;
Ooaofooa.getDefaultInstance().fireModelElementCreated(new BaseModelDelta(Modeleventnotification_c.DELTA_NEW, v_ne_txn));


if (v_ns_txn != null) {
v_ns_txn.unrelateAcrossR507From(this);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}


  this.relateAcrossR507To(v_ne_txn);


if (v_ns_txn != null) {
// get the location of this element in the instance list
// before deleting
if ( v_ns_txn.delete() ) {
    Ooaofooa.getDefaultInstance().fireModelElementDeleted(new BaseModelDelta(Modeleventnotification_c.DELTA_DELETE, v_ns_txn));
}
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Delete attempted on null instance.", t);
}


StateMachineState_c v_orig_state = StateMachineState_c.getOneSM_STATEOnR503(v_seme);


if (v_ne_txn != null) {
  v_ne_txn.relateAcrossR508To(v_orig_state);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Relate attempted on null left hand instance.", t);
}


StateMachineState_c v_dest_state = StateMachineState_c.getOneSM_STATEOnR506(this);



}

else
{

CreationTransition_c v_cr_txn = CreationTransition_c.getOneSM_CRTXNOnR507(this);


LocalEvent_c v_levt = LocalEvent_c.getOneSM_LEVTOnR509(v_cr_txn);


if ( (  (v_levt != null)) )
{

if (v_cr_txn != null) {
v_cr_txn.unrelateAcrossR509From(v_levt);
}
else {
  Throwable t = new Throwable();
  t.fillInStackTrace();
  CorePlugin.logError("Unrelate attempted on null left hand instance.", t);
}



}


}

return true;



}

return false;



   } // End mergeStateMachineEventAssignedLocalEvent

  // end transform functions


  public Object getAdapter(Class adapter) {
    Object superAdapter = super.getAdapter(adapter);
    if(superAdapter != null) {
    	return superAdapter;
    }
    if (adapter == IActionFilter.class)
    {
        return TransitionActionFilter.getSingleton();
    }
	  return null;
  }
} // end Transition
